
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800200  00000502  00000596  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000502  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800214  00800214  000005aa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005aa  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  000005da  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000032e  00000000  00000000  00000632  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001f9  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006d4  00000000  00000000  00000b59  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00001230  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0001186e  00000000  00000000  000012a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000026  00000000  00000000  00012b16  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00012b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000390c  00000000  00000000  00012b74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e0       	ldi	r30, 0x02	; 2
  fc:	f5 e0       	ldi	r31, 0x05	; 5
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 31       	cpi	r26, 0x14	; 20
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e1       	ldi	r26, 0x14	; 20
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 31       	cpi	r26, 0x1E	; 30
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	26 d0       	rcall	.+76     	; 0x16c <main>
 120:	ee c1       	rjmp	.+988    	; 0x4fe <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <usart_transmit_to_computer>:
}


void usart_transmit_to_computer(unsigned int data) {
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)))
 124:	e0 ec       	ldi	r30, 0xC0	; 192
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	90 81       	ld	r25, Z
 12a:	95 ff       	sbrs	r25, 5
 12c:	fd cf       	rjmp	.-6      	; 0x128 <usart_transmit_to_computer+0x4>
	;
	/* Put data into buffer (sends the data) */
	UDR0 = data;
 12e:	80 93 c6 00 	sts	0x00C6, r24
 132:	08 95       	ret

00000134 <usart_receive_from_computer>:
}


unsigned char usart_receive_from_computer(void) {
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)))
 134:	e0 ec       	ldi	r30, 0xC0	; 192
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	80 81       	ld	r24, Z
 13a:	88 23       	and	r24, r24
 13c:	ec f7       	brge	.-6      	; 0x138 <usart_receive_from_computer+0x4>
	;
	
	/* Get and return data from buffer */
	return UDR0;
 13e:	80 91 c6 00 	lds	r24, 0x00C6
}
 142:	08 95       	ret

00000144 <usart_init>:
#include <stdio.h>


void usart_init(unsigned int ubbr) {
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubbr>>8);
 144:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)(ubbr);
 148:	80 93 c4 00 	sts	0x00C4, r24
	
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
 14c:	88 e1       	ldi	r24, 0x18	; 24
 14e:	80 93 c1 00 	sts	0x00C1, r24
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);
 152:	8e e0       	ldi	r24, 0x0E	; 14
 154:	80 93 c2 00 	sts	0x00C2, r24
	
	
	/* Enable printf-thing */
	fdevopen(usart_transmit_to_computer, usart_receive_from_computer);
 158:	6a e9       	ldi	r22, 0x9A	; 154
 15a:	70 e0       	ldi	r23, 0x00	; 0
 15c:	82 e9       	ldi	r24, 0x92	; 146
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	0f c0       	rjmp	.+30     	; 0x180 <fdevopen>
 162:	08 95       	ret

00000164 <initialize>:
#include <stdint.h>
#include <stdio.h>
#include <stdbool.h>

void initialize(){
	usart_init(MYUBRR);
 164:	87 e6       	ldi	r24, 0x67	; 103
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	ed cf       	rjmp	.-38     	; 0x144 <usart_init>
 16a:	08 95       	ret

0000016c <main>:
}

int main(void){
	initialize();
 16c:	fb df       	rcall	.-10     	; 0x164 <initialize>
	usart_transmit_to_computer('a');
 16e:	81 e6       	ldi	r24, 0x61	; 97
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	d8 df       	rcall	.-80     	; 0x124 <usart_transmit_to_computer>
	printf("\nDet funker.\n");
 174:	86 e0       	ldi	r24, 0x06	; 6
 176:	92 e0       	ldi	r25, 0x02	; 2
 178:	4d d0       	rcall	.+154    	; 0x214 <puts>
	return 0;
}
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	08 95       	ret

00000180 <fdevopen>:
 180:	0f 93       	push	r16
 182:	1f 93       	push	r17
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
 188:	ec 01       	movw	r28, r24
 18a:	8b 01       	movw	r16, r22
 18c:	00 97       	sbiw	r24, 0x00	; 0
 18e:	31 f4       	brne	.+12     	; 0x19c <fdevopen+0x1c>
 190:	61 15       	cp	r22, r1
 192:	71 05       	cpc	r23, r1
 194:	19 f4       	brne	.+6      	; 0x19c <fdevopen+0x1c>
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	37 c0       	rjmp	.+110    	; 0x20a <fdevopen+0x8a>
 19c:	6e e0       	ldi	r22, 0x0E	; 14
 19e:	70 e0       	ldi	r23, 0x00	; 0
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	64 d0       	rcall	.+200    	; 0x26e <calloc>
 1a6:	fc 01       	movw	r30, r24
 1a8:	00 97       	sbiw	r24, 0x00	; 0
 1aa:	a9 f3       	breq	.-22     	; 0x196 <fdevopen+0x16>
 1ac:	80 e8       	ldi	r24, 0x80	; 128
 1ae:	83 83       	std	Z+3, r24	; 0x03
 1b0:	01 15       	cp	r16, r1
 1b2:	11 05       	cpc	r17, r1
 1b4:	71 f0       	breq	.+28     	; 0x1d2 <fdevopen+0x52>
 1b6:	13 87       	std	Z+11, r17	; 0x0b
 1b8:	02 87       	std	Z+10, r16	; 0x0a
 1ba:	81 e8       	ldi	r24, 0x81	; 129
 1bc:	83 83       	std	Z+3, r24	; 0x03
 1be:	80 91 14 02 	lds	r24, 0x0214
 1c2:	90 91 15 02 	lds	r25, 0x0215
 1c6:	89 2b       	or	r24, r25
 1c8:	21 f4       	brne	.+8      	; 0x1d2 <fdevopen+0x52>
 1ca:	f0 93 15 02 	sts	0x0215, r31
 1ce:	e0 93 14 02 	sts	0x0214, r30
 1d2:	20 97       	sbiw	r28, 0x00	; 0
 1d4:	c9 f0       	breq	.+50     	; 0x208 <fdevopen+0x88>
 1d6:	d1 87       	std	Z+9, r29	; 0x09
 1d8:	c0 87       	std	Z+8, r28	; 0x08
 1da:	83 81       	ldd	r24, Z+3	; 0x03
 1dc:	82 60       	ori	r24, 0x02	; 2
 1de:	83 83       	std	Z+3, r24	; 0x03
 1e0:	80 91 16 02 	lds	r24, 0x0216
 1e4:	90 91 17 02 	lds	r25, 0x0217
 1e8:	89 2b       	or	r24, r25
 1ea:	71 f4       	brne	.+28     	; 0x208 <fdevopen+0x88>
 1ec:	f0 93 17 02 	sts	0x0217, r31
 1f0:	e0 93 16 02 	sts	0x0216, r30
 1f4:	80 91 18 02 	lds	r24, 0x0218
 1f8:	90 91 19 02 	lds	r25, 0x0219
 1fc:	89 2b       	or	r24, r25
 1fe:	21 f4       	brne	.+8      	; 0x208 <fdevopen+0x88>
 200:	f0 93 19 02 	sts	0x0219, r31
 204:	e0 93 18 02 	sts	0x0218, r30
 208:	cf 01       	movw	r24, r30
 20a:	df 91       	pop	r29
 20c:	cf 91       	pop	r28
 20e:	1f 91       	pop	r17
 210:	0f 91       	pop	r16
 212:	08 95       	ret

00000214 <puts>:
 214:	0f 93       	push	r16
 216:	1f 93       	push	r17
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	e0 91 16 02 	lds	r30, 0x0216
 220:	f0 91 17 02 	lds	r31, 0x0217
 224:	23 81       	ldd	r18, Z+3	; 0x03
 226:	21 ff       	sbrs	r18, 1
 228:	1b c0       	rjmp	.+54     	; 0x260 <puts+0x4c>
 22a:	ec 01       	movw	r28, r24
 22c:	00 e0       	ldi	r16, 0x00	; 0
 22e:	10 e0       	ldi	r17, 0x00	; 0
 230:	89 91       	ld	r24, Y+
 232:	60 91 16 02 	lds	r22, 0x0216
 236:	70 91 17 02 	lds	r23, 0x0217
 23a:	db 01       	movw	r26, r22
 23c:	18 96       	adiw	r26, 0x08	; 8
 23e:	ed 91       	ld	r30, X+
 240:	fc 91       	ld	r31, X
 242:	19 97       	sbiw	r26, 0x09	; 9
 244:	88 23       	and	r24, r24
 246:	31 f0       	breq	.+12     	; 0x254 <puts+0x40>
 248:	19 95       	eicall
 24a:	89 2b       	or	r24, r25
 24c:	89 f3       	breq	.-30     	; 0x230 <puts+0x1c>
 24e:	0f ef       	ldi	r16, 0xFF	; 255
 250:	1f ef       	ldi	r17, 0xFF	; 255
 252:	ee cf       	rjmp	.-36     	; 0x230 <puts+0x1c>
 254:	8a e0       	ldi	r24, 0x0A	; 10
 256:	19 95       	eicall
 258:	89 2b       	or	r24, r25
 25a:	11 f4       	brne	.+4      	; 0x260 <puts+0x4c>
 25c:	c8 01       	movw	r24, r16
 25e:	02 c0       	rjmp	.+4      	; 0x264 <puts+0x50>
 260:	8f ef       	ldi	r24, 0xFF	; 255
 262:	9f ef       	ldi	r25, 0xFF	; 255
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	0f 91       	pop	r16
 26c:	08 95       	ret

0000026e <calloc>:
 26e:	0f 93       	push	r16
 270:	1f 93       	push	r17
 272:	cf 93       	push	r28
 274:	df 93       	push	r29
 276:	86 9f       	mul	r24, r22
 278:	80 01       	movw	r16, r0
 27a:	87 9f       	mul	r24, r23
 27c:	10 0d       	add	r17, r0
 27e:	96 9f       	mul	r25, r22
 280:	10 0d       	add	r17, r0
 282:	11 24       	eor	r1, r1
 284:	c8 01       	movw	r24, r16
 286:	0d d0       	rcall	.+26     	; 0x2a2 <malloc>
 288:	ec 01       	movw	r28, r24
 28a:	00 97       	sbiw	r24, 0x00	; 0
 28c:	21 f0       	breq	.+8      	; 0x296 <calloc+0x28>
 28e:	a8 01       	movw	r20, r16
 290:	60 e0       	ldi	r22, 0x00	; 0
 292:	70 e0       	ldi	r23, 0x00	; 0
 294:	2d d1       	rcall	.+602    	; 0x4f0 <memset>
 296:	ce 01       	movw	r24, r28
 298:	df 91       	pop	r29
 29a:	cf 91       	pop	r28
 29c:	1f 91       	pop	r17
 29e:	0f 91       	pop	r16
 2a0:	08 95       	ret

000002a2 <malloc>:
 2a2:	cf 93       	push	r28
 2a4:	df 93       	push	r29
 2a6:	82 30       	cpi	r24, 0x02	; 2
 2a8:	91 05       	cpc	r25, r1
 2aa:	10 f4       	brcc	.+4      	; 0x2b0 <malloc+0xe>
 2ac:	82 e0       	ldi	r24, 0x02	; 2
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	e0 91 1c 02 	lds	r30, 0x021C
 2b4:	f0 91 1d 02 	lds	r31, 0x021D
 2b8:	20 e0       	ldi	r18, 0x00	; 0
 2ba:	30 e0       	ldi	r19, 0x00	; 0
 2bc:	a0 e0       	ldi	r26, 0x00	; 0
 2be:	b0 e0       	ldi	r27, 0x00	; 0
 2c0:	30 97       	sbiw	r30, 0x00	; 0
 2c2:	39 f1       	breq	.+78     	; 0x312 <malloc+0x70>
 2c4:	40 81       	ld	r20, Z
 2c6:	51 81       	ldd	r21, Z+1	; 0x01
 2c8:	48 17       	cp	r20, r24
 2ca:	59 07       	cpc	r21, r25
 2cc:	b8 f0       	brcs	.+46     	; 0x2fc <malloc+0x5a>
 2ce:	48 17       	cp	r20, r24
 2d0:	59 07       	cpc	r21, r25
 2d2:	71 f4       	brne	.+28     	; 0x2f0 <malloc+0x4e>
 2d4:	82 81       	ldd	r24, Z+2	; 0x02
 2d6:	93 81       	ldd	r25, Z+3	; 0x03
 2d8:	10 97       	sbiw	r26, 0x00	; 0
 2da:	29 f0       	breq	.+10     	; 0x2e6 <malloc+0x44>
 2dc:	13 96       	adiw	r26, 0x03	; 3
 2de:	9c 93       	st	X, r25
 2e0:	8e 93       	st	-X, r24
 2e2:	12 97       	sbiw	r26, 0x02	; 2
 2e4:	2c c0       	rjmp	.+88     	; 0x33e <malloc+0x9c>
 2e6:	90 93 1d 02 	sts	0x021D, r25
 2ea:	80 93 1c 02 	sts	0x021C, r24
 2ee:	27 c0       	rjmp	.+78     	; 0x33e <malloc+0x9c>
 2f0:	21 15       	cp	r18, r1
 2f2:	31 05       	cpc	r19, r1
 2f4:	31 f0       	breq	.+12     	; 0x302 <malloc+0x60>
 2f6:	42 17       	cp	r20, r18
 2f8:	53 07       	cpc	r21, r19
 2fa:	18 f0       	brcs	.+6      	; 0x302 <malloc+0x60>
 2fc:	a9 01       	movw	r20, r18
 2fe:	db 01       	movw	r26, r22
 300:	01 c0       	rjmp	.+2      	; 0x304 <malloc+0x62>
 302:	ef 01       	movw	r28, r30
 304:	9a 01       	movw	r18, r20
 306:	bd 01       	movw	r22, r26
 308:	df 01       	movw	r26, r30
 30a:	02 80       	ldd	r0, Z+2	; 0x02
 30c:	f3 81       	ldd	r31, Z+3	; 0x03
 30e:	e0 2d       	mov	r30, r0
 310:	d7 cf       	rjmp	.-82     	; 0x2c0 <malloc+0x1e>
 312:	21 15       	cp	r18, r1
 314:	31 05       	cpc	r19, r1
 316:	f9 f0       	breq	.+62     	; 0x356 <malloc+0xb4>
 318:	28 1b       	sub	r18, r24
 31a:	39 0b       	sbc	r19, r25
 31c:	24 30       	cpi	r18, 0x04	; 4
 31e:	31 05       	cpc	r19, r1
 320:	80 f4       	brcc	.+32     	; 0x342 <malloc+0xa0>
 322:	8a 81       	ldd	r24, Y+2	; 0x02
 324:	9b 81       	ldd	r25, Y+3	; 0x03
 326:	61 15       	cp	r22, r1
 328:	71 05       	cpc	r23, r1
 32a:	21 f0       	breq	.+8      	; 0x334 <malloc+0x92>
 32c:	fb 01       	movw	r30, r22
 32e:	93 83       	std	Z+3, r25	; 0x03
 330:	82 83       	std	Z+2, r24	; 0x02
 332:	04 c0       	rjmp	.+8      	; 0x33c <malloc+0x9a>
 334:	90 93 1d 02 	sts	0x021D, r25
 338:	80 93 1c 02 	sts	0x021C, r24
 33c:	fe 01       	movw	r30, r28
 33e:	32 96       	adiw	r30, 0x02	; 2
 340:	44 c0       	rjmp	.+136    	; 0x3ca <malloc+0x128>
 342:	fe 01       	movw	r30, r28
 344:	e2 0f       	add	r30, r18
 346:	f3 1f       	adc	r31, r19
 348:	81 93       	st	Z+, r24
 34a:	91 93       	st	Z+, r25
 34c:	22 50       	subi	r18, 0x02	; 2
 34e:	31 09       	sbc	r19, r1
 350:	39 83       	std	Y+1, r19	; 0x01
 352:	28 83       	st	Y, r18
 354:	3a c0       	rjmp	.+116    	; 0x3ca <malloc+0x128>
 356:	20 91 1a 02 	lds	r18, 0x021A
 35a:	30 91 1b 02 	lds	r19, 0x021B
 35e:	23 2b       	or	r18, r19
 360:	41 f4       	brne	.+16     	; 0x372 <malloc+0xd0>
 362:	20 91 02 02 	lds	r18, 0x0202
 366:	30 91 03 02 	lds	r19, 0x0203
 36a:	30 93 1b 02 	sts	0x021B, r19
 36e:	20 93 1a 02 	sts	0x021A, r18
 372:	20 91 00 02 	lds	r18, 0x0200
 376:	30 91 01 02 	lds	r19, 0x0201
 37a:	21 15       	cp	r18, r1
 37c:	31 05       	cpc	r19, r1
 37e:	41 f4       	brne	.+16     	; 0x390 <malloc+0xee>
 380:	2d b7       	in	r18, 0x3d	; 61
 382:	3e b7       	in	r19, 0x3e	; 62
 384:	40 91 04 02 	lds	r20, 0x0204
 388:	50 91 05 02 	lds	r21, 0x0205
 38c:	24 1b       	sub	r18, r20
 38e:	35 0b       	sbc	r19, r21
 390:	e0 91 1a 02 	lds	r30, 0x021A
 394:	f0 91 1b 02 	lds	r31, 0x021B
 398:	e2 17       	cp	r30, r18
 39a:	f3 07       	cpc	r31, r19
 39c:	a0 f4       	brcc	.+40     	; 0x3c6 <malloc+0x124>
 39e:	2e 1b       	sub	r18, r30
 3a0:	3f 0b       	sbc	r19, r31
 3a2:	28 17       	cp	r18, r24
 3a4:	39 07       	cpc	r19, r25
 3a6:	78 f0       	brcs	.+30     	; 0x3c6 <malloc+0x124>
 3a8:	ac 01       	movw	r20, r24
 3aa:	4e 5f       	subi	r20, 0xFE	; 254
 3ac:	5f 4f       	sbci	r21, 0xFF	; 255
 3ae:	24 17       	cp	r18, r20
 3b0:	35 07       	cpc	r19, r21
 3b2:	48 f0       	brcs	.+18     	; 0x3c6 <malloc+0x124>
 3b4:	4e 0f       	add	r20, r30
 3b6:	5f 1f       	adc	r21, r31
 3b8:	50 93 1b 02 	sts	0x021B, r21
 3bc:	40 93 1a 02 	sts	0x021A, r20
 3c0:	81 93       	st	Z+, r24
 3c2:	91 93       	st	Z+, r25
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <malloc+0x128>
 3c6:	e0 e0       	ldi	r30, 0x00	; 0
 3c8:	f0 e0       	ldi	r31, 0x00	; 0
 3ca:	cf 01       	movw	r24, r30
 3cc:	df 91       	pop	r29
 3ce:	cf 91       	pop	r28
 3d0:	08 95       	ret

000003d2 <free>:
 3d2:	cf 93       	push	r28
 3d4:	df 93       	push	r29
 3d6:	00 97       	sbiw	r24, 0x00	; 0
 3d8:	09 f4       	brne	.+2      	; 0x3dc <free+0xa>
 3da:	87 c0       	rjmp	.+270    	; 0x4ea <free+0x118>
 3dc:	fc 01       	movw	r30, r24
 3de:	32 97       	sbiw	r30, 0x02	; 2
 3e0:	13 82       	std	Z+3, r1	; 0x03
 3e2:	12 82       	std	Z+2, r1	; 0x02
 3e4:	c0 91 1c 02 	lds	r28, 0x021C
 3e8:	d0 91 1d 02 	lds	r29, 0x021D
 3ec:	20 97       	sbiw	r28, 0x00	; 0
 3ee:	81 f4       	brne	.+32     	; 0x410 <free+0x3e>
 3f0:	20 81       	ld	r18, Z
 3f2:	31 81       	ldd	r19, Z+1	; 0x01
 3f4:	28 0f       	add	r18, r24
 3f6:	39 1f       	adc	r19, r25
 3f8:	80 91 1a 02 	lds	r24, 0x021A
 3fc:	90 91 1b 02 	lds	r25, 0x021B
 400:	82 17       	cp	r24, r18
 402:	93 07       	cpc	r25, r19
 404:	79 f5       	brne	.+94     	; 0x464 <free+0x92>
 406:	f0 93 1b 02 	sts	0x021B, r31
 40a:	e0 93 1a 02 	sts	0x021A, r30
 40e:	6d c0       	rjmp	.+218    	; 0x4ea <free+0x118>
 410:	de 01       	movw	r26, r28
 412:	20 e0       	ldi	r18, 0x00	; 0
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	ae 17       	cp	r26, r30
 418:	bf 07       	cpc	r27, r31
 41a:	50 f4       	brcc	.+20     	; 0x430 <free+0x5e>
 41c:	12 96       	adiw	r26, 0x02	; 2
 41e:	4d 91       	ld	r20, X+
 420:	5c 91       	ld	r21, X
 422:	13 97       	sbiw	r26, 0x03	; 3
 424:	9d 01       	movw	r18, r26
 426:	41 15       	cp	r20, r1
 428:	51 05       	cpc	r21, r1
 42a:	09 f1       	breq	.+66     	; 0x46e <free+0x9c>
 42c:	da 01       	movw	r26, r20
 42e:	f3 cf       	rjmp	.-26     	; 0x416 <free+0x44>
 430:	b3 83       	std	Z+3, r27	; 0x03
 432:	a2 83       	std	Z+2, r26	; 0x02
 434:	40 81       	ld	r20, Z
 436:	51 81       	ldd	r21, Z+1	; 0x01
 438:	84 0f       	add	r24, r20
 43a:	95 1f       	adc	r25, r21
 43c:	8a 17       	cp	r24, r26
 43e:	9b 07       	cpc	r25, r27
 440:	71 f4       	brne	.+28     	; 0x45e <free+0x8c>
 442:	8d 91       	ld	r24, X+
 444:	9c 91       	ld	r25, X
 446:	11 97       	sbiw	r26, 0x01	; 1
 448:	84 0f       	add	r24, r20
 44a:	95 1f       	adc	r25, r21
 44c:	02 96       	adiw	r24, 0x02	; 2
 44e:	91 83       	std	Z+1, r25	; 0x01
 450:	80 83       	st	Z, r24
 452:	12 96       	adiw	r26, 0x02	; 2
 454:	8d 91       	ld	r24, X+
 456:	9c 91       	ld	r25, X
 458:	13 97       	sbiw	r26, 0x03	; 3
 45a:	93 83       	std	Z+3, r25	; 0x03
 45c:	82 83       	std	Z+2, r24	; 0x02
 45e:	21 15       	cp	r18, r1
 460:	31 05       	cpc	r19, r1
 462:	29 f4       	brne	.+10     	; 0x46e <free+0x9c>
 464:	f0 93 1d 02 	sts	0x021D, r31
 468:	e0 93 1c 02 	sts	0x021C, r30
 46c:	3e c0       	rjmp	.+124    	; 0x4ea <free+0x118>
 46e:	d9 01       	movw	r26, r18
 470:	13 96       	adiw	r26, 0x03	; 3
 472:	fc 93       	st	X, r31
 474:	ee 93       	st	-X, r30
 476:	12 97       	sbiw	r26, 0x02	; 2
 478:	4d 91       	ld	r20, X+
 47a:	5d 91       	ld	r21, X+
 47c:	a4 0f       	add	r26, r20
 47e:	b5 1f       	adc	r27, r21
 480:	ea 17       	cp	r30, r26
 482:	fb 07       	cpc	r31, r27
 484:	79 f4       	brne	.+30     	; 0x4a4 <free+0xd2>
 486:	80 81       	ld	r24, Z
 488:	91 81       	ldd	r25, Z+1	; 0x01
 48a:	84 0f       	add	r24, r20
 48c:	95 1f       	adc	r25, r21
 48e:	02 96       	adiw	r24, 0x02	; 2
 490:	d9 01       	movw	r26, r18
 492:	11 96       	adiw	r26, 0x01	; 1
 494:	9c 93       	st	X, r25
 496:	8e 93       	st	-X, r24
 498:	82 81       	ldd	r24, Z+2	; 0x02
 49a:	93 81       	ldd	r25, Z+3	; 0x03
 49c:	13 96       	adiw	r26, 0x03	; 3
 49e:	9c 93       	st	X, r25
 4a0:	8e 93       	st	-X, r24
 4a2:	12 97       	sbiw	r26, 0x02	; 2
 4a4:	e0 e0       	ldi	r30, 0x00	; 0
 4a6:	f0 e0       	ldi	r31, 0x00	; 0
 4a8:	8a 81       	ldd	r24, Y+2	; 0x02
 4aa:	9b 81       	ldd	r25, Y+3	; 0x03
 4ac:	00 97       	sbiw	r24, 0x00	; 0
 4ae:	19 f0       	breq	.+6      	; 0x4b6 <free+0xe4>
 4b0:	fe 01       	movw	r30, r28
 4b2:	ec 01       	movw	r28, r24
 4b4:	f9 cf       	rjmp	.-14     	; 0x4a8 <free+0xd6>
 4b6:	ce 01       	movw	r24, r28
 4b8:	02 96       	adiw	r24, 0x02	; 2
 4ba:	28 81       	ld	r18, Y
 4bc:	39 81       	ldd	r19, Y+1	; 0x01
 4be:	82 0f       	add	r24, r18
 4c0:	93 1f       	adc	r25, r19
 4c2:	20 91 1a 02 	lds	r18, 0x021A
 4c6:	30 91 1b 02 	lds	r19, 0x021B
 4ca:	28 17       	cp	r18, r24
 4cc:	39 07       	cpc	r19, r25
 4ce:	69 f4       	brne	.+26     	; 0x4ea <free+0x118>
 4d0:	30 97       	sbiw	r30, 0x00	; 0
 4d2:	29 f4       	brne	.+10     	; 0x4de <free+0x10c>
 4d4:	10 92 1d 02 	sts	0x021D, r1
 4d8:	10 92 1c 02 	sts	0x021C, r1
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <free+0x110>
 4de:	13 82       	std	Z+3, r1	; 0x03
 4e0:	12 82       	std	Z+2, r1	; 0x02
 4e2:	d0 93 1b 02 	sts	0x021B, r29
 4e6:	c0 93 1a 02 	sts	0x021A, r28
 4ea:	df 91       	pop	r29
 4ec:	cf 91       	pop	r28
 4ee:	08 95       	ret

000004f0 <memset>:
 4f0:	dc 01       	movw	r26, r24
 4f2:	01 c0       	rjmp	.+2      	; 0x4f6 <memset+0x6>
 4f4:	6d 93       	st	X+, r22
 4f6:	41 50       	subi	r20, 0x01	; 1
 4f8:	50 40       	sbci	r21, 0x00	; 0
 4fa:	e0 f7       	brcc	.-8      	; 0x4f4 <memset+0x4>
 4fc:	08 95       	ret

000004fe <_exit>:
 4fe:	f8 94       	cli

00000500 <__stop_program>:
 500:	ff cf       	rjmp	.-2      	; 0x500 <__stop_program>
