
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001f2  00800200  00001290  00001324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001290  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  008003f2  008003f2  00001516  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001516  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001b0  00000000  00000000  00001572  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001592  00000000  00000000  00001722  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000988  00000000  00000000  00002cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001a1d  00000000  00000000  0000363c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000470  00000000  00000000  0000505c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00012473  00000000  00000000  000054cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000bd9  00000000  00000000  0001793f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000170  00000000  00000000  00018518  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00004383  00000000  00000000  00018688  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	a4 c0       	rjmp	.+328    	; 0x162 <__vector_6>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e0 e9       	ldi	r30, 0x90	; 144
      fc:	f2 e1       	ldi	r31, 0x12	; 18
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 3f       	cpi	r26, 0xF2	; 242
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	24 e0       	ldi	r18, 0x04	; 4
     110:	a2 ef       	ldi	r26, 0xF2	; 242
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a0 30       	cpi	r26, 0x00	; 0
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	1b d2       	rcall	.+1078   	; 0x556 <main>
     120:	0c 94 46 09 	jmp	0x128c	; 0x128c <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <CAN_int_vect>:
	}
	
	uint8_t buffer_states = (uint8_t)(1 << buffer_numb);
	MCP2515_request_to_send(buffer_states);
	
}
     126:	cf 93       	push	r28
     128:	8c e2       	ldi	r24, 0x2C	; 44
     12a:	ed d0       	rcall	.+474    	; 0x306 <MCP2515_read>
     12c:	c8 2f       	mov	r28, r24
     12e:	80 ff       	sbrs	r24, 0
     130:	0a c0       	rjmp	.+20     	; 0x146 <CAN_int_vect+0x20>
     132:	40 e0       	ldi	r20, 0x00	; 0
     134:	61 e0       	ldi	r22, 0x01	; 1
     136:	8c e2       	ldi	r24, 0x2C	; 44
     138:	f3 d0       	rcall	.+486    	; 0x320 <MCP2515_bit_modify>
     13a:	21 e0       	ldi	r18, 0x01	; 1
     13c:	30 e0       	ldi	r19, 0x00	; 0
     13e:	30 93 f5 03 	sts	0x03F5, r19
     142:	20 93 f4 03 	sts	0x03F4, r18
     146:	c1 ff       	sbrs	r28, 1
     148:	0a c0       	rjmp	.+20     	; 0x15e <CAN_int_vect+0x38>
     14a:	40 e0       	ldi	r20, 0x00	; 0
     14c:	62 e0       	ldi	r22, 0x02	; 2
     14e:	8c e2       	ldi	r24, 0x2C	; 44
     150:	e7 d0       	rcall	.+462    	; 0x320 <MCP2515_bit_modify>
     152:	81 e0       	ldi	r24, 0x01	; 1
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	90 93 f3 03 	sts	0x03F3, r25
     15a:	80 93 f2 03 	sts	0x03F2, r24
     15e:	cf 91       	pop	r28
     160:	08 95       	ret

00000162 <__vector_6>:
     162:	1f 92       	push	r1
     164:	0f 92       	push	r0
     166:	0f b6       	in	r0, 0x3f	; 63
     168:	0f 92       	push	r0
     16a:	11 24       	eor	r1, r1
     16c:	0b b6       	in	r0, 0x3b	; 59
     16e:	0f 92       	push	r0
     170:	2f 93       	push	r18
     172:	3f 93       	push	r19
     174:	4f 93       	push	r20
     176:	5f 93       	push	r21
     178:	6f 93       	push	r22
     17a:	7f 93       	push	r23
     17c:	8f 93       	push	r24
     17e:	9f 93       	push	r25
     180:	af 93       	push	r26
     182:	bf 93       	push	r27
     184:	ef 93       	push	r30
     186:	ff 93       	push	r31
     188:	ce df       	rcall	.-100    	; 0x126 <CAN_int_vect>
     18a:	ff 91       	pop	r31
     18c:	ef 91       	pop	r30
     18e:	bf 91       	pop	r27
     190:	af 91       	pop	r26
     192:	9f 91       	pop	r25
     194:	8f 91       	pop	r24
     196:	7f 91       	pop	r23
     198:	6f 91       	pop	r22
     19a:	5f 91       	pop	r21
     19c:	4f 91       	pop	r20
     19e:	3f 91       	pop	r19
     1a0:	2f 91       	pop	r18
     1a2:	0f 90       	pop	r0
     1a4:	0b be       	out	0x3b, r0	; 59
     1a6:	0f 90       	pop	r0
     1a8:	0f be       	out	0x3f, r0	; 63
     1aa:	0f 90       	pop	r0
     1ac:	1f 90       	pop	r1
     1ae:	18 95       	reti

000001b0 <CAN_init>:
     1b0:	ed 98       	cbi	0x1d, 5	; 29
     1b2:	ea e6       	ldi	r30, 0x6A	; 106
     1b4:	f0 e0       	ldi	r31, 0x00	; 0
     1b6:	80 81       	ld	r24, Z
     1b8:	87 7f       	andi	r24, 0xF7	; 247
     1ba:	80 83       	st	Z, r24
     1bc:	80 81       	ld	r24, Z
     1be:	8b 7f       	andi	r24, 0xFB	; 251
     1c0:	80 83       	st	Z, r24
     1c2:	ed 9a       	sbi	0x1d, 5	; 29
     1c4:	c6 d0       	rcall	.+396    	; 0x352 <MCP2515_init>
     1c6:	8e e0       	ldi	r24, 0x0E	; 14
     1c8:	9e d0       	rcall	.+316    	; 0x306 <MCP2515_read>
     1ca:	1f 92       	push	r1
     1cc:	8f 93       	push	r24
     1ce:	86 e0       	ldi	r24, 0x06	; 6
     1d0:	92 e0       	ldi	r25, 0x02	; 2
     1d2:	9f 93       	push	r25
     1d4:	8f 93       	push	r24
     1d6:	40 d4       	rcall	.+2176   	; 0xa58 <printf>
     1d8:	4f ef       	ldi	r20, 0xFF	; 255
     1da:	64 e6       	ldi	r22, 0x64	; 100
     1dc:	80 e6       	ldi	r24, 0x60	; 96
     1de:	a0 d0       	rcall	.+320    	; 0x320 <MCP2515_bit_modify>
     1e0:	4f ef       	ldi	r20, 0xFF	; 255
     1e2:	60 e6       	ldi	r22, 0x60	; 96
     1e4:	80 e7       	ldi	r24, 0x70	; 112
     1e6:	9c d0       	rcall	.+312    	; 0x320 <MCP2515_bit_modify>
     1e8:	43 e0       	ldi	r20, 0x03	; 3
     1ea:	63 e0       	ldi	r22, 0x03	; 3
     1ec:	8b e2       	ldi	r24, 0x2B	; 43
     1ee:	98 d0       	rcall	.+304    	; 0x320 <MCP2515_bit_modify>
     1f0:	8b e2       	ldi	r24, 0x2B	; 43
     1f2:	89 d0       	rcall	.+274    	; 0x306 <MCP2515_read>
     1f4:	1f 92       	push	r1
     1f6:	8f 93       	push	r24
     1f8:	8f e1       	ldi	r24, 0x1F	; 31
     1fa:	92 e0       	ldi	r25, 0x02	; 2
     1fc:	9f 93       	push	r25
     1fe:	8f 93       	push	r24
     200:	2b d4       	rcall	.+2134   	; 0xa58 <printf>
     202:	40 e0       	ldi	r20, 0x00	; 0
     204:	60 ee       	ldi	r22, 0xE0	; 224
     206:	8f e0       	ldi	r24, 0x0F	; 15
     208:	8b d0       	rcall	.+278    	; 0x320 <MCP2515_bit_modify>
     20a:	8e e0       	ldi	r24, 0x0E	; 14
     20c:	7c d0       	rcall	.+248    	; 0x306 <MCP2515_read>
     20e:	1f 92       	push	r1
     210:	8f 93       	push	r24
     212:	80 e3       	ldi	r24, 0x30	; 48
     214:	92 e0       	ldi	r25, 0x02	; 2
     216:	9f 93       	push	r25
     218:	8f 93       	push	r24
     21a:	1e d4       	rcall	.+2108   	; 0xa58 <printf>
     21c:	8d b7       	in	r24, 0x3d	; 61
     21e:	9e b7       	in	r25, 0x3e	; 62
     220:	0c 96       	adiw	r24, 0x0c	; 12
     222:	0f b6       	in	r0, 0x3f	; 63
     224:	f8 94       	cli
     226:	9e bf       	out	0x3e, r25	; 62
     228:	0f be       	out	0x3f, r0	; 63
     22a:	8d bf       	out	0x3d, r24	; 61
     22c:	08 95       	ret

0000022e <CAN_data_receive>:


}


void CAN_data_receive(can_message* received_msg){
     22e:	df 92       	push	r13
     230:	ef 92       	push	r14
     232:	ff 92       	push	r15
     234:	0f 93       	push	r16
     236:	1f 93       	push	r17
     238:	cf 93       	push	r28
     23a:	df 93       	push	r29
     23c:	8c 01       	movw	r16, r24
	cli();
     23e:	f8 94       	cli
	int receive_buffer_numb = 0;
	if(flag_RX0){
     240:	80 91 f4 03 	lds	r24, 0x03F4
     244:	90 91 f5 03 	lds	r25, 0x03F5
     248:	89 2b       	or	r24, r25
     24a:	39 f0       	breq	.+14     	; 0x25a <CAN_data_receive+0x2c>
		receive_buffer_numb = 0;
		flag_RX0 = 0;
     24c:	10 92 f5 03 	sts	0x03F5, r1
     250:	10 92 f4 03 	sts	0x03F4, r1

void CAN_data_receive(can_message* received_msg){
	cli();
	int receive_buffer_numb = 0;
	if(flag_RX0){
		receive_buffer_numb = 0;
     254:	c0 e0       	ldi	r28, 0x00	; 0
     256:	d0 e0       	ldi	r29, 0x00	; 0
     258:	10 c0       	rjmp	.+32     	; 0x27a <CAN_data_receive+0x4c>
		flag_RX0 = 0;
	}
	else if(flag_RX1){
     25a:	80 91 f2 03 	lds	r24, 0x03F2
     25e:	90 91 f3 03 	lds	r25, 0x03F3
     262:	89 2b       	or	r24, r25
     264:	39 f0       	breq	.+14     	; 0x274 <CAN_data_receive+0x46>
		receive_buffer_numb = 1;
		flag_RX1 = 0;
     266:	10 92 f3 03 	sts	0x03F3, r1
     26a:	10 92 f2 03 	sts	0x03F2, r1
	if(flag_RX0){
		receive_buffer_numb = 0;
		flag_RX0 = 0;
	}
	else if(flag_RX1){
		receive_buffer_numb = 1;
     26e:	c1 e0       	ldi	r28, 0x01	; 1
     270:	d0 e0       	ldi	r29, 0x00	; 0
     272:	03 c0       	rjmp	.+6      	; 0x27a <CAN_data_receive+0x4c>
		flag_RX1 = 0;
	}
	else{
		received_msg->length = 0;
     274:	f8 01       	movw	r30, r16
     276:	12 82       	std	Z+2, r1	; 0x02
		return; //works when this is commented out (interrupt not used)
     278:	3e c0       	rjmp	.+124    	; 0x2f6 <CAN_data_receive+0xc8>
	}
	uint8_t id_high = MCP2515_read(MCP_RXB0SIDH + BUFFER_LENGTH * receive_buffer_numb);
     27a:	fc 2e       	mov	r15, r28
     27c:	ff 0c       	add	r15, r15
     27e:	ff 0c       	add	r15, r15
     280:	ff 0c       	add	r15, r15
     282:	ff 0c       	add	r15, r15
     284:	81 e6       	ldi	r24, 0x61	; 97
     286:	8f 0d       	add	r24, r15
     288:	3e d0       	rcall	.+124    	; 0x306 <MCP2515_read>
     28a:	e8 2e       	mov	r14, r24
	uint8_t id_low = MCP2515_read(MCP_RXB0SIDL + BUFFER_LENGTH * receive_buffer_numb);
     28c:	82 e6       	ldi	r24, 0x62	; 98
     28e:	8f 0d       	add	r24, r15
     290:	3a d0       	rcall	.+116    	; 0x306 <MCP2515_read>
	/*
		id_low:	    X XXXX LLL
		id_high: HHHH HHHH
		id:		 HHHH HHHH LLL
	*/
	received_msg->id = (id_high << 3) + id_low; 
     292:	2e 2d       	mov	r18, r14
     294:	30 e0       	ldi	r19, 0x00	; 0
     296:	22 0f       	add	r18, r18
     298:	33 1f       	adc	r19, r19
     29a:	22 0f       	add	r18, r18
     29c:	33 1f       	adc	r19, r19
     29e:	22 0f       	add	r18, r18
     2a0:	33 1f       	adc	r19, r19
	}
	uint8_t id_high = MCP2515_read(MCP_RXB0SIDH + BUFFER_LENGTH * receive_buffer_numb);
	uint8_t id_low = MCP2515_read(MCP_RXB0SIDL + BUFFER_LENGTH * receive_buffer_numb);
	
	//only want the last 3 bits
	id_low = id_low >> 5;
     2a2:	82 95       	swap	r24
     2a4:	86 95       	lsr	r24
     2a6:	87 70       	andi	r24, 0x07	; 7
	/*
		id_low:	    X XXXX LLL
		id_high: HHHH HHHH
		id:		 HHHH HHHH LLL
	*/
	received_msg->id = (id_high << 3) + id_low; 
     2a8:	28 0f       	add	r18, r24
     2aa:	31 1d       	adc	r19, r1
     2ac:	f8 01       	movw	r30, r16
     2ae:	31 83       	std	Z+1, r19	; 0x01
     2b0:	20 83       	st	Z, r18
	
	//read the data length contained in the last 3 bits of the RXBnDLC register
	received_msg->length = (MCP2515_read(MCP_RXB0DLC + BUFFER_LENGTH * receive_buffer_numb) % (1<<3));
     2b2:	85 e6       	ldi	r24, 0x65	; 101
     2b4:	8f 0d       	add	r24, r15
     2b6:	27 d0       	rcall	.+78     	; 0x306 <MCP2515_read>
     2b8:	87 70       	andi	r24, 0x07	; 7
     2ba:	f8 01       	movw	r30, r16
     2bc:	82 83       	std	Z+2, r24	; 0x02
	
	//read the data
	for (uint8_t byte = 0; byte < received_msg->length; byte++){
     2be:	88 23       	and	r24, r24
     2c0:	c9 f0       	breq	.+50     	; 0x2f4 <CAN_data_receive+0xc6>
		int address = (MCP_RXB0D0 + byte) + BUFFER_LENGTH * receive_buffer_numb;
     2c2:	7e 01       	movw	r14, r28
     2c4:	ee 0c       	add	r14, r14
     2c6:	ff 1c       	adc	r15, r15
     2c8:	ee 0c       	add	r14, r14
     2ca:	ff 1c       	adc	r15, r15
     2cc:	ee 0c       	add	r14, r14
     2ce:	ff 1c       	adc	r15, r15
     2d0:	ee 0c       	add	r14, r14
     2d2:	ff 1c       	adc	r15, r15
	
	//read the data length contained in the last 3 bits of the RXBnDLC register
	received_msg->length = (MCP2515_read(MCP_RXB0DLC + BUFFER_LENGTH * receive_buffer_numb) % (1<<3));
	
	//read the data
	for (uint8_t byte = 0; byte < received_msg->length; byte++){
     2d4:	d1 2c       	mov	r13, r1
		int address = (MCP_RXB0D0 + byte) + BUFFER_LENGTH * receive_buffer_numb;
     2d6:	cd 2d       	mov	r28, r13
     2d8:	d0 e0       	ldi	r29, 0x00	; 0
     2da:	ce 01       	movw	r24, r28
     2dc:	8a 59       	subi	r24, 0x9A	; 154
     2de:	9f 4f       	sbci	r25, 0xFF	; 255
		received_msg->data[byte] = MCP2515_read(address);
     2e0:	8e 0d       	add	r24, r14
     2e2:	11 d0       	rcall	.+34     	; 0x306 <MCP2515_read>
     2e4:	c0 0f       	add	r28, r16
     2e6:	d1 1f       	adc	r29, r17
     2e8:	8b 83       	std	Y+3, r24	; 0x03
	
	//read the data length contained in the last 3 bits of the RXBnDLC register
	received_msg->length = (MCP2515_read(MCP_RXB0DLC + BUFFER_LENGTH * receive_buffer_numb) % (1<<3));
	
	//read the data
	for (uint8_t byte = 0; byte < received_msg->length; byte++){
     2ea:	d3 94       	inc	r13
     2ec:	f8 01       	movw	r30, r16
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	d8 16       	cp	r13, r24
     2f2:	88 f3       	brcs	.-30     	; 0x2d6 <CAN_data_receive+0xa8>
		received_msg->data[byte] = MCP2515_read(address);
	}
	
	
	
	sei();
     2f4:	78 94       	sei
	
}
     2f6:	df 91       	pop	r29
     2f8:	cf 91       	pop	r28
     2fa:	1f 91       	pop	r17
     2fc:	0f 91       	pop	r16
     2fe:	ff 90       	pop	r15
     300:	ef 90       	pop	r14
     302:	df 90       	pop	r13
     304:	08 95       	ret

00000306 <MCP2515_read>:
//Buffer states: three bit, setting a 1 on the buffer initiates transmitting from it 
void MCP2515_request_to_send(uint8_t buffer_states) {
	SPI_select();
	SPI_send(RTS_BASE+buffer_states);
	SPI_deselect();
}
     306:	cf 93       	push	r28
     308:	c8 2f       	mov	r28, r24
     30a:	98 d0       	rcall	.+304    	; 0x43c <SPI_select>
     30c:	83 e0       	ldi	r24, 0x03	; 3
     30e:	8a d0       	rcall	.+276    	; 0x424 <SPI_send>
     310:	8c 2f       	mov	r24, r28
     312:	88 d0       	rcall	.+272    	; 0x424 <SPI_send>
     314:	8c d0       	rcall	.+280    	; 0x42e <SPI_read>
     316:	c8 2f       	mov	r28, r24
     318:	93 d0       	rcall	.+294    	; 0x440 <SPI_deselect>
     31a:	8c 2f       	mov	r24, r28
     31c:	cf 91       	pop	r28
     31e:	08 95       	ret

00000320 <MCP2515_bit_modify>:

//puts new_data in the selected reg_adress. the function assumes that you are allowed to change every bit in the register
void MCP2515_bit_modify(uint8_t reg_address, uint8_t masked_bits, uint8_t new_data) {
     320:	1f 93       	push	r17
     322:	cf 93       	push	r28
     324:	df 93       	push	r29
     326:	18 2f       	mov	r17, r24
     328:	d6 2f       	mov	r29, r22
     32a:	c4 2f       	mov	r28, r20
	SPI_select();
     32c:	87 d0       	rcall	.+270    	; 0x43c <SPI_select>
	SPI_send(BIT_MODIFY);
     32e:	85 e0       	ldi	r24, 0x05	; 5
     330:	79 d0       	rcall	.+242    	; 0x424 <SPI_send>
	SPI_send(reg_address);
     332:	81 2f       	mov	r24, r17
     334:	77 d0       	rcall	.+238    	; 0x424 <SPI_send>
	SPI_send(masked_bits);
     336:	8d 2f       	mov	r24, r29
     338:	75 d0       	rcall	.+234    	; 0x424 <SPI_send>
	SPI_send(new_data);
     33a:	8c 2f       	mov	r24, r28
     33c:	73 d0       	rcall	.+230    	; 0x424 <SPI_send>
	SPI_deselect();
     33e:	80 d0       	rcall	.+256    	; 0x440 <SPI_deselect>
}
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	1f 91       	pop	r17
     346:	08 95       	ret

00000348 <MCP2515_reset>:

void MCP2515_reset(void) {
	SPI_select();
     348:	79 d0       	rcall	.+242    	; 0x43c <SPI_select>
	SPI_send(RESET);
     34a:	80 ec       	ldi	r24, 0xC0	; 192
     34c:	6b d0       	rcall	.+214    	; 0x424 <SPI_send>
	SPI_deselect();
     34e:	78 c0       	rjmp	.+240    	; 0x440 <SPI_deselect>
     350:	08 95       	ret

00000352 <MCP2515_init>:
#define BIT_MODIFY 0x05
#define RTS_BASE 0x80


uint8_t MCP2515_init(void) {
	SPI_init();
     352:	5a d0       	rcall	.+180    	; 0x408 <SPI_init>
	MCP2515_reset();
     354:	f9 df       	rcall	.-14     	; 0x348 <MCP2515_reset>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     356:	84 ea       	ldi	r24, 0xA4	; 164
     358:	8a 95       	dec	r24
     35a:	f1 f7       	brne	.-4      	; 0x358 <MCP2515_init+0x6>
	
	_delay_us(100); //why oh why
	//check bit 7-5 of MCP_CANSTAT which signify the operation mode
	const uint8_t device_mode = MCP2515_read(MCP_CANSTAT) & MODE_MASK;
     35c:	8e e0       	ldi	r24, 0x0E	; 14
     35e:	d3 df       	rcall	.-90     	; 0x306 <MCP2515_read>
     360:	80 7e       	andi	r24, 0xE0	; 224

	if (device_mode != MODE_CONFIG) {
     362:	80 38       	cpi	r24, 0x80	; 128
     364:	29 f0       	breq	.+10     	; 0x370 <MCP2515_init+0x1e>
		printf("MCP2515 is NOT in configuration mode after reset!\n");
     366:	80 ea       	ldi	r24, 0xA0	; 160
     368:	93 e0       	ldi	r25, 0x03	; 3
     36a:	87 d3       	rcall	.+1806   	; 0xa7a <puts>
		return 1;
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	08 95       	ret
	}
	
	return 0;
     370:	80 e0       	ldi	r24, 0x00	; 0
}
     372:	08 95       	ret

00000374 <servo_init>:
#include "defines.h"
#include "PWM.h"
#include "servo.h"

servo_init(){
	PWM_init();
     374:	67 d0       	rcall	.+206    	; 0x444 <PWM_init>
	PWM_set_width(WIDTH_MIDPOINT);
     376:	60 e0       	ldi	r22, 0x00	; 0
     378:	70 e0       	ldi	r23, 0x00	; 0
     37a:	80 ec       	ldi	r24, 0xC0	; 192
     37c:	9f e3       	ldi	r25, 0x3F	; 63
     37e:	86 c0       	rjmp	.+268    	; 0x48c <PWM_set_width>
     380:	08 95       	ret

00000382 <servo_set>:
}

void servo_set(int8_t x){
     382:	cf 92       	push	r12
     384:	df 92       	push	r13
     386:	ef 92       	push	r14
     388:	ff 92       	push	r15
	// Calculate the width for the PWM.
	float width = WIDTH_MIDPOINT + x * WIDTH_RADIUS / 100.0;
     38a:	68 2f       	mov	r22, r24
     38c:	77 27       	eor	r23, r23
     38e:	67 fd       	sbrc	r22, 7
     390:	70 95       	com	r23
     392:	87 2f       	mov	r24, r23
     394:	97 2f       	mov	r25, r23
     396:	ff d1       	rcall	.+1022   	; 0x796 <__floatsisf>
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	40 e0       	ldi	r20, 0x00	; 0
     39e:	5f e3       	ldi	r21, 0x3F	; 63
     3a0:	ae d2       	rcall	.+1372   	; 0x8fe <__mulsf3>
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	48 ec       	ldi	r20, 0xC8	; 200
     3a8:	52 e4       	ldi	r21, 0x42	; 66
     3aa:	5f d1       	rcall	.+702    	; 0x66a <__divsf3>
     3ac:	20 e0       	ldi	r18, 0x00	; 0
     3ae:	30 e0       	ldi	r19, 0x00	; 0
     3b0:	40 ec       	ldi	r20, 0xC0	; 192
     3b2:	5f e3       	ldi	r21, 0x3F	; 63
     3b4:	f2 d0       	rcall	.+484    	; 0x59a <__addsf3>
     3b6:	6b 01       	movw	r12, r22
     3b8:	7c 01       	movw	r14, r24
	
	// Make sure width is within range.
	if      (width < MIN_WIDTH) width = MIN_WIDTH;
     3ba:	20 e0       	ldi	r18, 0x00	; 0
     3bc:	30 e0       	ldi	r19, 0x00	; 0
     3be:	40 e8       	ldi	r20, 0x80	; 128
     3c0:	5f e3       	ldi	r21, 0x3F	; 63
     3c2:	4f d1       	rcall	.+670    	; 0x662 <__cmpsf2>
     3c4:	88 23       	and	r24, r24
     3c6:	54 f0       	brlt	.+20     	; 0x3dc <servo_set+0x5a>
	else if (width > MAX_WIDTH) width = MAX_WIDTH;
     3c8:	20 e0       	ldi	r18, 0x00	; 0
     3ca:	30 e0       	ldi	r19, 0x00	; 0
     3cc:	40 e0       	ldi	r20, 0x00	; 0
     3ce:	50 e4       	ldi	r21, 0x40	; 64
     3d0:	c7 01       	movw	r24, r14
     3d2:	b6 01       	movw	r22, r12
     3d4:	90 d2       	rcall	.+1312   	; 0x8f6 <__gesf2>
     3d6:	18 16       	cp	r1, r24
     3d8:	54 f0       	brlt	.+20     	; 0x3ee <servo_set+0x6c>
     3da:	0e c0       	rjmp	.+28     	; 0x3f8 <servo_set+0x76>
void servo_set(int8_t x){
	// Calculate the width for the PWM.
	float width = WIDTH_MIDPOINT + x * WIDTH_RADIUS / 100.0;
	
	// Make sure width is within range.
	if      (width < MIN_WIDTH) width = MIN_WIDTH;
     3dc:	0f 2e       	mov	r0, r31
     3de:	c1 2c       	mov	r12, r1
     3e0:	d1 2c       	mov	r13, r1
     3e2:	f0 e8       	ldi	r31, 0x80	; 128
     3e4:	ef 2e       	mov	r14, r31
     3e6:	ff e3       	ldi	r31, 0x3F	; 63
     3e8:	ff 2e       	mov	r15, r31
     3ea:	f0 2d       	mov	r31, r0
     3ec:	05 c0       	rjmp	.+10     	; 0x3f8 <servo_set+0x76>
	else if (width > MAX_WIDTH) width = MAX_WIDTH;
     3ee:	c1 2c       	mov	r12, r1
     3f0:	d1 2c       	mov	r13, r1
     3f2:	76 01       	movw	r14, r12
     3f4:	68 94       	set
     3f6:	f6 f8       	bld	r15, 6
	
	PWM_set_width(width);
     3f8:	c7 01       	movw	r24, r14
     3fa:	b6 01       	movw	r22, r12
     3fc:	47 d0       	rcall	.+142    	; 0x48c <PWM_set_width>
     3fe:	ff 90       	pop	r15
     400:	ef 90       	pop	r14
     402:	df 90       	pop	r13
     404:	cf 90       	pop	r12
     406:	08 95       	ret

00000408 <SPI_init>:

void SPI_test(void) {
	SPI_send(0x00);
	uint8_t spi_read_result = SPI_read();
	
	printf("SPI_TEST: %x\n\n", spi_read_result);
     408:	22 9a       	sbi	0x04, 2	; 4
     40a:	21 9a       	sbi	0x04, 1	; 4
     40c:	27 9a       	sbi	0x04, 7	; 4
     40e:	20 9a       	sbi	0x04, 0	; 4
     410:	8c b5       	in	r24, 0x2c	; 44
     412:	80 61       	ori	r24, 0x10	; 16
     414:	8c bd       	out	0x2c, r24	; 44
     416:	8c b5       	in	r24, 0x2c	; 44
     418:	81 60       	ori	r24, 0x01	; 1
     41a:	8c bd       	out	0x2c, r24	; 44
     41c:	8c b5       	in	r24, 0x2c	; 44
     41e:	80 64       	ori	r24, 0x40	; 64
     420:	8c bd       	out	0x2c, r24	; 44
     422:	08 95       	ret

00000424 <SPI_send>:
     424:	8e bd       	out	0x2e, r24	; 46
     426:	0d b4       	in	r0, 0x2d	; 45
     428:	07 fe       	sbrs	r0, 7
     42a:	fd cf       	rjmp	.-6      	; 0x426 <SPI_send+0x2>
     42c:	08 95       	ret

0000042e <SPI_read>:
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	f9 df       	rcall	.-14     	; 0x424 <SPI_send>
     432:	0d b4       	in	r0, 0x2d	; 45
     434:	07 fe       	sbrs	r0, 7
     436:	fd cf       	rjmp	.-6      	; 0x432 <SPI_read+0x4>
     438:	8e b5       	in	r24, 0x2e	; 46
     43a:	08 95       	ret

0000043c <SPI_select>:
	
}

void SPI_select(void){
	clear_bit(PORTB, SS);
     43c:	2f 98       	cbi	0x05, 7	; 5
     43e:	08 95       	ret

00000440 <SPI_deselect>:
}

void SPI_deselect(void){
	set_bit(PORTB, SS);
     440:	2f 9a       	sbi	0x05, 7	; 5
     442:	08 95       	ret

00000444 <PWM_init>:

void PWM_init(){
	//if clk_io = 1 / F_CPU: prescalar = 8, TOP = 39 999

	//select source of clock signal and set prescaler = 8
	clear_bit(TCCR1B, CS12);
     444:	e1 e8       	ldi	r30, 0x81	; 129
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	80 81       	ld	r24, Z
     44a:	8b 7f       	andi	r24, 0xFB	; 251
     44c:	80 83       	st	Z, r24
	set_bit(TCCR1B, CS11);
     44e:	80 81       	ld	r24, Z
     450:	82 60       	ori	r24, 0x02	; 2
     452:	80 83       	st	Z, r24
	clear_bit(TCCR1B, CS10);
     454:	80 81       	ld	r24, Z
     456:	8e 7f       	andi	r24, 0xFE	; 254
     458:	80 83       	st	Z, r24
	
	
	//fast PWM (16 bit, TOP in ICR1) page 145 (mode 14 table 17-2)
	set_bit(TCCR1B, WGM13);
     45a:	80 81       	ld	r24, Z
     45c:	80 61       	ori	r24, 0x10	; 16
     45e:	80 83       	st	Z, r24
	set_bit(TCCR1B, WGM12);
     460:	80 81       	ld	r24, Z
     462:	88 60       	ori	r24, 0x08	; 8
     464:	80 83       	st	Z, r24
	set_bit(TCCR1A, WGM11);
     466:	e0 e8       	ldi	r30, 0x80	; 128
     468:	f0 e0       	ldi	r31, 0x00	; 0
     46a:	80 81       	ld	r24, Z
     46c:	82 60       	ori	r24, 0x02	; 2
     46e:	80 83       	st	Z, r24
	clear_bit(TCCR1A, WGM10);
     470:	80 81       	ld	r24, Z
     472:	8e 7f       	andi	r24, 0xFE	; 254
     474:	80 83       	st	Z, r24
	
	//set TOP so that we have a period of 20 ms
	ICR1 = F_CPU/PRESCALER*PERIOD_MS/1000 - 1; 
     476:	8f e3       	ldi	r24, 0x3F	; 63
     478:	9c e9       	ldi	r25, 0x9C	; 156
     47a:	90 93 87 00 	sts	0x0087, r25
     47e:	80 93 86 00 	sts	0x0086, r24
	
	//compare output mode (Normal mode)
	set_bit(TCCR1A, COM1A1);
     482:	80 81       	ld	r24, Z
     484:	80 68       	ori	r24, 0x80	; 128
     486:	80 83       	st	Z, r24
	
	//set output pin PB5(OC1A: output clock 1 A)
	set_bit(DDRB, DDB5);
     488:	25 9a       	sbi	0x04, 5	; 4
     48a:	08 95       	ret

0000048c <PWM_set_width>:

	//compares TCTn and OCRnx - cleared when match TCTn = BOTTOM
}

void PWM_set_width(float on_time_ms){
	OCR1A = F_CPU/PRESCALER*on_time_ms/1000-1; 
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	34 e2       	ldi	r19, 0x24	; 36
     490:	44 ef       	ldi	r20, 0xF4	; 244
     492:	59 e4       	ldi	r21, 0x49	; 73
     494:	34 d2       	rcall	.+1128   	; 0x8fe <__mulsf3>
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	30 e0       	ldi	r19, 0x00	; 0
     49a:	4a e7       	ldi	r20, 0x7A	; 122
     49c:	54 e4       	ldi	r21, 0x44	; 68
     49e:	e5 d0       	rcall	.+458    	; 0x66a <__divsf3>
     4a0:	20 e0       	ldi	r18, 0x00	; 0
     4a2:	30 e0       	ldi	r19, 0x00	; 0
     4a4:	40 e8       	ldi	r20, 0x80	; 128
     4a6:	5f e3       	ldi	r21, 0x3F	; 63
     4a8:	77 d0       	rcall	.+238    	; 0x598 <__subsf3>
     4aa:	47 d1       	rcall	.+654    	; 0x73a <__fixunssfsi>
     4ac:	70 93 89 00 	sts	0x0089, r23
     4b0:	60 93 88 00 	sts	0x0088, r22
     4b4:	08 95       	ret

000004b6 <usart_transmit_to_computer>:
}


void usart_transmit_to_computer(unsigned int data) {
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)))
     4b6:	e0 ec       	ldi	r30, 0xC0	; 192
     4b8:	f0 e0       	ldi	r31, 0x00	; 0
     4ba:	90 81       	ld	r25, Z
     4bc:	95 ff       	sbrs	r25, 5
     4be:	fd cf       	rjmp	.-6      	; 0x4ba <usart_transmit_to_computer+0x4>
	;
	/* Put data into buffer (sends the data) */
	UDR0 = data;
     4c0:	80 93 c6 00 	sts	0x00C6, r24
     4c4:	08 95       	ret

000004c6 <usart_receive_from_computer>:
}


uint8_t usart_receive_from_computer(void) {
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)))
     4c6:	e0 ec       	ldi	r30, 0xC0	; 192
     4c8:	f0 e0       	ldi	r31, 0x00	; 0
     4ca:	80 81       	ld	r24, Z
     4cc:	88 23       	and	r24, r24
     4ce:	ec f7       	brge	.-6      	; 0x4ca <usart_receive_from_computer+0x4>
	;
	
	/* Get and return data from buffer */
	return UDR0;
     4d0:	80 91 c6 00 	lds	r24, 0x00C6
}
     4d4:	08 95       	ret

000004d6 <usart_init>:
#include <stdio.h>


void usart_init(unsigned int ubbr) {
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubbr>>8);
     4d6:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)(ubbr);
     4da:	80 93 c4 00 	sts	0x00C4, r24
	
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
     4de:	88 e1       	ldi	r24, 0x18	; 24
     4e0:	80 93 c1 00 	sts	0x00C1, r24
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);
     4e4:	8e e0       	ldi	r24, 0x0E	; 14
     4e6:	80 93 c2 00 	sts	0x00C2, r24
	
	
	/* Enable printf-thing */
	fdevopen(usart_transmit_to_computer, usart_receive_from_computer);
     4ea:	63 e6       	ldi	r22, 0x63	; 99
     4ec:	72 e0       	ldi	r23, 0x02	; 2
     4ee:	8b e5       	ldi	r24, 0x5B	; 91
     4f0:	92 e0       	ldi	r25, 0x02	; 2
     4f2:	68 c2       	rjmp	.+1232   	; 0x9c4 <fdevopen>
     4f4:	08 95       	ret

000004f6 <initialize>:
	while(1){
		
		CAN_data_receive(&received_message);
		if(received_message.length){
			printf("\n\nRECEIVED:\n\nlength: %d\nid: %d\n", received_message.length, received_message.id);
			for (uint8_t byte = 0; byte < received_message.length;byte++){
     4f6:	f8 94       	cli
     4f8:	87 e6       	ldi	r24, 0x67	; 103
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	ec df       	rcall	.-40     	; 0x4d6 <usart_init>
     4fe:	58 de       	rcall	.-848    	; 0x1b0 <CAN_init>
     500:	39 df       	rcall	.-398    	; 0x374 <servo_init>
     502:	78 94       	sei
     504:	08 95       	ret

00000506 <receive_joystick_pos>:
			}
		}
	}
}

can_message receive_joystick_pos(){
     506:	0f 93       	push	r16
     508:	1f 93       	push	r17
     50a:	cf 93       	push	r28
     50c:	df 93       	push	r29
     50e:	cd b7       	in	r28, 0x3d	; 61
     510:	de b7       	in	r29, 0x3e	; 62
     512:	2b 97       	sbiw	r28, 0x0b	; 11
     514:	0f b6       	in	r0, 0x3f	; 63
     516:	f8 94       	cli
     518:	de bf       	out	0x3e, r29	; 62
     51a:	0f be       	out	0x3f, r0	; 63
     51c:	cd bf       	out	0x3d, r28	; 61
     51e:	8c 01       	movw	r16, r24
	can_message msg;
	msg.length = 0;
     520:	1b 82       	std	Y+3, r1	; 0x03
	//printf("EFGL: 0x%02x\n", MCP2515_read(MCP_EFLG));
	while (!msg.length){
		CAN_data_receive(&msg);
     522:	ce 01       	movw	r24, r28
     524:	01 96       	adiw	r24, 0x01	; 1
     526:	83 de       	rcall	.-762    	; 0x22e <CAN_data_receive>

can_message receive_joystick_pos(){
	can_message msg;
	msg.length = 0;
	//printf("EFGL: 0x%02x\n", MCP2515_read(MCP_EFLG));
	while (!msg.length){
     528:	8b 81       	ldd	r24, Y+3	; 0x03
     52a:	88 23       	and	r24, r24
     52c:	d1 f3       	breq	.-12     	; 0x522 <receive_joystick_pos+0x1c>
	//printf("%d\n", msg.length);
	//if(msg.length){
		//printf("RECEIVED:\nlength: %d\nid: %d\n", msg.length, msg.id);
		//printf("x: %d\ty:%d\n\n",msg.data[0],msg.data[1]);
	//}
	return msg;
     52e:	8b e0       	ldi	r24, 0x0B	; 11
     530:	fe 01       	movw	r30, r28
     532:	31 96       	adiw	r30, 0x01	; 1
     534:	d8 01       	movw	r26, r16
     536:	01 90       	ld	r0, Z+
     538:	0d 92       	st	X+, r0
     53a:	8a 95       	dec	r24
     53c:	e1 f7       	brne	.-8      	; 0x536 <receive_joystick_pos+0x30>
}
     53e:	c8 01       	movw	r24, r16
     540:	2b 96       	adiw	r28, 0x0b	; 11
     542:	0f b6       	in	r0, 0x3f	; 63
     544:	f8 94       	cli
     546:	de bf       	out	0x3e, r29	; 62
     548:	0f be       	out	0x3f, r0	; 63
     54a:	cd bf       	out	0x3d, r28	; 61
     54c:	df 91       	pop	r29
     54e:	cf 91       	pop	r28
     550:	1f 91       	pop	r17
     552:	0f 91       	pop	r16
     554:	08 95       	ret

00000556 <main>:

int main(void){
     556:	cf 93       	push	r28
     558:	df 93       	push	r29
     55a:	cd b7       	in	r28, 0x3d	; 61
     55c:	de b7       	in	r29, 0x3e	; 62
     55e:	2b 97       	sbiw	r28, 0x0b	; 11
     560:	0f b6       	in	r0, 0x3f	; 63
     562:	f8 94       	cli
     564:	de bf       	out	0x3e, r29	; 62
     566:	0f be       	out	0x3f, r0	; 63
     568:	cd bf       	out	0x3d, r28	; 61
	initialize();
     56a:	c5 df       	rcall	.-118    	; 0x4f6 <initialize>
	printf("CANCTRL: 0x%02x\n", MCP2515_read(MCP_CANCTRL));
     56c:	8f e0       	ldi	r24, 0x0F	; 15
     56e:	cb de       	rcall	.-618    	; 0x306 <MCP2515_read>
     570:	1f 92       	push	r1
     572:	8f 93       	push	r24
     574:	82 ed       	ldi	r24, 0xD2	; 210
     576:	93 e0       	ldi	r25, 0x03	; 3
     578:	9f 93       	push	r25
     57a:	8f 93       	push	r24
     57c:	6d d2       	rcall	.+1242   	; 0xa58 <printf>
	printf("Usart funker.\n");
     57e:	83 ee       	ldi	r24, 0xE3	; 227
     580:	93 e0       	ldi	r25, 0x03	; 3
     582:	7b d2       	rcall	.+1270   	; 0xa7a <puts>
     584:	0f 90       	pop	r0
     586:	0f 90       	pop	r0
     588:	0f 90       	pop	r0
     58a:	0f 90       	pop	r0
	
	can_message message;
	int8_t x = 0;
	
	while(1){
		message = receive_joystick_pos();
     58c:	ce 01       	movw	r24, r28
     58e:	01 96       	adiw	r24, 0x01	; 1
     590:	ba df       	rcall	.-140    	; 0x506 <receive_joystick_pos>
		x = message.data[0];
		//printf("[NODE2][main] x = %d\n", x);
		servo_set(x);
     592:	8c 81       	ldd	r24, Y+4	; 0x04
     594:	f6 de       	rcall	.-532    	; 0x382 <servo_set>
     596:	fa cf       	rjmp	.-12     	; 0x58c <main+0x36>

00000598 <__subsf3>:
     598:	50 58       	subi	r21, 0x80	; 128

0000059a <__addsf3>:
     59a:	bb 27       	eor	r27, r27
     59c:	aa 27       	eor	r26, r26
     59e:	0e d0       	rcall	.+28     	; 0x5bc <__addsf3x>
     5a0:	70 c1       	rjmp	.+736    	; 0x882 <__fp_round>
     5a2:	61 d1       	rcall	.+706    	; 0x866 <__fp_pscA>
     5a4:	30 f0       	brcs	.+12     	; 0x5b2 <__addsf3+0x18>
     5a6:	66 d1       	rcall	.+716    	; 0x874 <__fp_pscB>
     5a8:	20 f0       	brcs	.+8      	; 0x5b2 <__addsf3+0x18>
     5aa:	31 f4       	brne	.+12     	; 0x5b8 <__addsf3+0x1e>
     5ac:	9f 3f       	cpi	r25, 0xFF	; 255
     5ae:	11 f4       	brne	.+4      	; 0x5b4 <__addsf3+0x1a>
     5b0:	1e f4       	brtc	.+6      	; 0x5b8 <__addsf3+0x1e>
     5b2:	56 c1       	rjmp	.+684    	; 0x860 <__fp_nan>
     5b4:	0e f4       	brtc	.+2      	; 0x5b8 <__addsf3+0x1e>
     5b6:	e0 95       	com	r30
     5b8:	e7 fb       	bst	r30, 7
     5ba:	4c c1       	rjmp	.+664    	; 0x854 <__fp_inf>

000005bc <__addsf3x>:
     5bc:	e9 2f       	mov	r30, r25
     5be:	72 d1       	rcall	.+740    	; 0x8a4 <__fp_split3>
     5c0:	80 f3       	brcs	.-32     	; 0x5a2 <__addsf3+0x8>
     5c2:	ba 17       	cp	r27, r26
     5c4:	62 07       	cpc	r22, r18
     5c6:	73 07       	cpc	r23, r19
     5c8:	84 07       	cpc	r24, r20
     5ca:	95 07       	cpc	r25, r21
     5cc:	18 f0       	brcs	.+6      	; 0x5d4 <__addsf3x+0x18>
     5ce:	71 f4       	brne	.+28     	; 0x5ec <__addsf3x+0x30>
     5d0:	9e f5       	brtc	.+102    	; 0x638 <__addsf3x+0x7c>
     5d2:	8a c1       	rjmp	.+788    	; 0x8e8 <__fp_zero>
     5d4:	0e f4       	brtc	.+2      	; 0x5d8 <__addsf3x+0x1c>
     5d6:	e0 95       	com	r30
     5d8:	0b 2e       	mov	r0, r27
     5da:	ba 2f       	mov	r27, r26
     5dc:	a0 2d       	mov	r26, r0
     5de:	0b 01       	movw	r0, r22
     5e0:	b9 01       	movw	r22, r18
     5e2:	90 01       	movw	r18, r0
     5e4:	0c 01       	movw	r0, r24
     5e6:	ca 01       	movw	r24, r20
     5e8:	a0 01       	movw	r20, r0
     5ea:	11 24       	eor	r1, r1
     5ec:	ff 27       	eor	r31, r31
     5ee:	59 1b       	sub	r21, r25
     5f0:	99 f0       	breq	.+38     	; 0x618 <__addsf3x+0x5c>
     5f2:	59 3f       	cpi	r21, 0xF9	; 249
     5f4:	50 f4       	brcc	.+20     	; 0x60a <__addsf3x+0x4e>
     5f6:	50 3e       	cpi	r21, 0xE0	; 224
     5f8:	68 f1       	brcs	.+90     	; 0x654 <__addsf3x+0x98>
     5fa:	1a 16       	cp	r1, r26
     5fc:	f0 40       	sbci	r31, 0x00	; 0
     5fe:	a2 2f       	mov	r26, r18
     600:	23 2f       	mov	r18, r19
     602:	34 2f       	mov	r19, r20
     604:	44 27       	eor	r20, r20
     606:	58 5f       	subi	r21, 0xF8	; 248
     608:	f3 cf       	rjmp	.-26     	; 0x5f0 <__addsf3x+0x34>
     60a:	46 95       	lsr	r20
     60c:	37 95       	ror	r19
     60e:	27 95       	ror	r18
     610:	a7 95       	ror	r26
     612:	f0 40       	sbci	r31, 0x00	; 0
     614:	53 95       	inc	r21
     616:	c9 f7       	brne	.-14     	; 0x60a <__addsf3x+0x4e>
     618:	7e f4       	brtc	.+30     	; 0x638 <__addsf3x+0x7c>
     61a:	1f 16       	cp	r1, r31
     61c:	ba 0b       	sbc	r27, r26
     61e:	62 0b       	sbc	r22, r18
     620:	73 0b       	sbc	r23, r19
     622:	84 0b       	sbc	r24, r20
     624:	ba f0       	brmi	.+46     	; 0x654 <__addsf3x+0x98>
     626:	91 50       	subi	r25, 0x01	; 1
     628:	a1 f0       	breq	.+40     	; 0x652 <__addsf3x+0x96>
     62a:	ff 0f       	add	r31, r31
     62c:	bb 1f       	adc	r27, r27
     62e:	66 1f       	adc	r22, r22
     630:	77 1f       	adc	r23, r23
     632:	88 1f       	adc	r24, r24
     634:	c2 f7       	brpl	.-16     	; 0x626 <__addsf3x+0x6a>
     636:	0e c0       	rjmp	.+28     	; 0x654 <__addsf3x+0x98>
     638:	ba 0f       	add	r27, r26
     63a:	62 1f       	adc	r22, r18
     63c:	73 1f       	adc	r23, r19
     63e:	84 1f       	adc	r24, r20
     640:	48 f4       	brcc	.+18     	; 0x654 <__addsf3x+0x98>
     642:	87 95       	ror	r24
     644:	77 95       	ror	r23
     646:	67 95       	ror	r22
     648:	b7 95       	ror	r27
     64a:	f7 95       	ror	r31
     64c:	9e 3f       	cpi	r25, 0xFE	; 254
     64e:	08 f0       	brcs	.+2      	; 0x652 <__addsf3x+0x96>
     650:	b3 cf       	rjmp	.-154    	; 0x5b8 <__addsf3+0x1e>
     652:	93 95       	inc	r25
     654:	88 0f       	add	r24, r24
     656:	08 f0       	brcs	.+2      	; 0x65a <__addsf3x+0x9e>
     658:	99 27       	eor	r25, r25
     65a:	ee 0f       	add	r30, r30
     65c:	97 95       	ror	r25
     65e:	87 95       	ror	r24
     660:	08 95       	ret

00000662 <__cmpsf2>:
     662:	d4 d0       	rcall	.+424    	; 0x80c <__fp_cmp>
     664:	08 f4       	brcc	.+2      	; 0x668 <__cmpsf2+0x6>
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	08 95       	ret

0000066a <__divsf3>:
     66a:	0c d0       	rcall	.+24     	; 0x684 <__divsf3x>
     66c:	0a c1       	rjmp	.+532    	; 0x882 <__fp_round>
     66e:	02 d1       	rcall	.+516    	; 0x874 <__fp_pscB>
     670:	40 f0       	brcs	.+16     	; 0x682 <__divsf3+0x18>
     672:	f9 d0       	rcall	.+498    	; 0x866 <__fp_pscA>
     674:	30 f0       	brcs	.+12     	; 0x682 <__divsf3+0x18>
     676:	21 f4       	brne	.+8      	; 0x680 <__divsf3+0x16>
     678:	5f 3f       	cpi	r21, 0xFF	; 255
     67a:	19 f0       	breq	.+6      	; 0x682 <__divsf3+0x18>
     67c:	eb c0       	rjmp	.+470    	; 0x854 <__fp_inf>
     67e:	51 11       	cpse	r21, r1
     680:	34 c1       	rjmp	.+616    	; 0x8ea <__fp_szero>
     682:	ee c0       	rjmp	.+476    	; 0x860 <__fp_nan>

00000684 <__divsf3x>:
     684:	0f d1       	rcall	.+542    	; 0x8a4 <__fp_split3>
     686:	98 f3       	brcs	.-26     	; 0x66e <__divsf3+0x4>

00000688 <__divsf3_pse>:
     688:	99 23       	and	r25, r25
     68a:	c9 f3       	breq	.-14     	; 0x67e <__divsf3+0x14>
     68c:	55 23       	and	r21, r21
     68e:	b1 f3       	breq	.-20     	; 0x67c <__divsf3+0x12>
     690:	95 1b       	sub	r25, r21
     692:	55 0b       	sbc	r21, r21
     694:	bb 27       	eor	r27, r27
     696:	aa 27       	eor	r26, r26
     698:	62 17       	cp	r22, r18
     69a:	73 07       	cpc	r23, r19
     69c:	84 07       	cpc	r24, r20
     69e:	38 f0       	brcs	.+14     	; 0x6ae <__divsf3_pse+0x26>
     6a0:	9f 5f       	subi	r25, 0xFF	; 255
     6a2:	5f 4f       	sbci	r21, 0xFF	; 255
     6a4:	22 0f       	add	r18, r18
     6a6:	33 1f       	adc	r19, r19
     6a8:	44 1f       	adc	r20, r20
     6aa:	aa 1f       	adc	r26, r26
     6ac:	a9 f3       	breq	.-22     	; 0x698 <__divsf3_pse+0x10>
     6ae:	33 d0       	rcall	.+102    	; 0x716 <__divsf3_pse+0x8e>
     6b0:	0e 2e       	mov	r0, r30
     6b2:	3a f0       	brmi	.+14     	; 0x6c2 <__divsf3_pse+0x3a>
     6b4:	e0 e8       	ldi	r30, 0x80	; 128
     6b6:	30 d0       	rcall	.+96     	; 0x718 <__divsf3_pse+0x90>
     6b8:	91 50       	subi	r25, 0x01	; 1
     6ba:	50 40       	sbci	r21, 0x00	; 0
     6bc:	e6 95       	lsr	r30
     6be:	00 1c       	adc	r0, r0
     6c0:	ca f7       	brpl	.-14     	; 0x6b4 <__divsf3_pse+0x2c>
     6c2:	29 d0       	rcall	.+82     	; 0x716 <__divsf3_pse+0x8e>
     6c4:	fe 2f       	mov	r31, r30
     6c6:	27 d0       	rcall	.+78     	; 0x716 <__divsf3_pse+0x8e>
     6c8:	66 0f       	add	r22, r22
     6ca:	77 1f       	adc	r23, r23
     6cc:	88 1f       	adc	r24, r24
     6ce:	bb 1f       	adc	r27, r27
     6d0:	26 17       	cp	r18, r22
     6d2:	37 07       	cpc	r19, r23
     6d4:	48 07       	cpc	r20, r24
     6d6:	ab 07       	cpc	r26, r27
     6d8:	b0 e8       	ldi	r27, 0x80	; 128
     6da:	09 f0       	breq	.+2      	; 0x6de <__divsf3_pse+0x56>
     6dc:	bb 0b       	sbc	r27, r27
     6de:	80 2d       	mov	r24, r0
     6e0:	bf 01       	movw	r22, r30
     6e2:	ff 27       	eor	r31, r31
     6e4:	93 58       	subi	r25, 0x83	; 131
     6e6:	5f 4f       	sbci	r21, 0xFF	; 255
     6e8:	2a f0       	brmi	.+10     	; 0x6f4 <__divsf3_pse+0x6c>
     6ea:	9e 3f       	cpi	r25, 0xFE	; 254
     6ec:	51 05       	cpc	r21, r1
     6ee:	68 f0       	brcs	.+26     	; 0x70a <__divsf3_pse+0x82>
     6f0:	b1 c0       	rjmp	.+354    	; 0x854 <__fp_inf>
     6f2:	fb c0       	rjmp	.+502    	; 0x8ea <__fp_szero>
     6f4:	5f 3f       	cpi	r21, 0xFF	; 255
     6f6:	ec f3       	brlt	.-6      	; 0x6f2 <__divsf3_pse+0x6a>
     6f8:	98 3e       	cpi	r25, 0xE8	; 232
     6fa:	dc f3       	brlt	.-10     	; 0x6f2 <__divsf3_pse+0x6a>
     6fc:	86 95       	lsr	r24
     6fe:	77 95       	ror	r23
     700:	67 95       	ror	r22
     702:	b7 95       	ror	r27
     704:	f7 95       	ror	r31
     706:	9f 5f       	subi	r25, 0xFF	; 255
     708:	c9 f7       	brne	.-14     	; 0x6fc <__divsf3_pse+0x74>
     70a:	88 0f       	add	r24, r24
     70c:	91 1d       	adc	r25, r1
     70e:	96 95       	lsr	r25
     710:	87 95       	ror	r24
     712:	97 f9       	bld	r25, 7
     714:	08 95       	ret
     716:	e1 e0       	ldi	r30, 0x01	; 1
     718:	66 0f       	add	r22, r22
     71a:	77 1f       	adc	r23, r23
     71c:	88 1f       	adc	r24, r24
     71e:	bb 1f       	adc	r27, r27
     720:	62 17       	cp	r22, r18
     722:	73 07       	cpc	r23, r19
     724:	84 07       	cpc	r24, r20
     726:	ba 07       	cpc	r27, r26
     728:	20 f0       	brcs	.+8      	; 0x732 <__divsf3_pse+0xaa>
     72a:	62 1b       	sub	r22, r18
     72c:	73 0b       	sbc	r23, r19
     72e:	84 0b       	sbc	r24, r20
     730:	ba 0b       	sbc	r27, r26
     732:	ee 1f       	adc	r30, r30
     734:	88 f7       	brcc	.-30     	; 0x718 <__divsf3_pse+0x90>
     736:	e0 95       	com	r30
     738:	08 95       	ret

0000073a <__fixunssfsi>:
     73a:	bc d0       	rcall	.+376    	; 0x8b4 <__fp_splitA>
     73c:	88 f0       	brcs	.+34     	; 0x760 <__fixunssfsi+0x26>
     73e:	9f 57       	subi	r25, 0x7F	; 127
     740:	90 f0       	brcs	.+36     	; 0x766 <__fixunssfsi+0x2c>
     742:	b9 2f       	mov	r27, r25
     744:	99 27       	eor	r25, r25
     746:	b7 51       	subi	r27, 0x17	; 23
     748:	a0 f0       	brcs	.+40     	; 0x772 <__fixunssfsi+0x38>
     74a:	d1 f0       	breq	.+52     	; 0x780 <__fixunssfsi+0x46>
     74c:	66 0f       	add	r22, r22
     74e:	77 1f       	adc	r23, r23
     750:	88 1f       	adc	r24, r24
     752:	99 1f       	adc	r25, r25
     754:	1a f0       	brmi	.+6      	; 0x75c <__fixunssfsi+0x22>
     756:	ba 95       	dec	r27
     758:	c9 f7       	brne	.-14     	; 0x74c <__fixunssfsi+0x12>
     75a:	12 c0       	rjmp	.+36     	; 0x780 <__fixunssfsi+0x46>
     75c:	b1 30       	cpi	r27, 0x01	; 1
     75e:	81 f0       	breq	.+32     	; 0x780 <__fixunssfsi+0x46>
     760:	c3 d0       	rcall	.+390    	; 0x8e8 <__fp_zero>
     762:	b1 e0       	ldi	r27, 0x01	; 1
     764:	08 95       	ret
     766:	c0 c0       	rjmp	.+384    	; 0x8e8 <__fp_zero>
     768:	67 2f       	mov	r22, r23
     76a:	78 2f       	mov	r23, r24
     76c:	88 27       	eor	r24, r24
     76e:	b8 5f       	subi	r27, 0xF8	; 248
     770:	39 f0       	breq	.+14     	; 0x780 <__fixunssfsi+0x46>
     772:	b9 3f       	cpi	r27, 0xF9	; 249
     774:	cc f3       	brlt	.-14     	; 0x768 <__fixunssfsi+0x2e>
     776:	86 95       	lsr	r24
     778:	77 95       	ror	r23
     77a:	67 95       	ror	r22
     77c:	b3 95       	inc	r27
     77e:	d9 f7       	brne	.-10     	; 0x776 <__fixunssfsi+0x3c>
     780:	3e f4       	brtc	.+14     	; 0x790 <__fixunssfsi+0x56>
     782:	90 95       	com	r25
     784:	80 95       	com	r24
     786:	70 95       	com	r23
     788:	61 95       	neg	r22
     78a:	7f 4f       	sbci	r23, 0xFF	; 255
     78c:	8f 4f       	sbci	r24, 0xFF	; 255
     78e:	9f 4f       	sbci	r25, 0xFF	; 255
     790:	08 95       	ret

00000792 <__floatunsisf>:
     792:	e8 94       	clt
     794:	09 c0       	rjmp	.+18     	; 0x7a8 <__floatsisf+0x12>

00000796 <__floatsisf>:
     796:	97 fb       	bst	r25, 7
     798:	3e f4       	brtc	.+14     	; 0x7a8 <__floatsisf+0x12>
     79a:	90 95       	com	r25
     79c:	80 95       	com	r24
     79e:	70 95       	com	r23
     7a0:	61 95       	neg	r22
     7a2:	7f 4f       	sbci	r23, 0xFF	; 255
     7a4:	8f 4f       	sbci	r24, 0xFF	; 255
     7a6:	9f 4f       	sbci	r25, 0xFF	; 255
     7a8:	99 23       	and	r25, r25
     7aa:	a9 f0       	breq	.+42     	; 0x7d6 <__floatsisf+0x40>
     7ac:	f9 2f       	mov	r31, r25
     7ae:	96 e9       	ldi	r25, 0x96	; 150
     7b0:	bb 27       	eor	r27, r27
     7b2:	93 95       	inc	r25
     7b4:	f6 95       	lsr	r31
     7b6:	87 95       	ror	r24
     7b8:	77 95       	ror	r23
     7ba:	67 95       	ror	r22
     7bc:	b7 95       	ror	r27
     7be:	f1 11       	cpse	r31, r1
     7c0:	f8 cf       	rjmp	.-16     	; 0x7b2 <__floatsisf+0x1c>
     7c2:	fa f4       	brpl	.+62     	; 0x802 <__floatsisf+0x6c>
     7c4:	bb 0f       	add	r27, r27
     7c6:	11 f4       	brne	.+4      	; 0x7cc <__floatsisf+0x36>
     7c8:	60 ff       	sbrs	r22, 0
     7ca:	1b c0       	rjmp	.+54     	; 0x802 <__floatsisf+0x6c>
     7cc:	6f 5f       	subi	r22, 0xFF	; 255
     7ce:	7f 4f       	sbci	r23, 0xFF	; 255
     7d0:	8f 4f       	sbci	r24, 0xFF	; 255
     7d2:	9f 4f       	sbci	r25, 0xFF	; 255
     7d4:	16 c0       	rjmp	.+44     	; 0x802 <__floatsisf+0x6c>
     7d6:	88 23       	and	r24, r24
     7d8:	11 f0       	breq	.+4      	; 0x7de <__floatsisf+0x48>
     7da:	96 e9       	ldi	r25, 0x96	; 150
     7dc:	11 c0       	rjmp	.+34     	; 0x800 <__floatsisf+0x6a>
     7de:	77 23       	and	r23, r23
     7e0:	21 f0       	breq	.+8      	; 0x7ea <__floatsisf+0x54>
     7e2:	9e e8       	ldi	r25, 0x8E	; 142
     7e4:	87 2f       	mov	r24, r23
     7e6:	76 2f       	mov	r23, r22
     7e8:	05 c0       	rjmp	.+10     	; 0x7f4 <__floatsisf+0x5e>
     7ea:	66 23       	and	r22, r22
     7ec:	71 f0       	breq	.+28     	; 0x80a <__floatsisf+0x74>
     7ee:	96 e8       	ldi	r25, 0x86	; 134
     7f0:	86 2f       	mov	r24, r22
     7f2:	70 e0       	ldi	r23, 0x00	; 0
     7f4:	60 e0       	ldi	r22, 0x00	; 0
     7f6:	2a f0       	brmi	.+10     	; 0x802 <__floatsisf+0x6c>
     7f8:	9a 95       	dec	r25
     7fa:	66 0f       	add	r22, r22
     7fc:	77 1f       	adc	r23, r23
     7fe:	88 1f       	adc	r24, r24
     800:	da f7       	brpl	.-10     	; 0x7f8 <__floatsisf+0x62>
     802:	88 0f       	add	r24, r24
     804:	96 95       	lsr	r25
     806:	87 95       	ror	r24
     808:	97 f9       	bld	r25, 7
     80a:	08 95       	ret

0000080c <__fp_cmp>:
     80c:	99 0f       	add	r25, r25
     80e:	00 08       	sbc	r0, r0
     810:	55 0f       	add	r21, r21
     812:	aa 0b       	sbc	r26, r26
     814:	e0 e8       	ldi	r30, 0x80	; 128
     816:	fe ef       	ldi	r31, 0xFE	; 254
     818:	16 16       	cp	r1, r22
     81a:	17 06       	cpc	r1, r23
     81c:	e8 07       	cpc	r30, r24
     81e:	f9 07       	cpc	r31, r25
     820:	c0 f0       	brcs	.+48     	; 0x852 <__fp_cmp+0x46>
     822:	12 16       	cp	r1, r18
     824:	13 06       	cpc	r1, r19
     826:	e4 07       	cpc	r30, r20
     828:	f5 07       	cpc	r31, r21
     82a:	98 f0       	brcs	.+38     	; 0x852 <__fp_cmp+0x46>
     82c:	62 1b       	sub	r22, r18
     82e:	73 0b       	sbc	r23, r19
     830:	84 0b       	sbc	r24, r20
     832:	95 0b       	sbc	r25, r21
     834:	39 f4       	brne	.+14     	; 0x844 <__fp_cmp+0x38>
     836:	0a 26       	eor	r0, r26
     838:	61 f0       	breq	.+24     	; 0x852 <__fp_cmp+0x46>
     83a:	23 2b       	or	r18, r19
     83c:	24 2b       	or	r18, r20
     83e:	25 2b       	or	r18, r21
     840:	21 f4       	brne	.+8      	; 0x84a <__fp_cmp+0x3e>
     842:	08 95       	ret
     844:	0a 26       	eor	r0, r26
     846:	09 f4       	brne	.+2      	; 0x84a <__fp_cmp+0x3e>
     848:	a1 40       	sbci	r26, 0x01	; 1
     84a:	a6 95       	lsr	r26
     84c:	8f ef       	ldi	r24, 0xFF	; 255
     84e:	81 1d       	adc	r24, r1
     850:	81 1d       	adc	r24, r1
     852:	08 95       	ret

00000854 <__fp_inf>:
     854:	97 f9       	bld	r25, 7
     856:	9f 67       	ori	r25, 0x7F	; 127
     858:	80 e8       	ldi	r24, 0x80	; 128
     85a:	70 e0       	ldi	r23, 0x00	; 0
     85c:	60 e0       	ldi	r22, 0x00	; 0
     85e:	08 95       	ret

00000860 <__fp_nan>:
     860:	9f ef       	ldi	r25, 0xFF	; 255
     862:	80 ec       	ldi	r24, 0xC0	; 192
     864:	08 95       	ret

00000866 <__fp_pscA>:
     866:	00 24       	eor	r0, r0
     868:	0a 94       	dec	r0
     86a:	16 16       	cp	r1, r22
     86c:	17 06       	cpc	r1, r23
     86e:	18 06       	cpc	r1, r24
     870:	09 06       	cpc	r0, r25
     872:	08 95       	ret

00000874 <__fp_pscB>:
     874:	00 24       	eor	r0, r0
     876:	0a 94       	dec	r0
     878:	12 16       	cp	r1, r18
     87a:	13 06       	cpc	r1, r19
     87c:	14 06       	cpc	r1, r20
     87e:	05 06       	cpc	r0, r21
     880:	08 95       	ret

00000882 <__fp_round>:
     882:	09 2e       	mov	r0, r25
     884:	03 94       	inc	r0
     886:	00 0c       	add	r0, r0
     888:	11 f4       	brne	.+4      	; 0x88e <__fp_round+0xc>
     88a:	88 23       	and	r24, r24
     88c:	52 f0       	brmi	.+20     	; 0x8a2 <__fp_round+0x20>
     88e:	bb 0f       	add	r27, r27
     890:	40 f4       	brcc	.+16     	; 0x8a2 <__fp_round+0x20>
     892:	bf 2b       	or	r27, r31
     894:	11 f4       	brne	.+4      	; 0x89a <__fp_round+0x18>
     896:	60 ff       	sbrs	r22, 0
     898:	04 c0       	rjmp	.+8      	; 0x8a2 <__fp_round+0x20>
     89a:	6f 5f       	subi	r22, 0xFF	; 255
     89c:	7f 4f       	sbci	r23, 0xFF	; 255
     89e:	8f 4f       	sbci	r24, 0xFF	; 255
     8a0:	9f 4f       	sbci	r25, 0xFF	; 255
     8a2:	08 95       	ret

000008a4 <__fp_split3>:
     8a4:	57 fd       	sbrc	r21, 7
     8a6:	90 58       	subi	r25, 0x80	; 128
     8a8:	44 0f       	add	r20, r20
     8aa:	55 1f       	adc	r21, r21
     8ac:	59 f0       	breq	.+22     	; 0x8c4 <__fp_splitA+0x10>
     8ae:	5f 3f       	cpi	r21, 0xFF	; 255
     8b0:	71 f0       	breq	.+28     	; 0x8ce <__fp_splitA+0x1a>
     8b2:	47 95       	ror	r20

000008b4 <__fp_splitA>:
     8b4:	88 0f       	add	r24, r24
     8b6:	97 fb       	bst	r25, 7
     8b8:	99 1f       	adc	r25, r25
     8ba:	61 f0       	breq	.+24     	; 0x8d4 <__fp_splitA+0x20>
     8bc:	9f 3f       	cpi	r25, 0xFF	; 255
     8be:	79 f0       	breq	.+30     	; 0x8de <__fp_splitA+0x2a>
     8c0:	87 95       	ror	r24
     8c2:	08 95       	ret
     8c4:	12 16       	cp	r1, r18
     8c6:	13 06       	cpc	r1, r19
     8c8:	14 06       	cpc	r1, r20
     8ca:	55 1f       	adc	r21, r21
     8cc:	f2 cf       	rjmp	.-28     	; 0x8b2 <__fp_split3+0xe>
     8ce:	46 95       	lsr	r20
     8d0:	f1 df       	rcall	.-30     	; 0x8b4 <__fp_splitA>
     8d2:	08 c0       	rjmp	.+16     	; 0x8e4 <__fp_splitA+0x30>
     8d4:	16 16       	cp	r1, r22
     8d6:	17 06       	cpc	r1, r23
     8d8:	18 06       	cpc	r1, r24
     8da:	99 1f       	adc	r25, r25
     8dc:	f1 cf       	rjmp	.-30     	; 0x8c0 <__fp_splitA+0xc>
     8de:	86 95       	lsr	r24
     8e0:	71 05       	cpc	r23, r1
     8e2:	61 05       	cpc	r22, r1
     8e4:	08 94       	sec
     8e6:	08 95       	ret

000008e8 <__fp_zero>:
     8e8:	e8 94       	clt

000008ea <__fp_szero>:
     8ea:	bb 27       	eor	r27, r27
     8ec:	66 27       	eor	r22, r22
     8ee:	77 27       	eor	r23, r23
     8f0:	cb 01       	movw	r24, r22
     8f2:	97 f9       	bld	r25, 7
     8f4:	08 95       	ret

000008f6 <__gesf2>:
     8f6:	8a df       	rcall	.-236    	; 0x80c <__fp_cmp>
     8f8:	08 f4       	brcc	.+2      	; 0x8fc <__gesf2+0x6>
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	08 95       	ret

000008fe <__mulsf3>:
     8fe:	0b d0       	rcall	.+22     	; 0x916 <__mulsf3x>
     900:	c0 cf       	rjmp	.-128    	; 0x882 <__fp_round>
     902:	b1 df       	rcall	.-158    	; 0x866 <__fp_pscA>
     904:	28 f0       	brcs	.+10     	; 0x910 <__mulsf3+0x12>
     906:	b6 df       	rcall	.-148    	; 0x874 <__fp_pscB>
     908:	18 f0       	brcs	.+6      	; 0x910 <__mulsf3+0x12>
     90a:	95 23       	and	r25, r21
     90c:	09 f0       	breq	.+2      	; 0x910 <__mulsf3+0x12>
     90e:	a2 cf       	rjmp	.-188    	; 0x854 <__fp_inf>
     910:	a7 cf       	rjmp	.-178    	; 0x860 <__fp_nan>
     912:	11 24       	eor	r1, r1
     914:	ea cf       	rjmp	.-44     	; 0x8ea <__fp_szero>

00000916 <__mulsf3x>:
     916:	c6 df       	rcall	.-116    	; 0x8a4 <__fp_split3>
     918:	a0 f3       	brcs	.-24     	; 0x902 <__mulsf3+0x4>

0000091a <__mulsf3_pse>:
     91a:	95 9f       	mul	r25, r21
     91c:	d1 f3       	breq	.-12     	; 0x912 <__mulsf3+0x14>
     91e:	95 0f       	add	r25, r21
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	55 1f       	adc	r21, r21
     924:	62 9f       	mul	r22, r18
     926:	f0 01       	movw	r30, r0
     928:	72 9f       	mul	r23, r18
     92a:	bb 27       	eor	r27, r27
     92c:	f0 0d       	add	r31, r0
     92e:	b1 1d       	adc	r27, r1
     930:	63 9f       	mul	r22, r19
     932:	aa 27       	eor	r26, r26
     934:	f0 0d       	add	r31, r0
     936:	b1 1d       	adc	r27, r1
     938:	aa 1f       	adc	r26, r26
     93a:	64 9f       	mul	r22, r20
     93c:	66 27       	eor	r22, r22
     93e:	b0 0d       	add	r27, r0
     940:	a1 1d       	adc	r26, r1
     942:	66 1f       	adc	r22, r22
     944:	82 9f       	mul	r24, r18
     946:	22 27       	eor	r18, r18
     948:	b0 0d       	add	r27, r0
     94a:	a1 1d       	adc	r26, r1
     94c:	62 1f       	adc	r22, r18
     94e:	73 9f       	mul	r23, r19
     950:	b0 0d       	add	r27, r0
     952:	a1 1d       	adc	r26, r1
     954:	62 1f       	adc	r22, r18
     956:	83 9f       	mul	r24, r19
     958:	a0 0d       	add	r26, r0
     95a:	61 1d       	adc	r22, r1
     95c:	22 1f       	adc	r18, r18
     95e:	74 9f       	mul	r23, r20
     960:	33 27       	eor	r19, r19
     962:	a0 0d       	add	r26, r0
     964:	61 1d       	adc	r22, r1
     966:	23 1f       	adc	r18, r19
     968:	84 9f       	mul	r24, r20
     96a:	60 0d       	add	r22, r0
     96c:	21 1d       	adc	r18, r1
     96e:	82 2f       	mov	r24, r18
     970:	76 2f       	mov	r23, r22
     972:	6a 2f       	mov	r22, r26
     974:	11 24       	eor	r1, r1
     976:	9f 57       	subi	r25, 0x7F	; 127
     978:	50 40       	sbci	r21, 0x00	; 0
     97a:	8a f0       	brmi	.+34     	; 0x99e <__mulsf3_pse+0x84>
     97c:	e1 f0       	breq	.+56     	; 0x9b6 <__mulsf3_pse+0x9c>
     97e:	88 23       	and	r24, r24
     980:	4a f0       	brmi	.+18     	; 0x994 <__mulsf3_pse+0x7a>
     982:	ee 0f       	add	r30, r30
     984:	ff 1f       	adc	r31, r31
     986:	bb 1f       	adc	r27, r27
     988:	66 1f       	adc	r22, r22
     98a:	77 1f       	adc	r23, r23
     98c:	88 1f       	adc	r24, r24
     98e:	91 50       	subi	r25, 0x01	; 1
     990:	50 40       	sbci	r21, 0x00	; 0
     992:	a9 f7       	brne	.-22     	; 0x97e <__mulsf3_pse+0x64>
     994:	9e 3f       	cpi	r25, 0xFE	; 254
     996:	51 05       	cpc	r21, r1
     998:	70 f0       	brcs	.+28     	; 0x9b6 <__mulsf3_pse+0x9c>
     99a:	5c cf       	rjmp	.-328    	; 0x854 <__fp_inf>
     99c:	a6 cf       	rjmp	.-180    	; 0x8ea <__fp_szero>
     99e:	5f 3f       	cpi	r21, 0xFF	; 255
     9a0:	ec f3       	brlt	.-6      	; 0x99c <__mulsf3_pse+0x82>
     9a2:	98 3e       	cpi	r25, 0xE8	; 232
     9a4:	dc f3       	brlt	.-10     	; 0x99c <__mulsf3_pse+0x82>
     9a6:	86 95       	lsr	r24
     9a8:	77 95       	ror	r23
     9aa:	67 95       	ror	r22
     9ac:	b7 95       	ror	r27
     9ae:	f7 95       	ror	r31
     9b0:	e7 95       	ror	r30
     9b2:	9f 5f       	subi	r25, 0xFF	; 255
     9b4:	c1 f7       	brne	.-16     	; 0x9a6 <__mulsf3_pse+0x8c>
     9b6:	fe 2b       	or	r31, r30
     9b8:	88 0f       	add	r24, r24
     9ba:	91 1d       	adc	r25, r1
     9bc:	96 95       	lsr	r25
     9be:	87 95       	ror	r24
     9c0:	97 f9       	bld	r25, 7
     9c2:	08 95       	ret

000009c4 <fdevopen>:
     9c4:	0f 93       	push	r16
     9c6:	1f 93       	push	r17
     9c8:	cf 93       	push	r28
     9ca:	df 93       	push	r29
     9cc:	ec 01       	movw	r28, r24
     9ce:	8b 01       	movw	r16, r22
     9d0:	00 97       	sbiw	r24, 0x00	; 0
     9d2:	31 f4       	brne	.+12     	; 0x9e0 <fdevopen+0x1c>
     9d4:	61 15       	cp	r22, r1
     9d6:	71 05       	cpc	r23, r1
     9d8:	19 f4       	brne	.+6      	; 0x9e0 <fdevopen+0x1c>
     9da:	80 e0       	ldi	r24, 0x00	; 0
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	37 c0       	rjmp	.+110    	; 0xa4e <fdevopen+0x8a>
     9e0:	6e e0       	ldi	r22, 0x0E	; 14
     9e2:	70 e0       	ldi	r23, 0x00	; 0
     9e4:	81 e0       	ldi	r24, 0x01	; 1
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	63 d2       	rcall	.+1222   	; 0xeb0 <calloc>
     9ea:	fc 01       	movw	r30, r24
     9ec:	00 97       	sbiw	r24, 0x00	; 0
     9ee:	a9 f3       	breq	.-22     	; 0x9da <fdevopen+0x16>
     9f0:	80 e8       	ldi	r24, 0x80	; 128
     9f2:	83 83       	std	Z+3, r24	; 0x03
     9f4:	01 15       	cp	r16, r1
     9f6:	11 05       	cpc	r17, r1
     9f8:	71 f0       	breq	.+28     	; 0xa16 <fdevopen+0x52>
     9fa:	13 87       	std	Z+11, r17	; 0x0b
     9fc:	02 87       	std	Z+10, r16	; 0x0a
     9fe:	81 e8       	ldi	r24, 0x81	; 129
     a00:	83 83       	std	Z+3, r24	; 0x03
     a02:	80 91 f6 03 	lds	r24, 0x03F6
     a06:	90 91 f7 03 	lds	r25, 0x03F7
     a0a:	89 2b       	or	r24, r25
     a0c:	21 f4       	brne	.+8      	; 0xa16 <fdevopen+0x52>
     a0e:	f0 93 f7 03 	sts	0x03F7, r31
     a12:	e0 93 f6 03 	sts	0x03F6, r30
     a16:	20 97       	sbiw	r28, 0x00	; 0
     a18:	c9 f0       	breq	.+50     	; 0xa4c <fdevopen+0x88>
     a1a:	d1 87       	std	Z+9, r29	; 0x09
     a1c:	c0 87       	std	Z+8, r28	; 0x08
     a1e:	83 81       	ldd	r24, Z+3	; 0x03
     a20:	82 60       	ori	r24, 0x02	; 2
     a22:	83 83       	std	Z+3, r24	; 0x03
     a24:	80 91 f8 03 	lds	r24, 0x03F8
     a28:	90 91 f9 03 	lds	r25, 0x03F9
     a2c:	89 2b       	or	r24, r25
     a2e:	71 f4       	brne	.+28     	; 0xa4c <fdevopen+0x88>
     a30:	f0 93 f9 03 	sts	0x03F9, r31
     a34:	e0 93 f8 03 	sts	0x03F8, r30
     a38:	80 91 fa 03 	lds	r24, 0x03FA
     a3c:	90 91 fb 03 	lds	r25, 0x03FB
     a40:	89 2b       	or	r24, r25
     a42:	21 f4       	brne	.+8      	; 0xa4c <fdevopen+0x88>
     a44:	f0 93 fb 03 	sts	0x03FB, r31
     a48:	e0 93 fa 03 	sts	0x03FA, r30
     a4c:	cf 01       	movw	r24, r30
     a4e:	df 91       	pop	r29
     a50:	cf 91       	pop	r28
     a52:	1f 91       	pop	r17
     a54:	0f 91       	pop	r16
     a56:	08 95       	ret

00000a58 <printf>:
     a58:	cf 93       	push	r28
     a5a:	df 93       	push	r29
     a5c:	cd b7       	in	r28, 0x3d	; 61
     a5e:	de b7       	in	r29, 0x3e	; 62
     a60:	fe 01       	movw	r30, r28
     a62:	36 96       	adiw	r30, 0x06	; 6
     a64:	61 91       	ld	r22, Z+
     a66:	71 91       	ld	r23, Z+
     a68:	af 01       	movw	r20, r30
     a6a:	80 91 f8 03 	lds	r24, 0x03F8
     a6e:	90 91 f9 03 	lds	r25, 0x03F9
     a72:	30 d0       	rcall	.+96     	; 0xad4 <vfprintf>
     a74:	df 91       	pop	r29
     a76:	cf 91       	pop	r28
     a78:	08 95       	ret

00000a7a <puts>:
     a7a:	0f 93       	push	r16
     a7c:	1f 93       	push	r17
     a7e:	cf 93       	push	r28
     a80:	df 93       	push	r29
     a82:	e0 91 f8 03 	lds	r30, 0x03F8
     a86:	f0 91 f9 03 	lds	r31, 0x03F9
     a8a:	23 81       	ldd	r18, Z+3	; 0x03
     a8c:	21 ff       	sbrs	r18, 1
     a8e:	1b c0       	rjmp	.+54     	; 0xac6 <puts+0x4c>
     a90:	ec 01       	movw	r28, r24
     a92:	00 e0       	ldi	r16, 0x00	; 0
     a94:	10 e0       	ldi	r17, 0x00	; 0
     a96:	89 91       	ld	r24, Y+
     a98:	60 91 f8 03 	lds	r22, 0x03F8
     a9c:	70 91 f9 03 	lds	r23, 0x03F9
     aa0:	db 01       	movw	r26, r22
     aa2:	18 96       	adiw	r26, 0x08	; 8
     aa4:	ed 91       	ld	r30, X+
     aa6:	fc 91       	ld	r31, X
     aa8:	19 97       	sbiw	r26, 0x09	; 9
     aaa:	88 23       	and	r24, r24
     aac:	31 f0       	breq	.+12     	; 0xaba <puts+0x40>
     aae:	19 95       	eicall
     ab0:	89 2b       	or	r24, r25
     ab2:	89 f3       	breq	.-30     	; 0xa96 <puts+0x1c>
     ab4:	0f ef       	ldi	r16, 0xFF	; 255
     ab6:	1f ef       	ldi	r17, 0xFF	; 255
     ab8:	ee cf       	rjmp	.-36     	; 0xa96 <puts+0x1c>
     aba:	8a e0       	ldi	r24, 0x0A	; 10
     abc:	19 95       	eicall
     abe:	89 2b       	or	r24, r25
     ac0:	11 f4       	brne	.+4      	; 0xac6 <puts+0x4c>
     ac2:	c8 01       	movw	r24, r16
     ac4:	02 c0       	rjmp	.+4      	; 0xaca <puts+0x50>
     ac6:	8f ef       	ldi	r24, 0xFF	; 255
     ac8:	9f ef       	ldi	r25, 0xFF	; 255
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	1f 91       	pop	r17
     ad0:	0f 91       	pop	r16
     ad2:	08 95       	ret

00000ad4 <vfprintf>:
     ad4:	2f 92       	push	r2
     ad6:	3f 92       	push	r3
     ad8:	4f 92       	push	r4
     ada:	5f 92       	push	r5
     adc:	6f 92       	push	r6
     ade:	7f 92       	push	r7
     ae0:	8f 92       	push	r8
     ae2:	9f 92       	push	r9
     ae4:	af 92       	push	r10
     ae6:	bf 92       	push	r11
     ae8:	cf 92       	push	r12
     aea:	df 92       	push	r13
     aec:	ef 92       	push	r14
     aee:	ff 92       	push	r15
     af0:	0f 93       	push	r16
     af2:	1f 93       	push	r17
     af4:	cf 93       	push	r28
     af6:	df 93       	push	r29
     af8:	cd b7       	in	r28, 0x3d	; 61
     afa:	de b7       	in	r29, 0x3e	; 62
     afc:	2c 97       	sbiw	r28, 0x0c	; 12
     afe:	0f b6       	in	r0, 0x3f	; 63
     b00:	f8 94       	cli
     b02:	de bf       	out	0x3e, r29	; 62
     b04:	0f be       	out	0x3f, r0	; 63
     b06:	cd bf       	out	0x3d, r28	; 61
     b08:	7c 01       	movw	r14, r24
     b0a:	6b 01       	movw	r12, r22
     b0c:	8a 01       	movw	r16, r20
     b0e:	fc 01       	movw	r30, r24
     b10:	17 82       	std	Z+7, r1	; 0x07
     b12:	16 82       	std	Z+6, r1	; 0x06
     b14:	83 81       	ldd	r24, Z+3	; 0x03
     b16:	81 ff       	sbrs	r24, 1
     b18:	b0 c1       	rjmp	.+864    	; 0xe7a <vfprintf+0x3a6>
     b1a:	ce 01       	movw	r24, r28
     b1c:	01 96       	adiw	r24, 0x01	; 1
     b1e:	4c 01       	movw	r8, r24
     b20:	f7 01       	movw	r30, r14
     b22:	93 81       	ldd	r25, Z+3	; 0x03
     b24:	f6 01       	movw	r30, r12
     b26:	93 fd       	sbrc	r25, 3
     b28:	85 91       	lpm	r24, Z+
     b2a:	93 ff       	sbrs	r25, 3
     b2c:	81 91       	ld	r24, Z+
     b2e:	6f 01       	movw	r12, r30
     b30:	88 23       	and	r24, r24
     b32:	09 f4       	brne	.+2      	; 0xb36 <vfprintf+0x62>
     b34:	9e c1       	rjmp	.+828    	; 0xe72 <vfprintf+0x39e>
     b36:	85 32       	cpi	r24, 0x25	; 37
     b38:	39 f4       	brne	.+14     	; 0xb48 <vfprintf+0x74>
     b3a:	93 fd       	sbrc	r25, 3
     b3c:	85 91       	lpm	r24, Z+
     b3e:	93 ff       	sbrs	r25, 3
     b40:	81 91       	ld	r24, Z+
     b42:	6f 01       	movw	r12, r30
     b44:	85 32       	cpi	r24, 0x25	; 37
     b46:	21 f4       	brne	.+8      	; 0xb50 <vfprintf+0x7c>
     b48:	b7 01       	movw	r22, r14
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	0f d3       	rcall	.+1566   	; 0x116c <fputc>
     b4e:	e8 cf       	rjmp	.-48     	; 0xb20 <vfprintf+0x4c>
     b50:	51 2c       	mov	r5, r1
     b52:	31 2c       	mov	r3, r1
     b54:	20 e0       	ldi	r18, 0x00	; 0
     b56:	20 32       	cpi	r18, 0x20	; 32
     b58:	a0 f4       	brcc	.+40     	; 0xb82 <vfprintf+0xae>
     b5a:	8b 32       	cpi	r24, 0x2B	; 43
     b5c:	69 f0       	breq	.+26     	; 0xb78 <vfprintf+0xa4>
     b5e:	30 f4       	brcc	.+12     	; 0xb6c <vfprintf+0x98>
     b60:	80 32       	cpi	r24, 0x20	; 32
     b62:	59 f0       	breq	.+22     	; 0xb7a <vfprintf+0xa6>
     b64:	83 32       	cpi	r24, 0x23	; 35
     b66:	69 f4       	brne	.+26     	; 0xb82 <vfprintf+0xae>
     b68:	20 61       	ori	r18, 0x10	; 16
     b6a:	2c c0       	rjmp	.+88     	; 0xbc4 <vfprintf+0xf0>
     b6c:	8d 32       	cpi	r24, 0x2D	; 45
     b6e:	39 f0       	breq	.+14     	; 0xb7e <vfprintf+0xaa>
     b70:	80 33       	cpi	r24, 0x30	; 48
     b72:	39 f4       	brne	.+14     	; 0xb82 <vfprintf+0xae>
     b74:	21 60       	ori	r18, 0x01	; 1
     b76:	26 c0       	rjmp	.+76     	; 0xbc4 <vfprintf+0xf0>
     b78:	22 60       	ori	r18, 0x02	; 2
     b7a:	24 60       	ori	r18, 0x04	; 4
     b7c:	23 c0       	rjmp	.+70     	; 0xbc4 <vfprintf+0xf0>
     b7e:	28 60       	ori	r18, 0x08	; 8
     b80:	21 c0       	rjmp	.+66     	; 0xbc4 <vfprintf+0xf0>
     b82:	27 fd       	sbrc	r18, 7
     b84:	27 c0       	rjmp	.+78     	; 0xbd4 <vfprintf+0x100>
     b86:	30 ed       	ldi	r19, 0xD0	; 208
     b88:	38 0f       	add	r19, r24
     b8a:	3a 30       	cpi	r19, 0x0A	; 10
     b8c:	78 f4       	brcc	.+30     	; 0xbac <vfprintf+0xd8>
     b8e:	26 ff       	sbrs	r18, 6
     b90:	06 c0       	rjmp	.+12     	; 0xb9e <vfprintf+0xca>
     b92:	fa e0       	ldi	r31, 0x0A	; 10
     b94:	5f 9e       	mul	r5, r31
     b96:	30 0d       	add	r19, r0
     b98:	11 24       	eor	r1, r1
     b9a:	53 2e       	mov	r5, r19
     b9c:	13 c0       	rjmp	.+38     	; 0xbc4 <vfprintf+0xf0>
     b9e:	8a e0       	ldi	r24, 0x0A	; 10
     ba0:	38 9e       	mul	r3, r24
     ba2:	30 0d       	add	r19, r0
     ba4:	11 24       	eor	r1, r1
     ba6:	33 2e       	mov	r3, r19
     ba8:	20 62       	ori	r18, 0x20	; 32
     baa:	0c c0       	rjmp	.+24     	; 0xbc4 <vfprintf+0xf0>
     bac:	8e 32       	cpi	r24, 0x2E	; 46
     bae:	21 f4       	brne	.+8      	; 0xbb8 <vfprintf+0xe4>
     bb0:	26 fd       	sbrc	r18, 6
     bb2:	5f c1       	rjmp	.+702    	; 0xe72 <vfprintf+0x39e>
     bb4:	20 64       	ori	r18, 0x40	; 64
     bb6:	06 c0       	rjmp	.+12     	; 0xbc4 <vfprintf+0xf0>
     bb8:	8c 36       	cpi	r24, 0x6C	; 108
     bba:	11 f4       	brne	.+4      	; 0xbc0 <vfprintf+0xec>
     bbc:	20 68       	ori	r18, 0x80	; 128
     bbe:	02 c0       	rjmp	.+4      	; 0xbc4 <vfprintf+0xf0>
     bc0:	88 36       	cpi	r24, 0x68	; 104
     bc2:	41 f4       	brne	.+16     	; 0xbd4 <vfprintf+0x100>
     bc4:	f6 01       	movw	r30, r12
     bc6:	93 fd       	sbrc	r25, 3
     bc8:	85 91       	lpm	r24, Z+
     bca:	93 ff       	sbrs	r25, 3
     bcc:	81 91       	ld	r24, Z+
     bce:	6f 01       	movw	r12, r30
     bd0:	81 11       	cpse	r24, r1
     bd2:	c1 cf       	rjmp	.-126    	; 0xb56 <vfprintf+0x82>
     bd4:	98 2f       	mov	r25, r24
     bd6:	9f 7d       	andi	r25, 0xDF	; 223
     bd8:	95 54       	subi	r25, 0x45	; 69
     bda:	93 30       	cpi	r25, 0x03	; 3
     bdc:	28 f4       	brcc	.+10     	; 0xbe8 <vfprintf+0x114>
     bde:	0c 5f       	subi	r16, 0xFC	; 252
     be0:	1f 4f       	sbci	r17, 0xFF	; 255
     be2:	ff e3       	ldi	r31, 0x3F	; 63
     be4:	f9 83       	std	Y+1, r31	; 0x01
     be6:	0d c0       	rjmp	.+26     	; 0xc02 <vfprintf+0x12e>
     be8:	83 36       	cpi	r24, 0x63	; 99
     bea:	31 f0       	breq	.+12     	; 0xbf8 <vfprintf+0x124>
     bec:	83 37       	cpi	r24, 0x73	; 115
     bee:	71 f0       	breq	.+28     	; 0xc0c <vfprintf+0x138>
     bf0:	83 35       	cpi	r24, 0x53	; 83
     bf2:	09 f0       	breq	.+2      	; 0xbf6 <vfprintf+0x122>
     bf4:	57 c0       	rjmp	.+174    	; 0xca4 <vfprintf+0x1d0>
     bf6:	21 c0       	rjmp	.+66     	; 0xc3a <vfprintf+0x166>
     bf8:	f8 01       	movw	r30, r16
     bfa:	80 81       	ld	r24, Z
     bfc:	89 83       	std	Y+1, r24	; 0x01
     bfe:	0e 5f       	subi	r16, 0xFE	; 254
     c00:	1f 4f       	sbci	r17, 0xFF	; 255
     c02:	44 24       	eor	r4, r4
     c04:	43 94       	inc	r4
     c06:	51 2c       	mov	r5, r1
     c08:	54 01       	movw	r10, r8
     c0a:	14 c0       	rjmp	.+40     	; 0xc34 <vfprintf+0x160>
     c0c:	38 01       	movw	r6, r16
     c0e:	f2 e0       	ldi	r31, 0x02	; 2
     c10:	6f 0e       	add	r6, r31
     c12:	71 1c       	adc	r7, r1
     c14:	f8 01       	movw	r30, r16
     c16:	a0 80       	ld	r10, Z
     c18:	b1 80       	ldd	r11, Z+1	; 0x01
     c1a:	26 ff       	sbrs	r18, 6
     c1c:	03 c0       	rjmp	.+6      	; 0xc24 <vfprintf+0x150>
     c1e:	65 2d       	mov	r22, r5
     c20:	70 e0       	ldi	r23, 0x00	; 0
     c22:	02 c0       	rjmp	.+4      	; 0xc28 <vfprintf+0x154>
     c24:	6f ef       	ldi	r22, 0xFF	; 255
     c26:	7f ef       	ldi	r23, 0xFF	; 255
     c28:	c5 01       	movw	r24, r10
     c2a:	2c 87       	std	Y+12, r18	; 0x0c
     c2c:	94 d2       	rcall	.+1320   	; 0x1156 <strnlen>
     c2e:	2c 01       	movw	r4, r24
     c30:	83 01       	movw	r16, r6
     c32:	2c 85       	ldd	r18, Y+12	; 0x0c
     c34:	2f 77       	andi	r18, 0x7F	; 127
     c36:	22 2e       	mov	r2, r18
     c38:	16 c0       	rjmp	.+44     	; 0xc66 <vfprintf+0x192>
     c3a:	38 01       	movw	r6, r16
     c3c:	f2 e0       	ldi	r31, 0x02	; 2
     c3e:	6f 0e       	add	r6, r31
     c40:	71 1c       	adc	r7, r1
     c42:	f8 01       	movw	r30, r16
     c44:	a0 80       	ld	r10, Z
     c46:	b1 80       	ldd	r11, Z+1	; 0x01
     c48:	26 ff       	sbrs	r18, 6
     c4a:	03 c0       	rjmp	.+6      	; 0xc52 <vfprintf+0x17e>
     c4c:	65 2d       	mov	r22, r5
     c4e:	70 e0       	ldi	r23, 0x00	; 0
     c50:	02 c0       	rjmp	.+4      	; 0xc56 <vfprintf+0x182>
     c52:	6f ef       	ldi	r22, 0xFF	; 255
     c54:	7f ef       	ldi	r23, 0xFF	; 255
     c56:	c5 01       	movw	r24, r10
     c58:	2c 87       	std	Y+12, r18	; 0x0c
     c5a:	6b d2       	rcall	.+1238   	; 0x1132 <strnlen_P>
     c5c:	2c 01       	movw	r4, r24
     c5e:	2c 85       	ldd	r18, Y+12	; 0x0c
     c60:	20 68       	ori	r18, 0x80	; 128
     c62:	22 2e       	mov	r2, r18
     c64:	83 01       	movw	r16, r6
     c66:	23 fc       	sbrc	r2, 3
     c68:	19 c0       	rjmp	.+50     	; 0xc9c <vfprintf+0x1c8>
     c6a:	83 2d       	mov	r24, r3
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	48 16       	cp	r4, r24
     c70:	59 06       	cpc	r5, r25
     c72:	a0 f4       	brcc	.+40     	; 0xc9c <vfprintf+0x1c8>
     c74:	b7 01       	movw	r22, r14
     c76:	80 e2       	ldi	r24, 0x20	; 32
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	78 d2       	rcall	.+1264   	; 0x116c <fputc>
     c7c:	3a 94       	dec	r3
     c7e:	f5 cf       	rjmp	.-22     	; 0xc6a <vfprintf+0x196>
     c80:	f5 01       	movw	r30, r10
     c82:	27 fc       	sbrc	r2, 7
     c84:	85 91       	lpm	r24, Z+
     c86:	27 fe       	sbrs	r2, 7
     c88:	81 91       	ld	r24, Z+
     c8a:	5f 01       	movw	r10, r30
     c8c:	b7 01       	movw	r22, r14
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	6d d2       	rcall	.+1242   	; 0x116c <fputc>
     c92:	31 10       	cpse	r3, r1
     c94:	3a 94       	dec	r3
     c96:	f1 e0       	ldi	r31, 0x01	; 1
     c98:	4f 1a       	sub	r4, r31
     c9a:	51 08       	sbc	r5, r1
     c9c:	41 14       	cp	r4, r1
     c9e:	51 04       	cpc	r5, r1
     ca0:	79 f7       	brne	.-34     	; 0xc80 <vfprintf+0x1ac>
     ca2:	de c0       	rjmp	.+444    	; 0xe60 <vfprintf+0x38c>
     ca4:	84 36       	cpi	r24, 0x64	; 100
     ca6:	11 f0       	breq	.+4      	; 0xcac <vfprintf+0x1d8>
     ca8:	89 36       	cpi	r24, 0x69	; 105
     caa:	31 f5       	brne	.+76     	; 0xcf8 <vfprintf+0x224>
     cac:	f8 01       	movw	r30, r16
     cae:	27 ff       	sbrs	r18, 7
     cb0:	07 c0       	rjmp	.+14     	; 0xcc0 <vfprintf+0x1ec>
     cb2:	60 81       	ld	r22, Z
     cb4:	71 81       	ldd	r23, Z+1	; 0x01
     cb6:	82 81       	ldd	r24, Z+2	; 0x02
     cb8:	93 81       	ldd	r25, Z+3	; 0x03
     cba:	0c 5f       	subi	r16, 0xFC	; 252
     cbc:	1f 4f       	sbci	r17, 0xFF	; 255
     cbe:	08 c0       	rjmp	.+16     	; 0xcd0 <vfprintf+0x1fc>
     cc0:	60 81       	ld	r22, Z
     cc2:	71 81       	ldd	r23, Z+1	; 0x01
     cc4:	88 27       	eor	r24, r24
     cc6:	77 fd       	sbrc	r23, 7
     cc8:	80 95       	com	r24
     cca:	98 2f       	mov	r25, r24
     ccc:	0e 5f       	subi	r16, 0xFE	; 254
     cce:	1f 4f       	sbci	r17, 0xFF	; 255
     cd0:	2f 76       	andi	r18, 0x6F	; 111
     cd2:	b2 2e       	mov	r11, r18
     cd4:	97 ff       	sbrs	r25, 7
     cd6:	09 c0       	rjmp	.+18     	; 0xcea <vfprintf+0x216>
     cd8:	90 95       	com	r25
     cda:	80 95       	com	r24
     cdc:	70 95       	com	r23
     cde:	61 95       	neg	r22
     ce0:	7f 4f       	sbci	r23, 0xFF	; 255
     ce2:	8f 4f       	sbci	r24, 0xFF	; 255
     ce4:	9f 4f       	sbci	r25, 0xFF	; 255
     ce6:	20 68       	ori	r18, 0x80	; 128
     ce8:	b2 2e       	mov	r11, r18
     cea:	2a e0       	ldi	r18, 0x0A	; 10
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	a4 01       	movw	r20, r8
     cf0:	6f d2       	rcall	.+1246   	; 0x11d0 <__ultoa_invert>
     cf2:	a8 2e       	mov	r10, r24
     cf4:	a8 18       	sub	r10, r8
     cf6:	43 c0       	rjmp	.+134    	; 0xd7e <vfprintf+0x2aa>
     cf8:	85 37       	cpi	r24, 0x75	; 117
     cfa:	29 f4       	brne	.+10     	; 0xd06 <vfprintf+0x232>
     cfc:	2f 7e       	andi	r18, 0xEF	; 239
     cfe:	b2 2e       	mov	r11, r18
     d00:	2a e0       	ldi	r18, 0x0A	; 10
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	25 c0       	rjmp	.+74     	; 0xd50 <vfprintf+0x27c>
     d06:	f2 2f       	mov	r31, r18
     d08:	f9 7f       	andi	r31, 0xF9	; 249
     d0a:	bf 2e       	mov	r11, r31
     d0c:	8f 36       	cpi	r24, 0x6F	; 111
     d0e:	c1 f0       	breq	.+48     	; 0xd40 <vfprintf+0x26c>
     d10:	18 f4       	brcc	.+6      	; 0xd18 <vfprintf+0x244>
     d12:	88 35       	cpi	r24, 0x58	; 88
     d14:	79 f0       	breq	.+30     	; 0xd34 <vfprintf+0x260>
     d16:	ad c0       	rjmp	.+346    	; 0xe72 <vfprintf+0x39e>
     d18:	80 37       	cpi	r24, 0x70	; 112
     d1a:	19 f0       	breq	.+6      	; 0xd22 <vfprintf+0x24e>
     d1c:	88 37       	cpi	r24, 0x78	; 120
     d1e:	21 f0       	breq	.+8      	; 0xd28 <vfprintf+0x254>
     d20:	a8 c0       	rjmp	.+336    	; 0xe72 <vfprintf+0x39e>
     d22:	2f 2f       	mov	r18, r31
     d24:	20 61       	ori	r18, 0x10	; 16
     d26:	b2 2e       	mov	r11, r18
     d28:	b4 fe       	sbrs	r11, 4
     d2a:	0d c0       	rjmp	.+26     	; 0xd46 <vfprintf+0x272>
     d2c:	8b 2d       	mov	r24, r11
     d2e:	84 60       	ori	r24, 0x04	; 4
     d30:	b8 2e       	mov	r11, r24
     d32:	09 c0       	rjmp	.+18     	; 0xd46 <vfprintf+0x272>
     d34:	24 ff       	sbrs	r18, 4
     d36:	0a c0       	rjmp	.+20     	; 0xd4c <vfprintf+0x278>
     d38:	9f 2f       	mov	r25, r31
     d3a:	96 60       	ori	r25, 0x06	; 6
     d3c:	b9 2e       	mov	r11, r25
     d3e:	06 c0       	rjmp	.+12     	; 0xd4c <vfprintf+0x278>
     d40:	28 e0       	ldi	r18, 0x08	; 8
     d42:	30 e0       	ldi	r19, 0x00	; 0
     d44:	05 c0       	rjmp	.+10     	; 0xd50 <vfprintf+0x27c>
     d46:	20 e1       	ldi	r18, 0x10	; 16
     d48:	30 e0       	ldi	r19, 0x00	; 0
     d4a:	02 c0       	rjmp	.+4      	; 0xd50 <vfprintf+0x27c>
     d4c:	20 e1       	ldi	r18, 0x10	; 16
     d4e:	32 e0       	ldi	r19, 0x02	; 2
     d50:	f8 01       	movw	r30, r16
     d52:	b7 fe       	sbrs	r11, 7
     d54:	07 c0       	rjmp	.+14     	; 0xd64 <vfprintf+0x290>
     d56:	60 81       	ld	r22, Z
     d58:	71 81       	ldd	r23, Z+1	; 0x01
     d5a:	82 81       	ldd	r24, Z+2	; 0x02
     d5c:	93 81       	ldd	r25, Z+3	; 0x03
     d5e:	0c 5f       	subi	r16, 0xFC	; 252
     d60:	1f 4f       	sbci	r17, 0xFF	; 255
     d62:	06 c0       	rjmp	.+12     	; 0xd70 <vfprintf+0x29c>
     d64:	60 81       	ld	r22, Z
     d66:	71 81       	ldd	r23, Z+1	; 0x01
     d68:	80 e0       	ldi	r24, 0x00	; 0
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	0e 5f       	subi	r16, 0xFE	; 254
     d6e:	1f 4f       	sbci	r17, 0xFF	; 255
     d70:	a4 01       	movw	r20, r8
     d72:	2e d2       	rcall	.+1116   	; 0x11d0 <__ultoa_invert>
     d74:	a8 2e       	mov	r10, r24
     d76:	a8 18       	sub	r10, r8
     d78:	fb 2d       	mov	r31, r11
     d7a:	ff 77       	andi	r31, 0x7F	; 127
     d7c:	bf 2e       	mov	r11, r31
     d7e:	b6 fe       	sbrs	r11, 6
     d80:	0b c0       	rjmp	.+22     	; 0xd98 <vfprintf+0x2c4>
     d82:	2b 2d       	mov	r18, r11
     d84:	2e 7f       	andi	r18, 0xFE	; 254
     d86:	a5 14       	cp	r10, r5
     d88:	50 f4       	brcc	.+20     	; 0xd9e <vfprintf+0x2ca>
     d8a:	b4 fe       	sbrs	r11, 4
     d8c:	0a c0       	rjmp	.+20     	; 0xda2 <vfprintf+0x2ce>
     d8e:	b2 fc       	sbrc	r11, 2
     d90:	08 c0       	rjmp	.+16     	; 0xda2 <vfprintf+0x2ce>
     d92:	2b 2d       	mov	r18, r11
     d94:	2e 7e       	andi	r18, 0xEE	; 238
     d96:	05 c0       	rjmp	.+10     	; 0xda2 <vfprintf+0x2ce>
     d98:	7a 2c       	mov	r7, r10
     d9a:	2b 2d       	mov	r18, r11
     d9c:	03 c0       	rjmp	.+6      	; 0xda4 <vfprintf+0x2d0>
     d9e:	7a 2c       	mov	r7, r10
     da0:	01 c0       	rjmp	.+2      	; 0xda4 <vfprintf+0x2d0>
     da2:	75 2c       	mov	r7, r5
     da4:	24 ff       	sbrs	r18, 4
     da6:	0d c0       	rjmp	.+26     	; 0xdc2 <vfprintf+0x2ee>
     da8:	fe 01       	movw	r30, r28
     daa:	ea 0d       	add	r30, r10
     dac:	f1 1d       	adc	r31, r1
     dae:	80 81       	ld	r24, Z
     db0:	80 33       	cpi	r24, 0x30	; 48
     db2:	11 f4       	brne	.+4      	; 0xdb8 <vfprintf+0x2e4>
     db4:	29 7e       	andi	r18, 0xE9	; 233
     db6:	09 c0       	rjmp	.+18     	; 0xdca <vfprintf+0x2f6>
     db8:	22 ff       	sbrs	r18, 2
     dba:	06 c0       	rjmp	.+12     	; 0xdc8 <vfprintf+0x2f4>
     dbc:	73 94       	inc	r7
     dbe:	73 94       	inc	r7
     dc0:	04 c0       	rjmp	.+8      	; 0xdca <vfprintf+0x2f6>
     dc2:	82 2f       	mov	r24, r18
     dc4:	86 78       	andi	r24, 0x86	; 134
     dc6:	09 f0       	breq	.+2      	; 0xdca <vfprintf+0x2f6>
     dc8:	73 94       	inc	r7
     dca:	23 fd       	sbrc	r18, 3
     dcc:	12 c0       	rjmp	.+36     	; 0xdf2 <vfprintf+0x31e>
     dce:	20 ff       	sbrs	r18, 0
     dd0:	06 c0       	rjmp	.+12     	; 0xdde <vfprintf+0x30a>
     dd2:	5a 2c       	mov	r5, r10
     dd4:	73 14       	cp	r7, r3
     dd6:	18 f4       	brcc	.+6      	; 0xdde <vfprintf+0x30a>
     dd8:	53 0c       	add	r5, r3
     dda:	57 18       	sub	r5, r7
     ddc:	73 2c       	mov	r7, r3
     dde:	73 14       	cp	r7, r3
     de0:	60 f4       	brcc	.+24     	; 0xdfa <vfprintf+0x326>
     de2:	b7 01       	movw	r22, r14
     de4:	80 e2       	ldi	r24, 0x20	; 32
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	2c 87       	std	Y+12, r18	; 0x0c
     dea:	c0 d1       	rcall	.+896    	; 0x116c <fputc>
     dec:	73 94       	inc	r7
     dee:	2c 85       	ldd	r18, Y+12	; 0x0c
     df0:	f6 cf       	rjmp	.-20     	; 0xdde <vfprintf+0x30a>
     df2:	73 14       	cp	r7, r3
     df4:	10 f4       	brcc	.+4      	; 0xdfa <vfprintf+0x326>
     df6:	37 18       	sub	r3, r7
     df8:	01 c0       	rjmp	.+2      	; 0xdfc <vfprintf+0x328>
     dfa:	31 2c       	mov	r3, r1
     dfc:	24 ff       	sbrs	r18, 4
     dfe:	11 c0       	rjmp	.+34     	; 0xe22 <vfprintf+0x34e>
     e00:	b7 01       	movw	r22, r14
     e02:	80 e3       	ldi	r24, 0x30	; 48
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	2c 87       	std	Y+12, r18	; 0x0c
     e08:	b1 d1       	rcall	.+866    	; 0x116c <fputc>
     e0a:	2c 85       	ldd	r18, Y+12	; 0x0c
     e0c:	22 ff       	sbrs	r18, 2
     e0e:	16 c0       	rjmp	.+44     	; 0xe3c <vfprintf+0x368>
     e10:	21 ff       	sbrs	r18, 1
     e12:	03 c0       	rjmp	.+6      	; 0xe1a <vfprintf+0x346>
     e14:	88 e5       	ldi	r24, 0x58	; 88
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <vfprintf+0x34a>
     e1a:	88 e7       	ldi	r24, 0x78	; 120
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	b7 01       	movw	r22, r14
     e20:	0c c0       	rjmp	.+24     	; 0xe3a <vfprintf+0x366>
     e22:	82 2f       	mov	r24, r18
     e24:	86 78       	andi	r24, 0x86	; 134
     e26:	51 f0       	breq	.+20     	; 0xe3c <vfprintf+0x368>
     e28:	21 fd       	sbrc	r18, 1
     e2a:	02 c0       	rjmp	.+4      	; 0xe30 <vfprintf+0x35c>
     e2c:	80 e2       	ldi	r24, 0x20	; 32
     e2e:	01 c0       	rjmp	.+2      	; 0xe32 <vfprintf+0x35e>
     e30:	8b e2       	ldi	r24, 0x2B	; 43
     e32:	27 fd       	sbrc	r18, 7
     e34:	8d e2       	ldi	r24, 0x2D	; 45
     e36:	b7 01       	movw	r22, r14
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	98 d1       	rcall	.+816    	; 0x116c <fputc>
     e3c:	a5 14       	cp	r10, r5
     e3e:	30 f4       	brcc	.+12     	; 0xe4c <vfprintf+0x378>
     e40:	b7 01       	movw	r22, r14
     e42:	80 e3       	ldi	r24, 0x30	; 48
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	92 d1       	rcall	.+804    	; 0x116c <fputc>
     e48:	5a 94       	dec	r5
     e4a:	f8 cf       	rjmp	.-16     	; 0xe3c <vfprintf+0x368>
     e4c:	aa 94       	dec	r10
     e4e:	f4 01       	movw	r30, r8
     e50:	ea 0d       	add	r30, r10
     e52:	f1 1d       	adc	r31, r1
     e54:	80 81       	ld	r24, Z
     e56:	b7 01       	movw	r22, r14
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	88 d1       	rcall	.+784    	; 0x116c <fputc>
     e5c:	a1 10       	cpse	r10, r1
     e5e:	f6 cf       	rjmp	.-20     	; 0xe4c <vfprintf+0x378>
     e60:	33 20       	and	r3, r3
     e62:	09 f4       	brne	.+2      	; 0xe66 <vfprintf+0x392>
     e64:	5d ce       	rjmp	.-838    	; 0xb20 <vfprintf+0x4c>
     e66:	b7 01       	movw	r22, r14
     e68:	80 e2       	ldi	r24, 0x20	; 32
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	7f d1       	rcall	.+766    	; 0x116c <fputc>
     e6e:	3a 94       	dec	r3
     e70:	f7 cf       	rjmp	.-18     	; 0xe60 <vfprintf+0x38c>
     e72:	f7 01       	movw	r30, r14
     e74:	86 81       	ldd	r24, Z+6	; 0x06
     e76:	97 81       	ldd	r25, Z+7	; 0x07
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <vfprintf+0x3aa>
     e7a:	8f ef       	ldi	r24, 0xFF	; 255
     e7c:	9f ef       	ldi	r25, 0xFF	; 255
     e7e:	2c 96       	adiw	r28, 0x0c	; 12
     e80:	0f b6       	in	r0, 0x3f	; 63
     e82:	f8 94       	cli
     e84:	de bf       	out	0x3e, r29	; 62
     e86:	0f be       	out	0x3f, r0	; 63
     e88:	cd bf       	out	0x3d, r28	; 61
     e8a:	df 91       	pop	r29
     e8c:	cf 91       	pop	r28
     e8e:	1f 91       	pop	r17
     e90:	0f 91       	pop	r16
     e92:	ff 90       	pop	r15
     e94:	ef 90       	pop	r14
     e96:	df 90       	pop	r13
     e98:	cf 90       	pop	r12
     e9a:	bf 90       	pop	r11
     e9c:	af 90       	pop	r10
     e9e:	9f 90       	pop	r9
     ea0:	8f 90       	pop	r8
     ea2:	7f 90       	pop	r7
     ea4:	6f 90       	pop	r6
     ea6:	5f 90       	pop	r5
     ea8:	4f 90       	pop	r4
     eaa:	3f 90       	pop	r3
     eac:	2f 90       	pop	r2
     eae:	08 95       	ret

00000eb0 <calloc>:
     eb0:	0f 93       	push	r16
     eb2:	1f 93       	push	r17
     eb4:	cf 93       	push	r28
     eb6:	df 93       	push	r29
     eb8:	86 9f       	mul	r24, r22
     eba:	80 01       	movw	r16, r0
     ebc:	87 9f       	mul	r24, r23
     ebe:	10 0d       	add	r17, r0
     ec0:	96 9f       	mul	r25, r22
     ec2:	10 0d       	add	r17, r0
     ec4:	11 24       	eor	r1, r1
     ec6:	c8 01       	movw	r24, r16
     ec8:	0d d0       	rcall	.+26     	; 0xee4 <malloc>
     eca:	ec 01       	movw	r28, r24
     ecc:	00 97       	sbiw	r24, 0x00	; 0
     ece:	21 f0       	breq	.+8      	; 0xed8 <calloc+0x28>
     ed0:	a8 01       	movw	r20, r16
     ed2:	60 e0       	ldi	r22, 0x00	; 0
     ed4:	70 e0       	ldi	r23, 0x00	; 0
     ed6:	38 d1       	rcall	.+624    	; 0x1148 <memset>
     ed8:	ce 01       	movw	r24, r28
     eda:	df 91       	pop	r29
     edc:	cf 91       	pop	r28
     ede:	1f 91       	pop	r17
     ee0:	0f 91       	pop	r16
     ee2:	08 95       	ret

00000ee4 <malloc>:
     ee4:	cf 93       	push	r28
     ee6:	df 93       	push	r29
     ee8:	82 30       	cpi	r24, 0x02	; 2
     eea:	91 05       	cpc	r25, r1
     eec:	10 f4       	brcc	.+4      	; 0xef2 <malloc+0xe>
     eee:	82 e0       	ldi	r24, 0x02	; 2
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	e0 91 fe 03 	lds	r30, 0x03FE
     ef6:	f0 91 ff 03 	lds	r31, 0x03FF
     efa:	20 e0       	ldi	r18, 0x00	; 0
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	a0 e0       	ldi	r26, 0x00	; 0
     f00:	b0 e0       	ldi	r27, 0x00	; 0
     f02:	30 97       	sbiw	r30, 0x00	; 0
     f04:	39 f1       	breq	.+78     	; 0xf54 <malloc+0x70>
     f06:	40 81       	ld	r20, Z
     f08:	51 81       	ldd	r21, Z+1	; 0x01
     f0a:	48 17       	cp	r20, r24
     f0c:	59 07       	cpc	r21, r25
     f0e:	b8 f0       	brcs	.+46     	; 0xf3e <malloc+0x5a>
     f10:	48 17       	cp	r20, r24
     f12:	59 07       	cpc	r21, r25
     f14:	71 f4       	brne	.+28     	; 0xf32 <malloc+0x4e>
     f16:	82 81       	ldd	r24, Z+2	; 0x02
     f18:	93 81       	ldd	r25, Z+3	; 0x03
     f1a:	10 97       	sbiw	r26, 0x00	; 0
     f1c:	29 f0       	breq	.+10     	; 0xf28 <malloc+0x44>
     f1e:	13 96       	adiw	r26, 0x03	; 3
     f20:	9c 93       	st	X, r25
     f22:	8e 93       	st	-X, r24
     f24:	12 97       	sbiw	r26, 0x02	; 2
     f26:	2c c0       	rjmp	.+88     	; 0xf80 <malloc+0x9c>
     f28:	90 93 ff 03 	sts	0x03FF, r25
     f2c:	80 93 fe 03 	sts	0x03FE, r24
     f30:	27 c0       	rjmp	.+78     	; 0xf80 <malloc+0x9c>
     f32:	21 15       	cp	r18, r1
     f34:	31 05       	cpc	r19, r1
     f36:	31 f0       	breq	.+12     	; 0xf44 <malloc+0x60>
     f38:	42 17       	cp	r20, r18
     f3a:	53 07       	cpc	r21, r19
     f3c:	18 f0       	brcs	.+6      	; 0xf44 <malloc+0x60>
     f3e:	a9 01       	movw	r20, r18
     f40:	db 01       	movw	r26, r22
     f42:	01 c0       	rjmp	.+2      	; 0xf46 <malloc+0x62>
     f44:	ef 01       	movw	r28, r30
     f46:	9a 01       	movw	r18, r20
     f48:	bd 01       	movw	r22, r26
     f4a:	df 01       	movw	r26, r30
     f4c:	02 80       	ldd	r0, Z+2	; 0x02
     f4e:	f3 81       	ldd	r31, Z+3	; 0x03
     f50:	e0 2d       	mov	r30, r0
     f52:	d7 cf       	rjmp	.-82     	; 0xf02 <malloc+0x1e>
     f54:	21 15       	cp	r18, r1
     f56:	31 05       	cpc	r19, r1
     f58:	f9 f0       	breq	.+62     	; 0xf98 <malloc+0xb4>
     f5a:	28 1b       	sub	r18, r24
     f5c:	39 0b       	sbc	r19, r25
     f5e:	24 30       	cpi	r18, 0x04	; 4
     f60:	31 05       	cpc	r19, r1
     f62:	80 f4       	brcc	.+32     	; 0xf84 <malloc+0xa0>
     f64:	8a 81       	ldd	r24, Y+2	; 0x02
     f66:	9b 81       	ldd	r25, Y+3	; 0x03
     f68:	61 15       	cp	r22, r1
     f6a:	71 05       	cpc	r23, r1
     f6c:	21 f0       	breq	.+8      	; 0xf76 <malloc+0x92>
     f6e:	fb 01       	movw	r30, r22
     f70:	93 83       	std	Z+3, r25	; 0x03
     f72:	82 83       	std	Z+2, r24	; 0x02
     f74:	04 c0       	rjmp	.+8      	; 0xf7e <malloc+0x9a>
     f76:	90 93 ff 03 	sts	0x03FF, r25
     f7a:	80 93 fe 03 	sts	0x03FE, r24
     f7e:	fe 01       	movw	r30, r28
     f80:	32 96       	adiw	r30, 0x02	; 2
     f82:	44 c0       	rjmp	.+136    	; 0x100c <malloc+0x128>
     f84:	fe 01       	movw	r30, r28
     f86:	e2 0f       	add	r30, r18
     f88:	f3 1f       	adc	r31, r19
     f8a:	81 93       	st	Z+, r24
     f8c:	91 93       	st	Z+, r25
     f8e:	22 50       	subi	r18, 0x02	; 2
     f90:	31 09       	sbc	r19, r1
     f92:	39 83       	std	Y+1, r19	; 0x01
     f94:	28 83       	st	Y, r18
     f96:	3a c0       	rjmp	.+116    	; 0x100c <malloc+0x128>
     f98:	20 91 fc 03 	lds	r18, 0x03FC
     f9c:	30 91 fd 03 	lds	r19, 0x03FD
     fa0:	23 2b       	or	r18, r19
     fa2:	41 f4       	brne	.+16     	; 0xfb4 <malloc+0xd0>
     fa4:	20 91 02 02 	lds	r18, 0x0202
     fa8:	30 91 03 02 	lds	r19, 0x0203
     fac:	30 93 fd 03 	sts	0x03FD, r19
     fb0:	20 93 fc 03 	sts	0x03FC, r18
     fb4:	20 91 00 02 	lds	r18, 0x0200
     fb8:	30 91 01 02 	lds	r19, 0x0201
     fbc:	21 15       	cp	r18, r1
     fbe:	31 05       	cpc	r19, r1
     fc0:	41 f4       	brne	.+16     	; 0xfd2 <malloc+0xee>
     fc2:	2d b7       	in	r18, 0x3d	; 61
     fc4:	3e b7       	in	r19, 0x3e	; 62
     fc6:	40 91 04 02 	lds	r20, 0x0204
     fca:	50 91 05 02 	lds	r21, 0x0205
     fce:	24 1b       	sub	r18, r20
     fd0:	35 0b       	sbc	r19, r21
     fd2:	e0 91 fc 03 	lds	r30, 0x03FC
     fd6:	f0 91 fd 03 	lds	r31, 0x03FD
     fda:	e2 17       	cp	r30, r18
     fdc:	f3 07       	cpc	r31, r19
     fde:	a0 f4       	brcc	.+40     	; 0x1008 <malloc+0x124>
     fe0:	2e 1b       	sub	r18, r30
     fe2:	3f 0b       	sbc	r19, r31
     fe4:	28 17       	cp	r18, r24
     fe6:	39 07       	cpc	r19, r25
     fe8:	78 f0       	brcs	.+30     	; 0x1008 <malloc+0x124>
     fea:	ac 01       	movw	r20, r24
     fec:	4e 5f       	subi	r20, 0xFE	; 254
     fee:	5f 4f       	sbci	r21, 0xFF	; 255
     ff0:	24 17       	cp	r18, r20
     ff2:	35 07       	cpc	r19, r21
     ff4:	48 f0       	brcs	.+18     	; 0x1008 <malloc+0x124>
     ff6:	4e 0f       	add	r20, r30
     ff8:	5f 1f       	adc	r21, r31
     ffa:	50 93 fd 03 	sts	0x03FD, r21
     ffe:	40 93 fc 03 	sts	0x03FC, r20
    1002:	81 93       	st	Z+, r24
    1004:	91 93       	st	Z+, r25
    1006:	02 c0       	rjmp	.+4      	; 0x100c <malloc+0x128>
    1008:	e0 e0       	ldi	r30, 0x00	; 0
    100a:	f0 e0       	ldi	r31, 0x00	; 0
    100c:	cf 01       	movw	r24, r30
    100e:	df 91       	pop	r29
    1010:	cf 91       	pop	r28
    1012:	08 95       	ret

00001014 <free>:
    1014:	cf 93       	push	r28
    1016:	df 93       	push	r29
    1018:	00 97       	sbiw	r24, 0x00	; 0
    101a:	09 f4       	brne	.+2      	; 0x101e <free+0xa>
    101c:	87 c0       	rjmp	.+270    	; 0x112c <free+0x118>
    101e:	fc 01       	movw	r30, r24
    1020:	32 97       	sbiw	r30, 0x02	; 2
    1022:	13 82       	std	Z+3, r1	; 0x03
    1024:	12 82       	std	Z+2, r1	; 0x02
    1026:	c0 91 fe 03 	lds	r28, 0x03FE
    102a:	d0 91 ff 03 	lds	r29, 0x03FF
    102e:	20 97       	sbiw	r28, 0x00	; 0
    1030:	81 f4       	brne	.+32     	; 0x1052 <free+0x3e>
    1032:	20 81       	ld	r18, Z
    1034:	31 81       	ldd	r19, Z+1	; 0x01
    1036:	28 0f       	add	r18, r24
    1038:	39 1f       	adc	r19, r25
    103a:	80 91 fc 03 	lds	r24, 0x03FC
    103e:	90 91 fd 03 	lds	r25, 0x03FD
    1042:	82 17       	cp	r24, r18
    1044:	93 07       	cpc	r25, r19
    1046:	79 f5       	brne	.+94     	; 0x10a6 <free+0x92>
    1048:	f0 93 fd 03 	sts	0x03FD, r31
    104c:	e0 93 fc 03 	sts	0x03FC, r30
    1050:	6d c0       	rjmp	.+218    	; 0x112c <free+0x118>
    1052:	de 01       	movw	r26, r28
    1054:	20 e0       	ldi	r18, 0x00	; 0
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	ae 17       	cp	r26, r30
    105a:	bf 07       	cpc	r27, r31
    105c:	50 f4       	brcc	.+20     	; 0x1072 <free+0x5e>
    105e:	12 96       	adiw	r26, 0x02	; 2
    1060:	4d 91       	ld	r20, X+
    1062:	5c 91       	ld	r21, X
    1064:	13 97       	sbiw	r26, 0x03	; 3
    1066:	9d 01       	movw	r18, r26
    1068:	41 15       	cp	r20, r1
    106a:	51 05       	cpc	r21, r1
    106c:	09 f1       	breq	.+66     	; 0x10b0 <free+0x9c>
    106e:	da 01       	movw	r26, r20
    1070:	f3 cf       	rjmp	.-26     	; 0x1058 <free+0x44>
    1072:	b3 83       	std	Z+3, r27	; 0x03
    1074:	a2 83       	std	Z+2, r26	; 0x02
    1076:	40 81       	ld	r20, Z
    1078:	51 81       	ldd	r21, Z+1	; 0x01
    107a:	84 0f       	add	r24, r20
    107c:	95 1f       	adc	r25, r21
    107e:	8a 17       	cp	r24, r26
    1080:	9b 07       	cpc	r25, r27
    1082:	71 f4       	brne	.+28     	; 0x10a0 <free+0x8c>
    1084:	8d 91       	ld	r24, X+
    1086:	9c 91       	ld	r25, X
    1088:	11 97       	sbiw	r26, 0x01	; 1
    108a:	84 0f       	add	r24, r20
    108c:	95 1f       	adc	r25, r21
    108e:	02 96       	adiw	r24, 0x02	; 2
    1090:	91 83       	std	Z+1, r25	; 0x01
    1092:	80 83       	st	Z, r24
    1094:	12 96       	adiw	r26, 0x02	; 2
    1096:	8d 91       	ld	r24, X+
    1098:	9c 91       	ld	r25, X
    109a:	13 97       	sbiw	r26, 0x03	; 3
    109c:	93 83       	std	Z+3, r25	; 0x03
    109e:	82 83       	std	Z+2, r24	; 0x02
    10a0:	21 15       	cp	r18, r1
    10a2:	31 05       	cpc	r19, r1
    10a4:	29 f4       	brne	.+10     	; 0x10b0 <free+0x9c>
    10a6:	f0 93 ff 03 	sts	0x03FF, r31
    10aa:	e0 93 fe 03 	sts	0x03FE, r30
    10ae:	3e c0       	rjmp	.+124    	; 0x112c <free+0x118>
    10b0:	d9 01       	movw	r26, r18
    10b2:	13 96       	adiw	r26, 0x03	; 3
    10b4:	fc 93       	st	X, r31
    10b6:	ee 93       	st	-X, r30
    10b8:	12 97       	sbiw	r26, 0x02	; 2
    10ba:	4d 91       	ld	r20, X+
    10bc:	5d 91       	ld	r21, X+
    10be:	a4 0f       	add	r26, r20
    10c0:	b5 1f       	adc	r27, r21
    10c2:	ea 17       	cp	r30, r26
    10c4:	fb 07       	cpc	r31, r27
    10c6:	79 f4       	brne	.+30     	; 0x10e6 <free+0xd2>
    10c8:	80 81       	ld	r24, Z
    10ca:	91 81       	ldd	r25, Z+1	; 0x01
    10cc:	84 0f       	add	r24, r20
    10ce:	95 1f       	adc	r25, r21
    10d0:	02 96       	adiw	r24, 0x02	; 2
    10d2:	d9 01       	movw	r26, r18
    10d4:	11 96       	adiw	r26, 0x01	; 1
    10d6:	9c 93       	st	X, r25
    10d8:	8e 93       	st	-X, r24
    10da:	82 81       	ldd	r24, Z+2	; 0x02
    10dc:	93 81       	ldd	r25, Z+3	; 0x03
    10de:	13 96       	adiw	r26, 0x03	; 3
    10e0:	9c 93       	st	X, r25
    10e2:	8e 93       	st	-X, r24
    10e4:	12 97       	sbiw	r26, 0x02	; 2
    10e6:	e0 e0       	ldi	r30, 0x00	; 0
    10e8:	f0 e0       	ldi	r31, 0x00	; 0
    10ea:	8a 81       	ldd	r24, Y+2	; 0x02
    10ec:	9b 81       	ldd	r25, Y+3	; 0x03
    10ee:	00 97       	sbiw	r24, 0x00	; 0
    10f0:	19 f0       	breq	.+6      	; 0x10f8 <free+0xe4>
    10f2:	fe 01       	movw	r30, r28
    10f4:	ec 01       	movw	r28, r24
    10f6:	f9 cf       	rjmp	.-14     	; 0x10ea <free+0xd6>
    10f8:	ce 01       	movw	r24, r28
    10fa:	02 96       	adiw	r24, 0x02	; 2
    10fc:	28 81       	ld	r18, Y
    10fe:	39 81       	ldd	r19, Y+1	; 0x01
    1100:	82 0f       	add	r24, r18
    1102:	93 1f       	adc	r25, r19
    1104:	20 91 fc 03 	lds	r18, 0x03FC
    1108:	30 91 fd 03 	lds	r19, 0x03FD
    110c:	28 17       	cp	r18, r24
    110e:	39 07       	cpc	r19, r25
    1110:	69 f4       	brne	.+26     	; 0x112c <free+0x118>
    1112:	30 97       	sbiw	r30, 0x00	; 0
    1114:	29 f4       	brne	.+10     	; 0x1120 <free+0x10c>
    1116:	10 92 ff 03 	sts	0x03FF, r1
    111a:	10 92 fe 03 	sts	0x03FE, r1
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <free+0x110>
    1120:	13 82       	std	Z+3, r1	; 0x03
    1122:	12 82       	std	Z+2, r1	; 0x02
    1124:	d0 93 fd 03 	sts	0x03FD, r29
    1128:	c0 93 fc 03 	sts	0x03FC, r28
    112c:	df 91       	pop	r29
    112e:	cf 91       	pop	r28
    1130:	08 95       	ret

00001132 <strnlen_P>:
    1132:	fc 01       	movw	r30, r24
    1134:	05 90       	lpm	r0, Z+
    1136:	61 50       	subi	r22, 0x01	; 1
    1138:	70 40       	sbci	r23, 0x00	; 0
    113a:	01 10       	cpse	r0, r1
    113c:	d8 f7       	brcc	.-10     	; 0x1134 <strnlen_P+0x2>
    113e:	80 95       	com	r24
    1140:	90 95       	com	r25
    1142:	8e 0f       	add	r24, r30
    1144:	9f 1f       	adc	r25, r31
    1146:	08 95       	ret

00001148 <memset>:
    1148:	dc 01       	movw	r26, r24
    114a:	01 c0       	rjmp	.+2      	; 0x114e <memset+0x6>
    114c:	6d 93       	st	X+, r22
    114e:	41 50       	subi	r20, 0x01	; 1
    1150:	50 40       	sbci	r21, 0x00	; 0
    1152:	e0 f7       	brcc	.-8      	; 0x114c <memset+0x4>
    1154:	08 95       	ret

00001156 <strnlen>:
    1156:	fc 01       	movw	r30, r24
    1158:	61 50       	subi	r22, 0x01	; 1
    115a:	70 40       	sbci	r23, 0x00	; 0
    115c:	01 90       	ld	r0, Z+
    115e:	01 10       	cpse	r0, r1
    1160:	d8 f7       	brcc	.-10     	; 0x1158 <strnlen+0x2>
    1162:	80 95       	com	r24
    1164:	90 95       	com	r25
    1166:	8e 0f       	add	r24, r30
    1168:	9f 1f       	adc	r25, r31
    116a:	08 95       	ret

0000116c <fputc>:
    116c:	0f 93       	push	r16
    116e:	1f 93       	push	r17
    1170:	cf 93       	push	r28
    1172:	df 93       	push	r29
    1174:	18 2f       	mov	r17, r24
    1176:	09 2f       	mov	r16, r25
    1178:	eb 01       	movw	r28, r22
    117a:	8b 81       	ldd	r24, Y+3	; 0x03
    117c:	81 fd       	sbrc	r24, 1
    117e:	03 c0       	rjmp	.+6      	; 0x1186 <fputc+0x1a>
    1180:	8f ef       	ldi	r24, 0xFF	; 255
    1182:	9f ef       	ldi	r25, 0xFF	; 255
    1184:	20 c0       	rjmp	.+64     	; 0x11c6 <fputc+0x5a>
    1186:	82 ff       	sbrs	r24, 2
    1188:	10 c0       	rjmp	.+32     	; 0x11aa <fputc+0x3e>
    118a:	4e 81       	ldd	r20, Y+6	; 0x06
    118c:	5f 81       	ldd	r21, Y+7	; 0x07
    118e:	2c 81       	ldd	r18, Y+4	; 0x04
    1190:	3d 81       	ldd	r19, Y+5	; 0x05
    1192:	42 17       	cp	r20, r18
    1194:	53 07       	cpc	r21, r19
    1196:	7c f4       	brge	.+30     	; 0x11b6 <fputc+0x4a>
    1198:	e8 81       	ld	r30, Y
    119a:	f9 81       	ldd	r31, Y+1	; 0x01
    119c:	9f 01       	movw	r18, r30
    119e:	2f 5f       	subi	r18, 0xFF	; 255
    11a0:	3f 4f       	sbci	r19, 0xFF	; 255
    11a2:	39 83       	std	Y+1, r19	; 0x01
    11a4:	28 83       	st	Y, r18
    11a6:	10 83       	st	Z, r17
    11a8:	06 c0       	rjmp	.+12     	; 0x11b6 <fputc+0x4a>
    11aa:	e8 85       	ldd	r30, Y+8	; 0x08
    11ac:	f9 85       	ldd	r31, Y+9	; 0x09
    11ae:	81 2f       	mov	r24, r17
    11b0:	19 95       	eicall
    11b2:	89 2b       	or	r24, r25
    11b4:	29 f7       	brne	.-54     	; 0x1180 <fputc+0x14>
    11b6:	2e 81       	ldd	r18, Y+6	; 0x06
    11b8:	3f 81       	ldd	r19, Y+7	; 0x07
    11ba:	2f 5f       	subi	r18, 0xFF	; 255
    11bc:	3f 4f       	sbci	r19, 0xFF	; 255
    11be:	3f 83       	std	Y+7, r19	; 0x07
    11c0:	2e 83       	std	Y+6, r18	; 0x06
    11c2:	81 2f       	mov	r24, r17
    11c4:	90 2f       	mov	r25, r16
    11c6:	df 91       	pop	r29
    11c8:	cf 91       	pop	r28
    11ca:	1f 91       	pop	r17
    11cc:	0f 91       	pop	r16
    11ce:	08 95       	ret

000011d0 <__ultoa_invert>:
    11d0:	fa 01       	movw	r30, r20
    11d2:	aa 27       	eor	r26, r26
    11d4:	28 30       	cpi	r18, 0x08	; 8
    11d6:	51 f1       	breq	.+84     	; 0x122c <__ultoa_invert+0x5c>
    11d8:	20 31       	cpi	r18, 0x10	; 16
    11da:	81 f1       	breq	.+96     	; 0x123c <__ultoa_invert+0x6c>
    11dc:	e8 94       	clt
    11de:	6f 93       	push	r22
    11e0:	6e 7f       	andi	r22, 0xFE	; 254
    11e2:	6e 5f       	subi	r22, 0xFE	; 254
    11e4:	7f 4f       	sbci	r23, 0xFF	; 255
    11e6:	8f 4f       	sbci	r24, 0xFF	; 255
    11e8:	9f 4f       	sbci	r25, 0xFF	; 255
    11ea:	af 4f       	sbci	r26, 0xFF	; 255
    11ec:	b1 e0       	ldi	r27, 0x01	; 1
    11ee:	3e d0       	rcall	.+124    	; 0x126c <__ultoa_invert+0x9c>
    11f0:	b4 e0       	ldi	r27, 0x04	; 4
    11f2:	3c d0       	rcall	.+120    	; 0x126c <__ultoa_invert+0x9c>
    11f4:	67 0f       	add	r22, r23
    11f6:	78 1f       	adc	r23, r24
    11f8:	89 1f       	adc	r24, r25
    11fa:	9a 1f       	adc	r25, r26
    11fc:	a1 1d       	adc	r26, r1
    11fe:	68 0f       	add	r22, r24
    1200:	79 1f       	adc	r23, r25
    1202:	8a 1f       	adc	r24, r26
    1204:	91 1d       	adc	r25, r1
    1206:	a1 1d       	adc	r26, r1
    1208:	6a 0f       	add	r22, r26
    120a:	71 1d       	adc	r23, r1
    120c:	81 1d       	adc	r24, r1
    120e:	91 1d       	adc	r25, r1
    1210:	a1 1d       	adc	r26, r1
    1212:	20 d0       	rcall	.+64     	; 0x1254 <__ultoa_invert+0x84>
    1214:	09 f4       	brne	.+2      	; 0x1218 <__ultoa_invert+0x48>
    1216:	68 94       	set
    1218:	3f 91       	pop	r19
    121a:	2a e0       	ldi	r18, 0x0A	; 10
    121c:	26 9f       	mul	r18, r22
    121e:	11 24       	eor	r1, r1
    1220:	30 19       	sub	r19, r0
    1222:	30 5d       	subi	r19, 0xD0	; 208
    1224:	31 93       	st	Z+, r19
    1226:	de f6       	brtc	.-74     	; 0x11de <__ultoa_invert+0xe>
    1228:	cf 01       	movw	r24, r30
    122a:	08 95       	ret
    122c:	46 2f       	mov	r20, r22
    122e:	47 70       	andi	r20, 0x07	; 7
    1230:	40 5d       	subi	r20, 0xD0	; 208
    1232:	41 93       	st	Z+, r20
    1234:	b3 e0       	ldi	r27, 0x03	; 3
    1236:	0f d0       	rcall	.+30     	; 0x1256 <__ultoa_invert+0x86>
    1238:	c9 f7       	brne	.-14     	; 0x122c <__ultoa_invert+0x5c>
    123a:	f6 cf       	rjmp	.-20     	; 0x1228 <__ultoa_invert+0x58>
    123c:	46 2f       	mov	r20, r22
    123e:	4f 70       	andi	r20, 0x0F	; 15
    1240:	40 5d       	subi	r20, 0xD0	; 208
    1242:	4a 33       	cpi	r20, 0x3A	; 58
    1244:	18 f0       	brcs	.+6      	; 0x124c <__ultoa_invert+0x7c>
    1246:	49 5d       	subi	r20, 0xD9	; 217
    1248:	31 fd       	sbrc	r19, 1
    124a:	40 52       	subi	r20, 0x20	; 32
    124c:	41 93       	st	Z+, r20
    124e:	02 d0       	rcall	.+4      	; 0x1254 <__ultoa_invert+0x84>
    1250:	a9 f7       	brne	.-22     	; 0x123c <__ultoa_invert+0x6c>
    1252:	ea cf       	rjmp	.-44     	; 0x1228 <__ultoa_invert+0x58>
    1254:	b4 e0       	ldi	r27, 0x04	; 4
    1256:	a6 95       	lsr	r26
    1258:	97 95       	ror	r25
    125a:	87 95       	ror	r24
    125c:	77 95       	ror	r23
    125e:	67 95       	ror	r22
    1260:	ba 95       	dec	r27
    1262:	c9 f7       	brne	.-14     	; 0x1256 <__ultoa_invert+0x86>
    1264:	00 97       	sbiw	r24, 0x00	; 0
    1266:	61 05       	cpc	r22, r1
    1268:	71 05       	cpc	r23, r1
    126a:	08 95       	ret
    126c:	9b 01       	movw	r18, r22
    126e:	ac 01       	movw	r20, r24
    1270:	0a 2e       	mov	r0, r26
    1272:	06 94       	lsr	r0
    1274:	57 95       	ror	r21
    1276:	47 95       	ror	r20
    1278:	37 95       	ror	r19
    127a:	27 95       	ror	r18
    127c:	ba 95       	dec	r27
    127e:	c9 f7       	brne	.-14     	; 0x1272 <__ultoa_invert+0xa2>
    1280:	62 0f       	add	r22, r18
    1282:	73 1f       	adc	r23, r19
    1284:	84 1f       	adc	r24, r20
    1286:	95 1f       	adc	r25, r21
    1288:	a0 1d       	adc	r26, r0
    128a:	08 95       	ret

0000128c <_exit>:
    128c:	f8 94       	cli

0000128e <__stop_program>:
    128e:	ff cf       	rjmp	.-2      	; 0x128e <__stop_program>
