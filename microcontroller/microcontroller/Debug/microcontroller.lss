
microcontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f0  00800100  00000cce  00000d62  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001f0  008001f0  00000e52  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e52  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000eae  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000004ec  00000000  00000000  00000f2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002e5  00000000  00000000  0000141a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000253  00000000  00000000  000016ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000012c  00000000  00000000  00001954  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000231  00000000  00000000  00001a80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000237  00000000  00000000  00001cb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00001ee8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee ec       	ldi	r30, 0xCE	; 206
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 3f       	cpi	r26, 0xF0	; 240
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 ef       	ldi	r26, 0xF0	; 240
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 3f       	cpi	r26, 0xFA	; 250
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 5e 00 	call	0xbc	; 0xbc <main>
  a6:	0c 94 65 06 	jmp	0xcca	; 0xcca <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <initialize>:
#include <util/delay.h>
#include <stdint.h>


void initialize(void) {
	usart_init(MYUBRR);
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 0b 01 	call	0x216	; 0x216 <usart_init>
	SRAM_init();
  b6:	0e 94 77 00 	call	0xee	; 0xee <SRAM_init>
  ba:	08 95       	ret

000000bc <main>:
}


int main(void) {
	initialize();
  bc:	0e 94 57 00 	call	0xae	; 0xae <initialize>
	SRAM_test();
  c0:	0e 94 7e 00 	call	0xfc	; 0xfc <SRAM_test>
	while(1) {
		printf("b");
  c4:	82 e6       	ldi	r24, 0x62	; 98
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	0e 94 d5 01 	call	0x3aa	; 0x3aa <putchar>
		usart_transmit_to_computer('k');
  cc:	8b e6       	ldi	r24, 0x6B	; 107
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	0e 94 03 01 	call	0x206	; 0x206 <usart_transmit_to_computer>
		usart_transmit_to_computer('a');
  d4:	81 e6       	ldi	r24, 0x61	; 97
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	0e 94 03 01 	call	0x206	; 0x206 <usart_transmit_to_computer>
		
		char recved = usart_receive_from_computer();
  dc:	0e 94 07 01 	call	0x20e	; 0x20e <usart_receive_from_computer>
		printf(recved);
  e0:	1f 92       	push	r1
  e2:	8f 93       	push	r24
  e4:	0e 94 c1 01 	call	0x382	; 0x382 <printf>
  e8:	0f 90       	pop	r0
  ea:	0f 90       	pop	r0
  ec:	eb cf       	rjmp	.-42     	; 0xc4 <main+0x8>

000000ee <SRAM_init>:
#define loop_until_bit_is_set( reg, bit ) while( !test_bit( reg, bit ) )
#define loop_until_bit_is_clear( reg, bit ) while( test_bit( reg, bit ) )


void SRAM_init(void){
	set_bit(MCUCR, SRE);
  ee:	85 b7       	in	r24, 0x35	; 53
  f0:	80 68       	ori	r24, 0x80	; 128
  f2:	85 bf       	out	0x35, r24	; 53
	SFIOR |= 0b00100000;
  f4:	80 b7       	in	r24, 0x30	; 48
  f6:	80 62       	ori	r24, 0x20	; 32
  f8:	80 bf       	out	0x30, r24	; 48
  fa:	08 95       	ret

000000fc <SRAM_test>:
}

void SRAM_test(void)
{
  fc:	cf 92       	push	r12
  fe:	df 92       	push	r13
 100:	ef 92       	push	r14
 102:	ff 92       	push	r15
 104:	0f 93       	push	r16
 106:	1f 93       	push	r17
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x1800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
 10c:	8a e0       	ldi	r24, 0x0A	; 10
 10e:	91 e0       	ldi	r25, 0x01	; 1
 110:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
 114:	0e 94 66 01 	call	0x2cc	; 0x2cc <rand>
 118:	6c 01       	movw	r12, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
 11a:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 11e:	c0 e0       	ldi	r28, 0x00	; 0
 120:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x1800;
	uint16_t write_errors = 0;
 122:	00 e0       	ldi	r16, 0x00	; 0
 124:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,
 126:	0f 2e       	mov	r0, r31
 128:	f0 e2       	ldi	r31, 0x20	; 32
 12a:	ef 2e       	mov	r14, r31
 12c:	f1 e0       	ldi	r31, 0x01	; 1
 12e:	ff 2e       	mov	r15, r31
 130:	f0 2d       	mov	r31, r0
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 132:	0e 94 66 01 	call	0x2cc	; 0x2cc <rand>
 136:	fe 01       	movw	r30, r28
 138:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
 13a:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
 13c:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 13e:	28 17       	cp	r18, r24
 140:	a9 f0       	breq	.+42     	; 0x16c <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,
 142:	99 27       	eor	r25, r25
 144:	9f 93       	push	r25
 146:	8f 93       	push	r24
 148:	1f 92       	push	r1
 14a:	2f 93       	push	r18
 14c:	df 93       	push	r29
 14e:	cf 93       	push	r28
 150:	ff 92       	push	r15
 152:	ef 92       	push	r14
 154:	0e 94 c1 01 	call	0x382	; 0x382 <printf>
			retreived_value, some_value);
			write_errors++;
 158:	0f 5f       	subi	r16, 0xFF	; 255
 15a:	1f 4f       	sbci	r17, 0xFF	; 255
 15c:	8d b7       	in	r24, 0x3d	; 61
 15e:	9e b7       	in	r25, 0x3e	; 62
 160:	08 96       	adiw	r24, 0x08	; 8
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	f8 94       	cli
 166:	9e bf       	out	0x3e, r25	; 62
 168:	0f be       	out	0x3f, r0	; 63
 16a:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 16c:	21 96       	adiw	r28, 0x01	; 1
 16e:	c1 15       	cp	r28, r1
 170:	98 e1       	ldi	r25, 0x18	; 24
 172:	d9 07       	cpc	r29, r25
 174:	f1 f6       	brne	.-68     	; 0x132 <SRAM_test+0x36>
			retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed); // reset the PRNG to the state it had before the write phase
 176:	c6 01       	movw	r24, r12
 178:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 17c:	c0 e0       	ldi	r28, 0x00	; 0
 17e:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x1800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 180:	e1 2c       	mov	r14, r1
 182:	f1 2c       	mov	r15, r1
	srand(seed); // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",
 184:	0f 2e       	mov	r0, r31
 186:	f9 e5       	ldi	r31, 0x59	; 89
 188:	cf 2e       	mov	r12, r31
 18a:	f1 e0       	ldi	r31, 0x01	; 1
 18c:	df 2e       	mov	r13, r31
 18e:	f0 2d       	mov	r31, r0
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed); // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 190:	0e 94 66 01 	call	0x2cc	; 0x2cc <rand>
 194:	fe 01       	movw	r30, r28
 196:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
 198:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 19a:	28 17       	cp	r18, r24
 19c:	b1 f0       	breq	.+44     	; 0x1ca <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",
 19e:	99 27       	eor	r25, r25
 1a0:	9f 93       	push	r25
 1a2:	8f 93       	push	r24
 1a4:	1f 92       	push	r1
 1a6:	2f 93       	push	r18
 1a8:	df 93       	push	r29
 1aa:	cf 93       	push	r28
 1ac:	df 92       	push	r13
 1ae:	cf 92       	push	r12
 1b0:	0e 94 c1 01 	call	0x382	; 0x382 <printf>
			i, retreived_value, some_value);
			retrieval_errors++;
 1b4:	8f ef       	ldi	r24, 0xFF	; 255
 1b6:	e8 1a       	sub	r14, r24
 1b8:	f8 0a       	sbc	r15, r24
 1ba:	8d b7       	in	r24, 0x3d	; 61
 1bc:	9e b7       	in	r25, 0x3e	; 62
 1be:	08 96       	adiw	r24, 0x08	; 8
 1c0:	0f b6       	in	r0, 0x3f	; 63
 1c2:	f8 94       	cli
 1c4:	9e bf       	out	0x3e, r25	; 62
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	8d bf       	out	0x3d, r24	; 61
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed); // reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1ca:	21 96       	adiw	r28, 0x01	; 1
 1cc:	c1 15       	cp	r28, r1
 1ce:	98 e1       	ldi	r25, 0x18	; 24
 1d0:	d9 07       	cpc	r29, r25
 1d2:	f1 f6       	brne	.-68     	; 0x190 <SRAM_test+0x94>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",
			i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 1d4:	ff 92       	push	r15
 1d6:	ef 92       	push	r14
 1d8:	1f 93       	push	r17
 1da:	0f 93       	push	r16
 1dc:	86 e9       	ldi	r24, 0x96	; 150
 1de:	91 e0       	ldi	r25, 0x01	; 1
 1e0:	9f 93       	push	r25
 1e2:	8f 93       	push	r24
 1e4:	0e 94 c1 01 	call	0x382	; 0x382 <printf>
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	0f 90       	pop	r0
 1ee:	0f 90       	pop	r0
 1f0:	0f 90       	pop	r0
 1f2:	0f 90       	pop	r0
}
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	1f 91       	pop	r17
 1fa:	0f 91       	pop	r16
 1fc:	ff 90       	pop	r15
 1fe:	ef 90       	pop	r14
 200:	df 90       	pop	r13
 202:	cf 90       	pop	r12
 204:	08 95       	ret

00000206 <usart_transmit_to_computer>:
}


void usart_transmit_to_computer(unsigned int data) {
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)))
 206:	5d 9b       	sbis	0x0b, 5	; 11
 208:	fe cf       	rjmp	.-4      	; 0x206 <usart_transmit_to_computer>
	;
	
	/* Put data into buffer (sends the data) */
	UDR0 = data;
 20a:	8c b9       	out	0x0c, r24	; 12
 20c:	08 95       	ret

0000020e <usart_receive_from_computer>:
}


unsigned char usart_receive_from_computer(void) {
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)))
 20e:	5f 9b       	sbis	0x0b, 7	; 11
 210:	fe cf       	rjmp	.-4      	; 0x20e <usart_receive_from_computer>
	;
	
	/* Get and return data from buffer */
	return UDR0;
 212:	8c b1       	in	r24, 0x0c	; 12
}
 214:	08 95       	ret

00000216 <usart_init>:
#include "usart.h"
#include <avr/io.h>

void usart_init(unsigned int ubbr) {
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubbr>>8);
 216:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)(ubbr);
 218:	89 b9       	out	0x09, r24	; 9
	
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
 21a:	88 e1       	ldi	r24, 0x18	; 24
 21c:	8a b9       	out	0x0a, r24	; 10
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0) | (1<<USBS0) | (3<<UCSZ00);
 21e:	8e e8       	ldi	r24, 0x8E	; 142
 220:	80 bd       	out	0x20, r24	; 32
	
	
	/* Enable printf-thing */
	fdevopen(usart_transmit_to_computer, usart_receive_from_computer);
 222:	67 e0       	ldi	r22, 0x07	; 7
 224:	71 e0       	ldi	r23, 0x01	; 1
 226:	83 e0       	ldi	r24, 0x03	; 3
 228:	91 e0       	ldi	r25, 0x01	; 1
 22a:	0e 94 76 01 	call	0x2ec	; 0x2ec <fdevopen>
 22e:	08 95       	ret

00000230 <do_rand>:
 230:	8f 92       	push	r8
 232:	9f 92       	push	r9
 234:	af 92       	push	r10
 236:	bf 92       	push	r11
 238:	cf 92       	push	r12
 23a:	df 92       	push	r13
 23c:	ef 92       	push	r14
 23e:	ff 92       	push	r15
 240:	cf 93       	push	r28
 242:	df 93       	push	r29
 244:	ec 01       	movw	r28, r24
 246:	68 81       	ld	r22, Y
 248:	79 81       	ldd	r23, Y+1	; 0x01
 24a:	8a 81       	ldd	r24, Y+2	; 0x02
 24c:	9b 81       	ldd	r25, Y+3	; 0x03
 24e:	61 15       	cp	r22, r1
 250:	71 05       	cpc	r23, r1
 252:	81 05       	cpc	r24, r1
 254:	91 05       	cpc	r25, r1
 256:	21 f4       	brne	.+8      	; 0x260 <do_rand+0x30>
 258:	64 e2       	ldi	r22, 0x24	; 36
 25a:	79 ed       	ldi	r23, 0xD9	; 217
 25c:	8b e5       	ldi	r24, 0x5B	; 91
 25e:	97 e0       	ldi	r25, 0x07	; 7
 260:	2d e1       	ldi	r18, 0x1D	; 29
 262:	33 ef       	ldi	r19, 0xF3	; 243
 264:	41 e0       	ldi	r20, 0x01	; 1
 266:	50 e0       	ldi	r21, 0x00	; 0
 268:	0e 94 cb 05 	call	0xb96	; 0xb96 <__divmodsi4>
 26c:	49 01       	movw	r8, r18
 26e:	5a 01       	movw	r10, r20
 270:	9b 01       	movw	r18, r22
 272:	ac 01       	movw	r20, r24
 274:	a7 ea       	ldi	r26, 0xA7	; 167
 276:	b1 e4       	ldi	r27, 0x41	; 65
 278:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__muluhisi3>
 27c:	6b 01       	movw	r12, r22
 27e:	7c 01       	movw	r14, r24
 280:	ac ee       	ldi	r26, 0xEC	; 236
 282:	b4 ef       	ldi	r27, 0xF4	; 244
 284:	a5 01       	movw	r20, r10
 286:	94 01       	movw	r18, r8
 288:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <__mulohisi3>
 28c:	c6 0e       	add	r12, r22
 28e:	d7 1e       	adc	r13, r23
 290:	e8 1e       	adc	r14, r24
 292:	f9 1e       	adc	r15, r25
 294:	f7 fe       	sbrs	r15, 7
 296:	06 c0       	rjmp	.+12     	; 0x2a4 <do_rand+0x74>
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	c8 1a       	sub	r12, r24
 29c:	d1 08       	sbc	r13, r1
 29e:	e1 08       	sbc	r14, r1
 2a0:	80 e8       	ldi	r24, 0x80	; 128
 2a2:	f8 0a       	sbc	r15, r24
 2a4:	c8 82       	st	Y, r12
 2a6:	d9 82       	std	Y+1, r13	; 0x01
 2a8:	ea 82       	std	Y+2, r14	; 0x02
 2aa:	fb 82       	std	Y+3, r15	; 0x03
 2ac:	c6 01       	movw	r24, r12
 2ae:	9f 77       	andi	r25, 0x7F	; 127
 2b0:	df 91       	pop	r29
 2b2:	cf 91       	pop	r28
 2b4:	ff 90       	pop	r15
 2b6:	ef 90       	pop	r14
 2b8:	df 90       	pop	r13
 2ba:	cf 90       	pop	r12
 2bc:	bf 90       	pop	r11
 2be:	af 90       	pop	r10
 2c0:	9f 90       	pop	r9
 2c2:	8f 90       	pop	r8
 2c4:	08 95       	ret

000002c6 <rand_r>:
 2c6:	0e 94 18 01 	call	0x230	; 0x230 <do_rand>
 2ca:	08 95       	ret

000002cc <rand>:
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	91 e0       	ldi	r25, 0x01	; 1
 2d0:	0e 94 18 01 	call	0x230	; 0x230 <do_rand>
 2d4:	08 95       	ret

000002d6 <srand>:
 2d6:	a0 e0       	ldi	r26, 0x00	; 0
 2d8:	b0 e0       	ldi	r27, 0x00	; 0
 2da:	80 93 00 01 	sts	0x0100, r24
 2de:	90 93 01 01 	sts	0x0101, r25
 2e2:	a0 93 02 01 	sts	0x0102, r26
 2e6:	b0 93 03 01 	sts	0x0103, r27
 2ea:	08 95       	ret

000002ec <fdevopen>:
 2ec:	0f 93       	push	r16
 2ee:	1f 93       	push	r17
 2f0:	cf 93       	push	r28
 2f2:	df 93       	push	r29
 2f4:	ec 01       	movw	r28, r24
 2f6:	8b 01       	movw	r16, r22
 2f8:	00 97       	sbiw	r24, 0x00	; 0
 2fa:	31 f4       	brne	.+12     	; 0x308 <fdevopen+0x1c>
 2fc:	61 15       	cp	r22, r1
 2fe:	71 05       	cpc	r23, r1
 300:	19 f4       	brne	.+6      	; 0x308 <fdevopen+0x1c>
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	38 c0       	rjmp	.+112    	; 0x378 <fdevopen+0x8c>
 308:	6e e0       	ldi	r22, 0x0E	; 14
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	0e 94 db 03 	call	0x7b6	; 0x7b6 <calloc>
 314:	fc 01       	movw	r30, r24
 316:	00 97       	sbiw	r24, 0x00	; 0
 318:	a1 f3       	breq	.-24     	; 0x302 <fdevopen+0x16>
 31a:	80 e8       	ldi	r24, 0x80	; 128
 31c:	83 83       	std	Z+3, r24	; 0x03
 31e:	01 15       	cp	r16, r1
 320:	11 05       	cpc	r17, r1
 322:	71 f0       	breq	.+28     	; 0x340 <fdevopen+0x54>
 324:	13 87       	std	Z+11, r17	; 0x0b
 326:	02 87       	std	Z+10, r16	; 0x0a
 328:	81 e8       	ldi	r24, 0x81	; 129
 32a:	83 83       	std	Z+3, r24	; 0x03
 32c:	80 91 f0 01 	lds	r24, 0x01F0
 330:	90 91 f1 01 	lds	r25, 0x01F1
 334:	89 2b       	or	r24, r25
 336:	21 f4       	brne	.+8      	; 0x340 <fdevopen+0x54>
 338:	f0 93 f1 01 	sts	0x01F1, r31
 33c:	e0 93 f0 01 	sts	0x01F0, r30
 340:	20 97       	sbiw	r28, 0x00	; 0
 342:	c9 f0       	breq	.+50     	; 0x376 <fdevopen+0x8a>
 344:	d1 87       	std	Z+9, r29	; 0x09
 346:	c0 87       	std	Z+8, r28	; 0x08
 348:	83 81       	ldd	r24, Z+3	; 0x03
 34a:	82 60       	ori	r24, 0x02	; 2
 34c:	83 83       	std	Z+3, r24	; 0x03
 34e:	80 91 f2 01 	lds	r24, 0x01F2
 352:	90 91 f3 01 	lds	r25, 0x01F3
 356:	89 2b       	or	r24, r25
 358:	71 f4       	brne	.+28     	; 0x376 <fdevopen+0x8a>
 35a:	f0 93 f3 01 	sts	0x01F3, r31
 35e:	e0 93 f2 01 	sts	0x01F2, r30
 362:	80 91 f4 01 	lds	r24, 0x01F4
 366:	90 91 f5 01 	lds	r25, 0x01F5
 36a:	89 2b       	or	r24, r25
 36c:	21 f4       	brne	.+8      	; 0x376 <fdevopen+0x8a>
 36e:	f0 93 f5 01 	sts	0x01F5, r31
 372:	e0 93 f4 01 	sts	0x01F4, r30
 376:	cf 01       	movw	r24, r30
 378:	df 91       	pop	r29
 37a:	cf 91       	pop	r28
 37c:	1f 91       	pop	r17
 37e:	0f 91       	pop	r16
 380:	08 95       	ret

00000382 <printf>:
 382:	a0 e0       	ldi	r26, 0x00	; 0
 384:	b0 e0       	ldi	r27, 0x00	; 0
 386:	e7 ec       	ldi	r30, 0xC7	; 199
 388:	f1 e0       	ldi	r31, 0x01	; 1
 38a:	0c 94 0d 06 	jmp	0xc1a	; 0xc1a <__prologue_saves__+0x20>
 38e:	fe 01       	movw	r30, r28
 390:	35 96       	adiw	r30, 0x05	; 5
 392:	61 91       	ld	r22, Z+
 394:	71 91       	ld	r23, Z+
 396:	af 01       	movw	r20, r30
 398:	80 91 f2 01 	lds	r24, 0x01F2
 39c:	90 91 f3 01 	lds	r25, 0x01F3
 3a0:	0e 94 09 02 	call	0x412	; 0x412 <vfprintf>
 3a4:	e2 e0       	ldi	r30, 0x02	; 2
 3a6:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__epilogue_restores__+0x20>

000003aa <putchar>:
 3aa:	60 91 f2 01 	lds	r22, 0x01F2
 3ae:	70 91 f3 01 	lds	r23, 0x01F3
 3b2:	0e 94 3b 05 	call	0xa76	; 0xa76 <fputc>
 3b6:	08 95       	ret

000003b8 <puts>:
 3b8:	0f 93       	push	r16
 3ba:	1f 93       	push	r17
 3bc:	cf 93       	push	r28
 3be:	df 93       	push	r29
 3c0:	e0 91 f2 01 	lds	r30, 0x01F2
 3c4:	f0 91 f3 01 	lds	r31, 0x01F3
 3c8:	23 81       	ldd	r18, Z+3	; 0x03
 3ca:	21 ff       	sbrs	r18, 1
 3cc:	1b c0       	rjmp	.+54     	; 0x404 <puts+0x4c>
 3ce:	ec 01       	movw	r28, r24
 3d0:	00 e0       	ldi	r16, 0x00	; 0
 3d2:	10 e0       	ldi	r17, 0x00	; 0
 3d4:	89 91       	ld	r24, Y+
 3d6:	60 91 f2 01 	lds	r22, 0x01F2
 3da:	70 91 f3 01 	lds	r23, 0x01F3
 3de:	db 01       	movw	r26, r22
 3e0:	18 96       	adiw	r26, 0x08	; 8
 3e2:	ed 91       	ld	r30, X+
 3e4:	fc 91       	ld	r31, X
 3e6:	19 97       	sbiw	r26, 0x09	; 9
 3e8:	88 23       	and	r24, r24
 3ea:	31 f0       	breq	.+12     	; 0x3f8 <puts+0x40>
 3ec:	09 95       	icall
 3ee:	89 2b       	or	r24, r25
 3f0:	89 f3       	breq	.-30     	; 0x3d4 <puts+0x1c>
 3f2:	0f ef       	ldi	r16, 0xFF	; 255
 3f4:	1f ef       	ldi	r17, 0xFF	; 255
 3f6:	ee cf       	rjmp	.-36     	; 0x3d4 <puts+0x1c>
 3f8:	8a e0       	ldi	r24, 0x0A	; 10
 3fa:	09 95       	icall
 3fc:	89 2b       	or	r24, r25
 3fe:	11 f4       	brne	.+4      	; 0x404 <puts+0x4c>
 400:	c8 01       	movw	r24, r16
 402:	02 c0       	rjmp	.+4      	; 0x408 <puts+0x50>
 404:	8f ef       	ldi	r24, 0xFF	; 255
 406:	9f ef       	ldi	r25, 0xFF	; 255
 408:	df 91       	pop	r29
 40a:	cf 91       	pop	r28
 40c:	1f 91       	pop	r17
 40e:	0f 91       	pop	r16
 410:	08 95       	ret

00000412 <vfprintf>:
 412:	ac e0       	ldi	r26, 0x0C	; 12
 414:	b0 e0       	ldi	r27, 0x00	; 0
 416:	ef e0       	ldi	r30, 0x0F	; 15
 418:	f2 e0       	ldi	r31, 0x02	; 2
 41a:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__prologue_saves__>
 41e:	7c 01       	movw	r14, r24
 420:	6b 01       	movw	r12, r22
 422:	8a 01       	movw	r16, r20
 424:	fc 01       	movw	r30, r24
 426:	17 82       	std	Z+7, r1	; 0x07
 428:	16 82       	std	Z+6, r1	; 0x06
 42a:	83 81       	ldd	r24, Z+3	; 0x03
 42c:	81 ff       	sbrs	r24, 1
 42e:	bd c1       	rjmp	.+890    	; 0x7aa <__stack+0x2ab>
 430:	ce 01       	movw	r24, r28
 432:	01 96       	adiw	r24, 0x01	; 1
 434:	4c 01       	movw	r8, r24
 436:	f7 01       	movw	r30, r14
 438:	93 81       	ldd	r25, Z+3	; 0x03
 43a:	f6 01       	movw	r30, r12
 43c:	93 fd       	sbrc	r25, 3
 43e:	85 91       	lpm	r24, Z+
 440:	93 ff       	sbrs	r25, 3
 442:	81 91       	ld	r24, Z+
 444:	6f 01       	movw	r12, r30
 446:	88 23       	and	r24, r24
 448:	09 f4       	brne	.+2      	; 0x44c <vfprintf+0x3a>
 44a:	ab c1       	rjmp	.+854    	; 0x7a2 <__stack+0x2a3>
 44c:	85 32       	cpi	r24, 0x25	; 37
 44e:	39 f4       	brne	.+14     	; 0x45e <vfprintf+0x4c>
 450:	93 fd       	sbrc	r25, 3
 452:	85 91       	lpm	r24, Z+
 454:	93 ff       	sbrs	r25, 3
 456:	81 91       	ld	r24, Z+
 458:	6f 01       	movw	r12, r30
 45a:	85 32       	cpi	r24, 0x25	; 37
 45c:	29 f4       	brne	.+10     	; 0x468 <vfprintf+0x56>
 45e:	b7 01       	movw	r22, r14
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	0e 94 3b 05 	call	0xa76	; 0xa76 <fputc>
 466:	e7 cf       	rjmp	.-50     	; 0x436 <vfprintf+0x24>
 468:	51 2c       	mov	r5, r1
 46a:	31 2c       	mov	r3, r1
 46c:	20 e0       	ldi	r18, 0x00	; 0
 46e:	20 32       	cpi	r18, 0x20	; 32
 470:	a0 f4       	brcc	.+40     	; 0x49a <vfprintf+0x88>
 472:	8b 32       	cpi	r24, 0x2B	; 43
 474:	69 f0       	breq	.+26     	; 0x490 <vfprintf+0x7e>
 476:	30 f4       	brcc	.+12     	; 0x484 <vfprintf+0x72>
 478:	80 32       	cpi	r24, 0x20	; 32
 47a:	59 f0       	breq	.+22     	; 0x492 <vfprintf+0x80>
 47c:	83 32       	cpi	r24, 0x23	; 35
 47e:	69 f4       	brne	.+26     	; 0x49a <vfprintf+0x88>
 480:	20 61       	ori	r18, 0x10	; 16
 482:	2c c0       	rjmp	.+88     	; 0x4dc <vfprintf+0xca>
 484:	8d 32       	cpi	r24, 0x2D	; 45
 486:	39 f0       	breq	.+14     	; 0x496 <vfprintf+0x84>
 488:	80 33       	cpi	r24, 0x30	; 48
 48a:	39 f4       	brne	.+14     	; 0x49a <vfprintf+0x88>
 48c:	21 60       	ori	r18, 0x01	; 1
 48e:	26 c0       	rjmp	.+76     	; 0x4dc <vfprintf+0xca>
 490:	22 60       	ori	r18, 0x02	; 2
 492:	24 60       	ori	r18, 0x04	; 4
 494:	23 c0       	rjmp	.+70     	; 0x4dc <vfprintf+0xca>
 496:	28 60       	ori	r18, 0x08	; 8
 498:	21 c0       	rjmp	.+66     	; 0x4dc <vfprintf+0xca>
 49a:	27 fd       	sbrc	r18, 7
 49c:	27 c0       	rjmp	.+78     	; 0x4ec <vfprintf+0xda>
 49e:	30 ed       	ldi	r19, 0xD0	; 208
 4a0:	38 0f       	add	r19, r24
 4a2:	3a 30       	cpi	r19, 0x0A	; 10
 4a4:	78 f4       	brcc	.+30     	; 0x4c4 <vfprintf+0xb2>
 4a6:	26 ff       	sbrs	r18, 6
 4a8:	06 c0       	rjmp	.+12     	; 0x4b6 <vfprintf+0xa4>
 4aa:	fa e0       	ldi	r31, 0x0A	; 10
 4ac:	5f 9e       	mul	r5, r31
 4ae:	30 0d       	add	r19, r0
 4b0:	11 24       	eor	r1, r1
 4b2:	53 2e       	mov	r5, r19
 4b4:	13 c0       	rjmp	.+38     	; 0x4dc <vfprintf+0xca>
 4b6:	8a e0       	ldi	r24, 0x0A	; 10
 4b8:	38 9e       	mul	r3, r24
 4ba:	30 0d       	add	r19, r0
 4bc:	11 24       	eor	r1, r1
 4be:	33 2e       	mov	r3, r19
 4c0:	20 62       	ori	r18, 0x20	; 32
 4c2:	0c c0       	rjmp	.+24     	; 0x4dc <vfprintf+0xca>
 4c4:	8e 32       	cpi	r24, 0x2E	; 46
 4c6:	21 f4       	brne	.+8      	; 0x4d0 <vfprintf+0xbe>
 4c8:	26 fd       	sbrc	r18, 6
 4ca:	6b c1       	rjmp	.+726    	; 0x7a2 <__stack+0x2a3>
 4cc:	20 64       	ori	r18, 0x40	; 64
 4ce:	06 c0       	rjmp	.+12     	; 0x4dc <vfprintf+0xca>
 4d0:	8c 36       	cpi	r24, 0x6C	; 108
 4d2:	11 f4       	brne	.+4      	; 0x4d8 <vfprintf+0xc6>
 4d4:	20 68       	ori	r18, 0x80	; 128
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <vfprintf+0xca>
 4d8:	88 36       	cpi	r24, 0x68	; 104
 4da:	41 f4       	brne	.+16     	; 0x4ec <vfprintf+0xda>
 4dc:	f6 01       	movw	r30, r12
 4de:	93 fd       	sbrc	r25, 3
 4e0:	85 91       	lpm	r24, Z+
 4e2:	93 ff       	sbrs	r25, 3
 4e4:	81 91       	ld	r24, Z+
 4e6:	6f 01       	movw	r12, r30
 4e8:	81 11       	cpse	r24, r1
 4ea:	c1 cf       	rjmp	.-126    	; 0x46e <vfprintf+0x5c>
 4ec:	98 2f       	mov	r25, r24
 4ee:	9f 7d       	andi	r25, 0xDF	; 223
 4f0:	95 54       	subi	r25, 0x45	; 69
 4f2:	93 30       	cpi	r25, 0x03	; 3
 4f4:	28 f4       	brcc	.+10     	; 0x500 <__stack+0x1>
 4f6:	0c 5f       	subi	r16, 0xFC	; 252
 4f8:	1f 4f       	sbci	r17, 0xFF	; 255
 4fa:	ff e3       	ldi	r31, 0x3F	; 63
 4fc:	f9 83       	std	Y+1, r31	; 0x01
 4fe:	0d c0       	rjmp	.+26     	; 0x51a <__stack+0x1b>
 500:	83 36       	cpi	r24, 0x63	; 99
 502:	31 f0       	breq	.+12     	; 0x510 <__stack+0x11>
 504:	83 37       	cpi	r24, 0x73	; 115
 506:	71 f0       	breq	.+28     	; 0x524 <__stack+0x25>
 508:	83 35       	cpi	r24, 0x53	; 83
 50a:	09 f0       	breq	.+2      	; 0x50e <__stack+0xf>
 50c:	5b c0       	rjmp	.+182    	; 0x5c4 <__stack+0xc5>
 50e:	22 c0       	rjmp	.+68     	; 0x554 <__stack+0x55>
 510:	f8 01       	movw	r30, r16
 512:	80 81       	ld	r24, Z
 514:	89 83       	std	Y+1, r24	; 0x01
 516:	0e 5f       	subi	r16, 0xFE	; 254
 518:	1f 4f       	sbci	r17, 0xFF	; 255
 51a:	44 24       	eor	r4, r4
 51c:	43 94       	inc	r4
 51e:	51 2c       	mov	r5, r1
 520:	54 01       	movw	r10, r8
 522:	15 c0       	rjmp	.+42     	; 0x54e <__stack+0x4f>
 524:	38 01       	movw	r6, r16
 526:	f2 e0       	ldi	r31, 0x02	; 2
 528:	6f 0e       	add	r6, r31
 52a:	71 1c       	adc	r7, r1
 52c:	f8 01       	movw	r30, r16
 52e:	a0 80       	ld	r10, Z
 530:	b1 80       	ldd	r11, Z+1	; 0x01
 532:	26 ff       	sbrs	r18, 6
 534:	03 c0       	rjmp	.+6      	; 0x53c <__stack+0x3d>
 536:	65 2d       	mov	r22, r5
 538:	70 e0       	ldi	r23, 0x00	; 0
 53a:	02 c0       	rjmp	.+4      	; 0x540 <__stack+0x41>
 53c:	6f ef       	ldi	r22, 0xFF	; 255
 53e:	7f ef       	ldi	r23, 0xFF	; 255
 540:	c5 01       	movw	r24, r10
 542:	2c 87       	std	Y+12, r18	; 0x0c
 544:	0e 94 30 05 	call	0xa60	; 0xa60 <strnlen>
 548:	2c 01       	movw	r4, r24
 54a:	83 01       	movw	r16, r6
 54c:	2c 85       	ldd	r18, Y+12	; 0x0c
 54e:	2f 77       	andi	r18, 0x7F	; 127
 550:	22 2e       	mov	r2, r18
 552:	17 c0       	rjmp	.+46     	; 0x582 <__stack+0x83>
 554:	38 01       	movw	r6, r16
 556:	f2 e0       	ldi	r31, 0x02	; 2
 558:	6f 0e       	add	r6, r31
 55a:	71 1c       	adc	r7, r1
 55c:	f8 01       	movw	r30, r16
 55e:	a0 80       	ld	r10, Z
 560:	b1 80       	ldd	r11, Z+1	; 0x01
 562:	26 ff       	sbrs	r18, 6
 564:	03 c0       	rjmp	.+6      	; 0x56c <__stack+0x6d>
 566:	65 2d       	mov	r22, r5
 568:	70 e0       	ldi	r23, 0x00	; 0
 56a:	02 c0       	rjmp	.+4      	; 0x570 <__stack+0x71>
 56c:	6f ef       	ldi	r22, 0xFF	; 255
 56e:	7f ef       	ldi	r23, 0xFF	; 255
 570:	c5 01       	movw	r24, r10
 572:	2c 87       	std	Y+12, r18	; 0x0c
 574:	0e 94 1e 05 	call	0xa3c	; 0xa3c <strnlen_P>
 578:	2c 01       	movw	r4, r24
 57a:	2c 85       	ldd	r18, Y+12	; 0x0c
 57c:	20 68       	ori	r18, 0x80	; 128
 57e:	22 2e       	mov	r2, r18
 580:	83 01       	movw	r16, r6
 582:	23 fc       	sbrc	r2, 3
 584:	1b c0       	rjmp	.+54     	; 0x5bc <__stack+0xbd>
 586:	83 2d       	mov	r24, r3
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	48 16       	cp	r4, r24
 58c:	59 06       	cpc	r5, r25
 58e:	b0 f4       	brcc	.+44     	; 0x5bc <__stack+0xbd>
 590:	b7 01       	movw	r22, r14
 592:	80 e2       	ldi	r24, 0x20	; 32
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	0e 94 3b 05 	call	0xa76	; 0xa76 <fputc>
 59a:	3a 94       	dec	r3
 59c:	f4 cf       	rjmp	.-24     	; 0x586 <__stack+0x87>
 59e:	f5 01       	movw	r30, r10
 5a0:	27 fc       	sbrc	r2, 7
 5a2:	85 91       	lpm	r24, Z+
 5a4:	27 fe       	sbrs	r2, 7
 5a6:	81 91       	ld	r24, Z+
 5a8:	5f 01       	movw	r10, r30
 5aa:	b7 01       	movw	r22, r14
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	0e 94 3b 05 	call	0xa76	; 0xa76 <fputc>
 5b2:	31 10       	cpse	r3, r1
 5b4:	3a 94       	dec	r3
 5b6:	f1 e0       	ldi	r31, 0x01	; 1
 5b8:	4f 1a       	sub	r4, r31
 5ba:	51 08       	sbc	r5, r1
 5bc:	41 14       	cp	r4, r1
 5be:	51 04       	cpc	r5, r1
 5c0:	71 f7       	brne	.-36     	; 0x59e <__stack+0x9f>
 5c2:	e5 c0       	rjmp	.+458    	; 0x78e <__stack+0x28f>
 5c4:	84 36       	cpi	r24, 0x64	; 100
 5c6:	11 f0       	breq	.+4      	; 0x5cc <__stack+0xcd>
 5c8:	89 36       	cpi	r24, 0x69	; 105
 5ca:	39 f5       	brne	.+78     	; 0x61a <__stack+0x11b>
 5cc:	f8 01       	movw	r30, r16
 5ce:	27 ff       	sbrs	r18, 7
 5d0:	07 c0       	rjmp	.+14     	; 0x5e0 <__stack+0xe1>
 5d2:	60 81       	ld	r22, Z
 5d4:	71 81       	ldd	r23, Z+1	; 0x01
 5d6:	82 81       	ldd	r24, Z+2	; 0x02
 5d8:	93 81       	ldd	r25, Z+3	; 0x03
 5da:	0c 5f       	subi	r16, 0xFC	; 252
 5dc:	1f 4f       	sbci	r17, 0xFF	; 255
 5de:	08 c0       	rjmp	.+16     	; 0x5f0 <__stack+0xf1>
 5e0:	60 81       	ld	r22, Z
 5e2:	71 81       	ldd	r23, Z+1	; 0x01
 5e4:	88 27       	eor	r24, r24
 5e6:	77 fd       	sbrc	r23, 7
 5e8:	80 95       	com	r24
 5ea:	98 2f       	mov	r25, r24
 5ec:	0e 5f       	subi	r16, 0xFE	; 254
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	2f 76       	andi	r18, 0x6F	; 111
 5f2:	b2 2e       	mov	r11, r18
 5f4:	97 ff       	sbrs	r25, 7
 5f6:	09 c0       	rjmp	.+18     	; 0x60a <__stack+0x10b>
 5f8:	90 95       	com	r25
 5fa:	80 95       	com	r24
 5fc:	70 95       	com	r23
 5fe:	61 95       	neg	r22
 600:	7f 4f       	sbci	r23, 0xFF	; 255
 602:	8f 4f       	sbci	r24, 0xFF	; 255
 604:	9f 4f       	sbci	r25, 0xFF	; 255
 606:	20 68       	ori	r18, 0x80	; 128
 608:	b2 2e       	mov	r11, r18
 60a:	2a e0       	ldi	r18, 0x0A	; 10
 60c:	30 e0       	ldi	r19, 0x00	; 0
 60e:	a4 01       	movw	r20, r8
 610:	0e 94 6d 05 	call	0xada	; 0xada <__ultoa_invert>
 614:	a8 2e       	mov	r10, r24
 616:	a8 18       	sub	r10, r8
 618:	44 c0       	rjmp	.+136    	; 0x6a2 <__stack+0x1a3>
 61a:	85 37       	cpi	r24, 0x75	; 117
 61c:	29 f4       	brne	.+10     	; 0x628 <__stack+0x129>
 61e:	2f 7e       	andi	r18, 0xEF	; 239
 620:	b2 2e       	mov	r11, r18
 622:	2a e0       	ldi	r18, 0x0A	; 10
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	25 c0       	rjmp	.+74     	; 0x672 <__stack+0x173>
 628:	f2 2f       	mov	r31, r18
 62a:	f9 7f       	andi	r31, 0xF9	; 249
 62c:	bf 2e       	mov	r11, r31
 62e:	8f 36       	cpi	r24, 0x6F	; 111
 630:	c1 f0       	breq	.+48     	; 0x662 <__stack+0x163>
 632:	18 f4       	brcc	.+6      	; 0x63a <__stack+0x13b>
 634:	88 35       	cpi	r24, 0x58	; 88
 636:	79 f0       	breq	.+30     	; 0x656 <__stack+0x157>
 638:	b4 c0       	rjmp	.+360    	; 0x7a2 <__stack+0x2a3>
 63a:	80 37       	cpi	r24, 0x70	; 112
 63c:	19 f0       	breq	.+6      	; 0x644 <__stack+0x145>
 63e:	88 37       	cpi	r24, 0x78	; 120
 640:	21 f0       	breq	.+8      	; 0x64a <__stack+0x14b>
 642:	af c0       	rjmp	.+350    	; 0x7a2 <__stack+0x2a3>
 644:	2f 2f       	mov	r18, r31
 646:	20 61       	ori	r18, 0x10	; 16
 648:	b2 2e       	mov	r11, r18
 64a:	b4 fe       	sbrs	r11, 4
 64c:	0d c0       	rjmp	.+26     	; 0x668 <__stack+0x169>
 64e:	8b 2d       	mov	r24, r11
 650:	84 60       	ori	r24, 0x04	; 4
 652:	b8 2e       	mov	r11, r24
 654:	09 c0       	rjmp	.+18     	; 0x668 <__stack+0x169>
 656:	24 ff       	sbrs	r18, 4
 658:	0a c0       	rjmp	.+20     	; 0x66e <__stack+0x16f>
 65a:	9f 2f       	mov	r25, r31
 65c:	96 60       	ori	r25, 0x06	; 6
 65e:	b9 2e       	mov	r11, r25
 660:	06 c0       	rjmp	.+12     	; 0x66e <__stack+0x16f>
 662:	28 e0       	ldi	r18, 0x08	; 8
 664:	30 e0       	ldi	r19, 0x00	; 0
 666:	05 c0       	rjmp	.+10     	; 0x672 <__stack+0x173>
 668:	20 e1       	ldi	r18, 0x10	; 16
 66a:	30 e0       	ldi	r19, 0x00	; 0
 66c:	02 c0       	rjmp	.+4      	; 0x672 <__stack+0x173>
 66e:	20 e1       	ldi	r18, 0x10	; 16
 670:	32 e0       	ldi	r19, 0x02	; 2
 672:	f8 01       	movw	r30, r16
 674:	b7 fe       	sbrs	r11, 7
 676:	07 c0       	rjmp	.+14     	; 0x686 <__stack+0x187>
 678:	60 81       	ld	r22, Z
 67a:	71 81       	ldd	r23, Z+1	; 0x01
 67c:	82 81       	ldd	r24, Z+2	; 0x02
 67e:	93 81       	ldd	r25, Z+3	; 0x03
 680:	0c 5f       	subi	r16, 0xFC	; 252
 682:	1f 4f       	sbci	r17, 0xFF	; 255
 684:	06 c0       	rjmp	.+12     	; 0x692 <__stack+0x193>
 686:	60 81       	ld	r22, Z
 688:	71 81       	ldd	r23, Z+1	; 0x01
 68a:	80 e0       	ldi	r24, 0x00	; 0
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	0e 5f       	subi	r16, 0xFE	; 254
 690:	1f 4f       	sbci	r17, 0xFF	; 255
 692:	a4 01       	movw	r20, r8
 694:	0e 94 6d 05 	call	0xada	; 0xada <__ultoa_invert>
 698:	a8 2e       	mov	r10, r24
 69a:	a8 18       	sub	r10, r8
 69c:	fb 2d       	mov	r31, r11
 69e:	ff 77       	andi	r31, 0x7F	; 127
 6a0:	bf 2e       	mov	r11, r31
 6a2:	b6 fe       	sbrs	r11, 6
 6a4:	0b c0       	rjmp	.+22     	; 0x6bc <__stack+0x1bd>
 6a6:	2b 2d       	mov	r18, r11
 6a8:	2e 7f       	andi	r18, 0xFE	; 254
 6aa:	a5 14       	cp	r10, r5
 6ac:	50 f4       	brcc	.+20     	; 0x6c2 <__stack+0x1c3>
 6ae:	b4 fe       	sbrs	r11, 4
 6b0:	0a c0       	rjmp	.+20     	; 0x6c6 <__stack+0x1c7>
 6b2:	b2 fc       	sbrc	r11, 2
 6b4:	08 c0       	rjmp	.+16     	; 0x6c6 <__stack+0x1c7>
 6b6:	2b 2d       	mov	r18, r11
 6b8:	2e 7e       	andi	r18, 0xEE	; 238
 6ba:	05 c0       	rjmp	.+10     	; 0x6c6 <__stack+0x1c7>
 6bc:	7a 2c       	mov	r7, r10
 6be:	2b 2d       	mov	r18, r11
 6c0:	03 c0       	rjmp	.+6      	; 0x6c8 <__stack+0x1c9>
 6c2:	7a 2c       	mov	r7, r10
 6c4:	01 c0       	rjmp	.+2      	; 0x6c8 <__stack+0x1c9>
 6c6:	75 2c       	mov	r7, r5
 6c8:	24 ff       	sbrs	r18, 4
 6ca:	0d c0       	rjmp	.+26     	; 0x6e6 <__stack+0x1e7>
 6cc:	fe 01       	movw	r30, r28
 6ce:	ea 0d       	add	r30, r10
 6d0:	f1 1d       	adc	r31, r1
 6d2:	80 81       	ld	r24, Z
 6d4:	80 33       	cpi	r24, 0x30	; 48
 6d6:	11 f4       	brne	.+4      	; 0x6dc <__stack+0x1dd>
 6d8:	29 7e       	andi	r18, 0xE9	; 233
 6da:	09 c0       	rjmp	.+18     	; 0x6ee <__stack+0x1ef>
 6dc:	22 ff       	sbrs	r18, 2
 6de:	06 c0       	rjmp	.+12     	; 0x6ec <__stack+0x1ed>
 6e0:	73 94       	inc	r7
 6e2:	73 94       	inc	r7
 6e4:	04 c0       	rjmp	.+8      	; 0x6ee <__stack+0x1ef>
 6e6:	82 2f       	mov	r24, r18
 6e8:	86 78       	andi	r24, 0x86	; 134
 6ea:	09 f0       	breq	.+2      	; 0x6ee <__stack+0x1ef>
 6ec:	73 94       	inc	r7
 6ee:	23 fd       	sbrc	r18, 3
 6f0:	13 c0       	rjmp	.+38     	; 0x718 <__stack+0x219>
 6f2:	20 ff       	sbrs	r18, 0
 6f4:	06 c0       	rjmp	.+12     	; 0x702 <__stack+0x203>
 6f6:	5a 2c       	mov	r5, r10
 6f8:	73 14       	cp	r7, r3
 6fa:	18 f4       	brcc	.+6      	; 0x702 <__stack+0x203>
 6fc:	53 0c       	add	r5, r3
 6fe:	57 18       	sub	r5, r7
 700:	73 2c       	mov	r7, r3
 702:	73 14       	cp	r7, r3
 704:	68 f4       	brcc	.+26     	; 0x720 <__stack+0x221>
 706:	b7 01       	movw	r22, r14
 708:	80 e2       	ldi	r24, 0x20	; 32
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	2c 87       	std	Y+12, r18	; 0x0c
 70e:	0e 94 3b 05 	call	0xa76	; 0xa76 <fputc>
 712:	73 94       	inc	r7
 714:	2c 85       	ldd	r18, Y+12	; 0x0c
 716:	f5 cf       	rjmp	.-22     	; 0x702 <__stack+0x203>
 718:	73 14       	cp	r7, r3
 71a:	10 f4       	brcc	.+4      	; 0x720 <__stack+0x221>
 71c:	37 18       	sub	r3, r7
 71e:	01 c0       	rjmp	.+2      	; 0x722 <__stack+0x223>
 720:	31 2c       	mov	r3, r1
 722:	24 ff       	sbrs	r18, 4
 724:	12 c0       	rjmp	.+36     	; 0x74a <__stack+0x24b>
 726:	b7 01       	movw	r22, r14
 728:	80 e3       	ldi	r24, 0x30	; 48
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	2c 87       	std	Y+12, r18	; 0x0c
 72e:	0e 94 3b 05 	call	0xa76	; 0xa76 <fputc>
 732:	2c 85       	ldd	r18, Y+12	; 0x0c
 734:	22 ff       	sbrs	r18, 2
 736:	17 c0       	rjmp	.+46     	; 0x766 <__stack+0x267>
 738:	21 ff       	sbrs	r18, 1
 73a:	03 c0       	rjmp	.+6      	; 0x742 <__stack+0x243>
 73c:	88 e5       	ldi	r24, 0x58	; 88
 73e:	90 e0       	ldi	r25, 0x00	; 0
 740:	02 c0       	rjmp	.+4      	; 0x746 <__stack+0x247>
 742:	88 e7       	ldi	r24, 0x78	; 120
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	b7 01       	movw	r22, r14
 748:	0c c0       	rjmp	.+24     	; 0x762 <__stack+0x263>
 74a:	82 2f       	mov	r24, r18
 74c:	86 78       	andi	r24, 0x86	; 134
 74e:	59 f0       	breq	.+22     	; 0x766 <__stack+0x267>
 750:	21 fd       	sbrc	r18, 1
 752:	02 c0       	rjmp	.+4      	; 0x758 <__stack+0x259>
 754:	80 e2       	ldi	r24, 0x20	; 32
 756:	01 c0       	rjmp	.+2      	; 0x75a <__stack+0x25b>
 758:	8b e2       	ldi	r24, 0x2B	; 43
 75a:	27 fd       	sbrc	r18, 7
 75c:	8d e2       	ldi	r24, 0x2D	; 45
 75e:	b7 01       	movw	r22, r14
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	0e 94 3b 05 	call	0xa76	; 0xa76 <fputc>
 766:	a5 14       	cp	r10, r5
 768:	38 f4       	brcc	.+14     	; 0x778 <__stack+0x279>
 76a:	b7 01       	movw	r22, r14
 76c:	80 e3       	ldi	r24, 0x30	; 48
 76e:	90 e0       	ldi	r25, 0x00	; 0
 770:	0e 94 3b 05 	call	0xa76	; 0xa76 <fputc>
 774:	5a 94       	dec	r5
 776:	f7 cf       	rjmp	.-18     	; 0x766 <__stack+0x267>
 778:	aa 94       	dec	r10
 77a:	f4 01       	movw	r30, r8
 77c:	ea 0d       	add	r30, r10
 77e:	f1 1d       	adc	r31, r1
 780:	80 81       	ld	r24, Z
 782:	b7 01       	movw	r22, r14
 784:	90 e0       	ldi	r25, 0x00	; 0
 786:	0e 94 3b 05 	call	0xa76	; 0xa76 <fputc>
 78a:	a1 10       	cpse	r10, r1
 78c:	f5 cf       	rjmp	.-22     	; 0x778 <__stack+0x279>
 78e:	33 20       	and	r3, r3
 790:	09 f4       	brne	.+2      	; 0x794 <__stack+0x295>
 792:	51 ce       	rjmp	.-862    	; 0x436 <vfprintf+0x24>
 794:	b7 01       	movw	r22, r14
 796:	80 e2       	ldi	r24, 0x20	; 32
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	0e 94 3b 05 	call	0xa76	; 0xa76 <fputc>
 79e:	3a 94       	dec	r3
 7a0:	f6 cf       	rjmp	.-20     	; 0x78e <__stack+0x28f>
 7a2:	f7 01       	movw	r30, r14
 7a4:	86 81       	ldd	r24, Z+6	; 0x06
 7a6:	97 81       	ldd	r25, Z+7	; 0x07
 7a8:	02 c0       	rjmp	.+4      	; 0x7ae <__stack+0x2af>
 7aa:	8f ef       	ldi	r24, 0xFF	; 255
 7ac:	9f ef       	ldi	r25, 0xFF	; 255
 7ae:	2c 96       	adiw	r28, 0x0c	; 12
 7b0:	e2 e1       	ldi	r30, 0x12	; 18
 7b2:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__epilogue_restores__>

000007b6 <calloc>:
 7b6:	0f 93       	push	r16
 7b8:	1f 93       	push	r17
 7ba:	cf 93       	push	r28
 7bc:	df 93       	push	r29
 7be:	86 9f       	mul	r24, r22
 7c0:	80 01       	movw	r16, r0
 7c2:	87 9f       	mul	r24, r23
 7c4:	10 0d       	add	r17, r0
 7c6:	96 9f       	mul	r25, r22
 7c8:	10 0d       	add	r17, r0
 7ca:	11 24       	eor	r1, r1
 7cc:	c8 01       	movw	r24, r16
 7ce:	0e 94 f7 03 	call	0x7ee	; 0x7ee <malloc>
 7d2:	ec 01       	movw	r28, r24
 7d4:	00 97       	sbiw	r24, 0x00	; 0
 7d6:	29 f0       	breq	.+10     	; 0x7e2 <calloc+0x2c>
 7d8:	a8 01       	movw	r20, r16
 7da:	60 e0       	ldi	r22, 0x00	; 0
 7dc:	70 e0       	ldi	r23, 0x00	; 0
 7de:	0e 94 29 05 	call	0xa52	; 0xa52 <memset>
 7e2:	ce 01       	movw	r24, r28
 7e4:	df 91       	pop	r29
 7e6:	cf 91       	pop	r28
 7e8:	1f 91       	pop	r17
 7ea:	0f 91       	pop	r16
 7ec:	08 95       	ret

000007ee <malloc>:
 7ee:	cf 93       	push	r28
 7f0:	df 93       	push	r29
 7f2:	82 30       	cpi	r24, 0x02	; 2
 7f4:	91 05       	cpc	r25, r1
 7f6:	10 f4       	brcc	.+4      	; 0x7fc <malloc+0xe>
 7f8:	82 e0       	ldi	r24, 0x02	; 2
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	e0 91 f8 01 	lds	r30, 0x01F8
 800:	f0 91 f9 01 	lds	r31, 0x01F9
 804:	20 e0       	ldi	r18, 0x00	; 0
 806:	30 e0       	ldi	r19, 0x00	; 0
 808:	a0 e0       	ldi	r26, 0x00	; 0
 80a:	b0 e0       	ldi	r27, 0x00	; 0
 80c:	30 97       	sbiw	r30, 0x00	; 0
 80e:	39 f1       	breq	.+78     	; 0x85e <malloc+0x70>
 810:	40 81       	ld	r20, Z
 812:	51 81       	ldd	r21, Z+1	; 0x01
 814:	48 17       	cp	r20, r24
 816:	59 07       	cpc	r21, r25
 818:	b8 f0       	brcs	.+46     	; 0x848 <malloc+0x5a>
 81a:	48 17       	cp	r20, r24
 81c:	59 07       	cpc	r21, r25
 81e:	71 f4       	brne	.+28     	; 0x83c <malloc+0x4e>
 820:	82 81       	ldd	r24, Z+2	; 0x02
 822:	93 81       	ldd	r25, Z+3	; 0x03
 824:	10 97       	sbiw	r26, 0x00	; 0
 826:	29 f0       	breq	.+10     	; 0x832 <malloc+0x44>
 828:	13 96       	adiw	r26, 0x03	; 3
 82a:	9c 93       	st	X, r25
 82c:	8e 93       	st	-X, r24
 82e:	12 97       	sbiw	r26, 0x02	; 2
 830:	2c c0       	rjmp	.+88     	; 0x88a <malloc+0x9c>
 832:	90 93 f9 01 	sts	0x01F9, r25
 836:	80 93 f8 01 	sts	0x01F8, r24
 83a:	27 c0       	rjmp	.+78     	; 0x88a <malloc+0x9c>
 83c:	21 15       	cp	r18, r1
 83e:	31 05       	cpc	r19, r1
 840:	31 f0       	breq	.+12     	; 0x84e <malloc+0x60>
 842:	42 17       	cp	r20, r18
 844:	53 07       	cpc	r21, r19
 846:	18 f0       	brcs	.+6      	; 0x84e <malloc+0x60>
 848:	a9 01       	movw	r20, r18
 84a:	db 01       	movw	r26, r22
 84c:	01 c0       	rjmp	.+2      	; 0x850 <malloc+0x62>
 84e:	ef 01       	movw	r28, r30
 850:	9a 01       	movw	r18, r20
 852:	bd 01       	movw	r22, r26
 854:	df 01       	movw	r26, r30
 856:	02 80       	ldd	r0, Z+2	; 0x02
 858:	f3 81       	ldd	r31, Z+3	; 0x03
 85a:	e0 2d       	mov	r30, r0
 85c:	d7 cf       	rjmp	.-82     	; 0x80c <malloc+0x1e>
 85e:	21 15       	cp	r18, r1
 860:	31 05       	cpc	r19, r1
 862:	f9 f0       	breq	.+62     	; 0x8a2 <malloc+0xb4>
 864:	28 1b       	sub	r18, r24
 866:	39 0b       	sbc	r19, r25
 868:	24 30       	cpi	r18, 0x04	; 4
 86a:	31 05       	cpc	r19, r1
 86c:	80 f4       	brcc	.+32     	; 0x88e <malloc+0xa0>
 86e:	8a 81       	ldd	r24, Y+2	; 0x02
 870:	9b 81       	ldd	r25, Y+3	; 0x03
 872:	61 15       	cp	r22, r1
 874:	71 05       	cpc	r23, r1
 876:	21 f0       	breq	.+8      	; 0x880 <malloc+0x92>
 878:	fb 01       	movw	r30, r22
 87a:	93 83       	std	Z+3, r25	; 0x03
 87c:	82 83       	std	Z+2, r24	; 0x02
 87e:	04 c0       	rjmp	.+8      	; 0x888 <malloc+0x9a>
 880:	90 93 f9 01 	sts	0x01F9, r25
 884:	80 93 f8 01 	sts	0x01F8, r24
 888:	fe 01       	movw	r30, r28
 88a:	32 96       	adiw	r30, 0x02	; 2
 88c:	44 c0       	rjmp	.+136    	; 0x916 <malloc+0x128>
 88e:	fe 01       	movw	r30, r28
 890:	e2 0f       	add	r30, r18
 892:	f3 1f       	adc	r31, r19
 894:	81 93       	st	Z+, r24
 896:	91 93       	st	Z+, r25
 898:	22 50       	subi	r18, 0x02	; 2
 89a:	31 09       	sbc	r19, r1
 89c:	39 83       	std	Y+1, r19	; 0x01
 89e:	28 83       	st	Y, r18
 8a0:	3a c0       	rjmp	.+116    	; 0x916 <malloc+0x128>
 8a2:	20 91 f6 01 	lds	r18, 0x01F6
 8a6:	30 91 f7 01 	lds	r19, 0x01F7
 8aa:	23 2b       	or	r18, r19
 8ac:	41 f4       	brne	.+16     	; 0x8be <malloc+0xd0>
 8ae:	20 91 06 01 	lds	r18, 0x0106
 8b2:	30 91 07 01 	lds	r19, 0x0107
 8b6:	30 93 f7 01 	sts	0x01F7, r19
 8ba:	20 93 f6 01 	sts	0x01F6, r18
 8be:	20 91 04 01 	lds	r18, 0x0104
 8c2:	30 91 05 01 	lds	r19, 0x0105
 8c6:	21 15       	cp	r18, r1
 8c8:	31 05       	cpc	r19, r1
 8ca:	41 f4       	brne	.+16     	; 0x8dc <malloc+0xee>
 8cc:	2d b7       	in	r18, 0x3d	; 61
 8ce:	3e b7       	in	r19, 0x3e	; 62
 8d0:	40 91 08 01 	lds	r20, 0x0108
 8d4:	50 91 09 01 	lds	r21, 0x0109
 8d8:	24 1b       	sub	r18, r20
 8da:	35 0b       	sbc	r19, r21
 8dc:	e0 91 f6 01 	lds	r30, 0x01F6
 8e0:	f0 91 f7 01 	lds	r31, 0x01F7
 8e4:	e2 17       	cp	r30, r18
 8e6:	f3 07       	cpc	r31, r19
 8e8:	a0 f4       	brcc	.+40     	; 0x912 <malloc+0x124>
 8ea:	2e 1b       	sub	r18, r30
 8ec:	3f 0b       	sbc	r19, r31
 8ee:	28 17       	cp	r18, r24
 8f0:	39 07       	cpc	r19, r25
 8f2:	78 f0       	brcs	.+30     	; 0x912 <malloc+0x124>
 8f4:	ac 01       	movw	r20, r24
 8f6:	4e 5f       	subi	r20, 0xFE	; 254
 8f8:	5f 4f       	sbci	r21, 0xFF	; 255
 8fa:	24 17       	cp	r18, r20
 8fc:	35 07       	cpc	r19, r21
 8fe:	48 f0       	brcs	.+18     	; 0x912 <malloc+0x124>
 900:	4e 0f       	add	r20, r30
 902:	5f 1f       	adc	r21, r31
 904:	50 93 f7 01 	sts	0x01F7, r21
 908:	40 93 f6 01 	sts	0x01F6, r20
 90c:	81 93       	st	Z+, r24
 90e:	91 93       	st	Z+, r25
 910:	02 c0       	rjmp	.+4      	; 0x916 <malloc+0x128>
 912:	e0 e0       	ldi	r30, 0x00	; 0
 914:	f0 e0       	ldi	r31, 0x00	; 0
 916:	cf 01       	movw	r24, r30
 918:	df 91       	pop	r29
 91a:	cf 91       	pop	r28
 91c:	08 95       	ret

0000091e <free>:
 91e:	cf 93       	push	r28
 920:	df 93       	push	r29
 922:	00 97       	sbiw	r24, 0x00	; 0
 924:	09 f4       	brne	.+2      	; 0x928 <free+0xa>
 926:	87 c0       	rjmp	.+270    	; 0xa36 <free+0x118>
 928:	fc 01       	movw	r30, r24
 92a:	32 97       	sbiw	r30, 0x02	; 2
 92c:	13 82       	std	Z+3, r1	; 0x03
 92e:	12 82       	std	Z+2, r1	; 0x02
 930:	c0 91 f8 01 	lds	r28, 0x01F8
 934:	d0 91 f9 01 	lds	r29, 0x01F9
 938:	20 97       	sbiw	r28, 0x00	; 0
 93a:	81 f4       	brne	.+32     	; 0x95c <free+0x3e>
 93c:	20 81       	ld	r18, Z
 93e:	31 81       	ldd	r19, Z+1	; 0x01
 940:	28 0f       	add	r18, r24
 942:	39 1f       	adc	r19, r25
 944:	80 91 f6 01 	lds	r24, 0x01F6
 948:	90 91 f7 01 	lds	r25, 0x01F7
 94c:	82 17       	cp	r24, r18
 94e:	93 07       	cpc	r25, r19
 950:	79 f5       	brne	.+94     	; 0x9b0 <free+0x92>
 952:	f0 93 f7 01 	sts	0x01F7, r31
 956:	e0 93 f6 01 	sts	0x01F6, r30
 95a:	6d c0       	rjmp	.+218    	; 0xa36 <free+0x118>
 95c:	de 01       	movw	r26, r28
 95e:	20 e0       	ldi	r18, 0x00	; 0
 960:	30 e0       	ldi	r19, 0x00	; 0
 962:	ae 17       	cp	r26, r30
 964:	bf 07       	cpc	r27, r31
 966:	50 f4       	brcc	.+20     	; 0x97c <free+0x5e>
 968:	12 96       	adiw	r26, 0x02	; 2
 96a:	4d 91       	ld	r20, X+
 96c:	5c 91       	ld	r21, X
 96e:	13 97       	sbiw	r26, 0x03	; 3
 970:	9d 01       	movw	r18, r26
 972:	41 15       	cp	r20, r1
 974:	51 05       	cpc	r21, r1
 976:	09 f1       	breq	.+66     	; 0x9ba <free+0x9c>
 978:	da 01       	movw	r26, r20
 97a:	f3 cf       	rjmp	.-26     	; 0x962 <free+0x44>
 97c:	b3 83       	std	Z+3, r27	; 0x03
 97e:	a2 83       	std	Z+2, r26	; 0x02
 980:	40 81       	ld	r20, Z
 982:	51 81       	ldd	r21, Z+1	; 0x01
 984:	84 0f       	add	r24, r20
 986:	95 1f       	adc	r25, r21
 988:	8a 17       	cp	r24, r26
 98a:	9b 07       	cpc	r25, r27
 98c:	71 f4       	brne	.+28     	; 0x9aa <free+0x8c>
 98e:	8d 91       	ld	r24, X+
 990:	9c 91       	ld	r25, X
 992:	11 97       	sbiw	r26, 0x01	; 1
 994:	84 0f       	add	r24, r20
 996:	95 1f       	adc	r25, r21
 998:	02 96       	adiw	r24, 0x02	; 2
 99a:	91 83       	std	Z+1, r25	; 0x01
 99c:	80 83       	st	Z, r24
 99e:	12 96       	adiw	r26, 0x02	; 2
 9a0:	8d 91       	ld	r24, X+
 9a2:	9c 91       	ld	r25, X
 9a4:	13 97       	sbiw	r26, 0x03	; 3
 9a6:	93 83       	std	Z+3, r25	; 0x03
 9a8:	82 83       	std	Z+2, r24	; 0x02
 9aa:	21 15       	cp	r18, r1
 9ac:	31 05       	cpc	r19, r1
 9ae:	29 f4       	brne	.+10     	; 0x9ba <free+0x9c>
 9b0:	f0 93 f9 01 	sts	0x01F9, r31
 9b4:	e0 93 f8 01 	sts	0x01F8, r30
 9b8:	3e c0       	rjmp	.+124    	; 0xa36 <free+0x118>
 9ba:	d9 01       	movw	r26, r18
 9bc:	13 96       	adiw	r26, 0x03	; 3
 9be:	fc 93       	st	X, r31
 9c0:	ee 93       	st	-X, r30
 9c2:	12 97       	sbiw	r26, 0x02	; 2
 9c4:	4d 91       	ld	r20, X+
 9c6:	5d 91       	ld	r21, X+
 9c8:	a4 0f       	add	r26, r20
 9ca:	b5 1f       	adc	r27, r21
 9cc:	ea 17       	cp	r30, r26
 9ce:	fb 07       	cpc	r31, r27
 9d0:	79 f4       	brne	.+30     	; 0x9f0 <free+0xd2>
 9d2:	80 81       	ld	r24, Z
 9d4:	91 81       	ldd	r25, Z+1	; 0x01
 9d6:	84 0f       	add	r24, r20
 9d8:	95 1f       	adc	r25, r21
 9da:	02 96       	adiw	r24, 0x02	; 2
 9dc:	d9 01       	movw	r26, r18
 9de:	11 96       	adiw	r26, 0x01	; 1
 9e0:	9c 93       	st	X, r25
 9e2:	8e 93       	st	-X, r24
 9e4:	82 81       	ldd	r24, Z+2	; 0x02
 9e6:	93 81       	ldd	r25, Z+3	; 0x03
 9e8:	13 96       	adiw	r26, 0x03	; 3
 9ea:	9c 93       	st	X, r25
 9ec:	8e 93       	st	-X, r24
 9ee:	12 97       	sbiw	r26, 0x02	; 2
 9f0:	e0 e0       	ldi	r30, 0x00	; 0
 9f2:	f0 e0       	ldi	r31, 0x00	; 0
 9f4:	8a 81       	ldd	r24, Y+2	; 0x02
 9f6:	9b 81       	ldd	r25, Y+3	; 0x03
 9f8:	00 97       	sbiw	r24, 0x00	; 0
 9fa:	19 f0       	breq	.+6      	; 0xa02 <free+0xe4>
 9fc:	fe 01       	movw	r30, r28
 9fe:	ec 01       	movw	r28, r24
 a00:	f9 cf       	rjmp	.-14     	; 0x9f4 <free+0xd6>
 a02:	ce 01       	movw	r24, r28
 a04:	02 96       	adiw	r24, 0x02	; 2
 a06:	28 81       	ld	r18, Y
 a08:	39 81       	ldd	r19, Y+1	; 0x01
 a0a:	82 0f       	add	r24, r18
 a0c:	93 1f       	adc	r25, r19
 a0e:	20 91 f6 01 	lds	r18, 0x01F6
 a12:	30 91 f7 01 	lds	r19, 0x01F7
 a16:	28 17       	cp	r18, r24
 a18:	39 07       	cpc	r19, r25
 a1a:	69 f4       	brne	.+26     	; 0xa36 <free+0x118>
 a1c:	30 97       	sbiw	r30, 0x00	; 0
 a1e:	29 f4       	brne	.+10     	; 0xa2a <free+0x10c>
 a20:	10 92 f9 01 	sts	0x01F9, r1
 a24:	10 92 f8 01 	sts	0x01F8, r1
 a28:	02 c0       	rjmp	.+4      	; 0xa2e <free+0x110>
 a2a:	13 82       	std	Z+3, r1	; 0x03
 a2c:	12 82       	std	Z+2, r1	; 0x02
 a2e:	d0 93 f7 01 	sts	0x01F7, r29
 a32:	c0 93 f6 01 	sts	0x01F6, r28
 a36:	df 91       	pop	r29
 a38:	cf 91       	pop	r28
 a3a:	08 95       	ret

00000a3c <strnlen_P>:
 a3c:	fc 01       	movw	r30, r24
 a3e:	05 90       	lpm	r0, Z+
 a40:	61 50       	subi	r22, 0x01	; 1
 a42:	70 40       	sbci	r23, 0x00	; 0
 a44:	01 10       	cpse	r0, r1
 a46:	d8 f7       	brcc	.-10     	; 0xa3e <strnlen_P+0x2>
 a48:	80 95       	com	r24
 a4a:	90 95       	com	r25
 a4c:	8e 0f       	add	r24, r30
 a4e:	9f 1f       	adc	r25, r31
 a50:	08 95       	ret

00000a52 <memset>:
 a52:	dc 01       	movw	r26, r24
 a54:	01 c0       	rjmp	.+2      	; 0xa58 <memset+0x6>
 a56:	6d 93       	st	X+, r22
 a58:	41 50       	subi	r20, 0x01	; 1
 a5a:	50 40       	sbci	r21, 0x00	; 0
 a5c:	e0 f7       	brcc	.-8      	; 0xa56 <memset+0x4>
 a5e:	08 95       	ret

00000a60 <strnlen>:
 a60:	fc 01       	movw	r30, r24
 a62:	61 50       	subi	r22, 0x01	; 1
 a64:	70 40       	sbci	r23, 0x00	; 0
 a66:	01 90       	ld	r0, Z+
 a68:	01 10       	cpse	r0, r1
 a6a:	d8 f7       	brcc	.-10     	; 0xa62 <strnlen+0x2>
 a6c:	80 95       	com	r24
 a6e:	90 95       	com	r25
 a70:	8e 0f       	add	r24, r30
 a72:	9f 1f       	adc	r25, r31
 a74:	08 95       	ret

00000a76 <fputc>:
 a76:	0f 93       	push	r16
 a78:	1f 93       	push	r17
 a7a:	cf 93       	push	r28
 a7c:	df 93       	push	r29
 a7e:	18 2f       	mov	r17, r24
 a80:	09 2f       	mov	r16, r25
 a82:	eb 01       	movw	r28, r22
 a84:	8b 81       	ldd	r24, Y+3	; 0x03
 a86:	81 fd       	sbrc	r24, 1
 a88:	03 c0       	rjmp	.+6      	; 0xa90 <fputc+0x1a>
 a8a:	8f ef       	ldi	r24, 0xFF	; 255
 a8c:	9f ef       	ldi	r25, 0xFF	; 255
 a8e:	20 c0       	rjmp	.+64     	; 0xad0 <fputc+0x5a>
 a90:	82 ff       	sbrs	r24, 2
 a92:	10 c0       	rjmp	.+32     	; 0xab4 <fputc+0x3e>
 a94:	4e 81       	ldd	r20, Y+6	; 0x06
 a96:	5f 81       	ldd	r21, Y+7	; 0x07
 a98:	2c 81       	ldd	r18, Y+4	; 0x04
 a9a:	3d 81       	ldd	r19, Y+5	; 0x05
 a9c:	42 17       	cp	r20, r18
 a9e:	53 07       	cpc	r21, r19
 aa0:	7c f4       	brge	.+30     	; 0xac0 <fputc+0x4a>
 aa2:	e8 81       	ld	r30, Y
 aa4:	f9 81       	ldd	r31, Y+1	; 0x01
 aa6:	9f 01       	movw	r18, r30
 aa8:	2f 5f       	subi	r18, 0xFF	; 255
 aaa:	3f 4f       	sbci	r19, 0xFF	; 255
 aac:	39 83       	std	Y+1, r19	; 0x01
 aae:	28 83       	st	Y, r18
 ab0:	10 83       	st	Z, r17
 ab2:	06 c0       	rjmp	.+12     	; 0xac0 <fputc+0x4a>
 ab4:	e8 85       	ldd	r30, Y+8	; 0x08
 ab6:	f9 85       	ldd	r31, Y+9	; 0x09
 ab8:	81 2f       	mov	r24, r17
 aba:	09 95       	icall
 abc:	89 2b       	or	r24, r25
 abe:	29 f7       	brne	.-54     	; 0xa8a <fputc+0x14>
 ac0:	2e 81       	ldd	r18, Y+6	; 0x06
 ac2:	3f 81       	ldd	r19, Y+7	; 0x07
 ac4:	2f 5f       	subi	r18, 0xFF	; 255
 ac6:	3f 4f       	sbci	r19, 0xFF	; 255
 ac8:	3f 83       	std	Y+7, r19	; 0x07
 aca:	2e 83       	std	Y+6, r18	; 0x06
 acc:	81 2f       	mov	r24, r17
 ace:	90 2f       	mov	r25, r16
 ad0:	df 91       	pop	r29
 ad2:	cf 91       	pop	r28
 ad4:	1f 91       	pop	r17
 ad6:	0f 91       	pop	r16
 ad8:	08 95       	ret

00000ada <__ultoa_invert>:
 ada:	fa 01       	movw	r30, r20
 adc:	aa 27       	eor	r26, r26
 ade:	28 30       	cpi	r18, 0x08	; 8
 ae0:	51 f1       	breq	.+84     	; 0xb36 <__ultoa_invert+0x5c>
 ae2:	20 31       	cpi	r18, 0x10	; 16
 ae4:	81 f1       	breq	.+96     	; 0xb46 <__ultoa_invert+0x6c>
 ae6:	e8 94       	clt
 ae8:	6f 93       	push	r22
 aea:	6e 7f       	andi	r22, 0xFE	; 254
 aec:	6e 5f       	subi	r22, 0xFE	; 254
 aee:	7f 4f       	sbci	r23, 0xFF	; 255
 af0:	8f 4f       	sbci	r24, 0xFF	; 255
 af2:	9f 4f       	sbci	r25, 0xFF	; 255
 af4:	af 4f       	sbci	r26, 0xFF	; 255
 af6:	b1 e0       	ldi	r27, 0x01	; 1
 af8:	3e d0       	rcall	.+124    	; 0xb76 <__ultoa_invert+0x9c>
 afa:	b4 e0       	ldi	r27, 0x04	; 4
 afc:	3c d0       	rcall	.+120    	; 0xb76 <__ultoa_invert+0x9c>
 afe:	67 0f       	add	r22, r23
 b00:	78 1f       	adc	r23, r24
 b02:	89 1f       	adc	r24, r25
 b04:	9a 1f       	adc	r25, r26
 b06:	a1 1d       	adc	r26, r1
 b08:	68 0f       	add	r22, r24
 b0a:	79 1f       	adc	r23, r25
 b0c:	8a 1f       	adc	r24, r26
 b0e:	91 1d       	adc	r25, r1
 b10:	a1 1d       	adc	r26, r1
 b12:	6a 0f       	add	r22, r26
 b14:	71 1d       	adc	r23, r1
 b16:	81 1d       	adc	r24, r1
 b18:	91 1d       	adc	r25, r1
 b1a:	a1 1d       	adc	r26, r1
 b1c:	20 d0       	rcall	.+64     	; 0xb5e <__ultoa_invert+0x84>
 b1e:	09 f4       	brne	.+2      	; 0xb22 <__ultoa_invert+0x48>
 b20:	68 94       	set
 b22:	3f 91       	pop	r19
 b24:	2a e0       	ldi	r18, 0x0A	; 10
 b26:	26 9f       	mul	r18, r22
 b28:	11 24       	eor	r1, r1
 b2a:	30 19       	sub	r19, r0
 b2c:	30 5d       	subi	r19, 0xD0	; 208
 b2e:	31 93       	st	Z+, r19
 b30:	de f6       	brtc	.-74     	; 0xae8 <__ultoa_invert+0xe>
 b32:	cf 01       	movw	r24, r30
 b34:	08 95       	ret
 b36:	46 2f       	mov	r20, r22
 b38:	47 70       	andi	r20, 0x07	; 7
 b3a:	40 5d       	subi	r20, 0xD0	; 208
 b3c:	41 93       	st	Z+, r20
 b3e:	b3 e0       	ldi	r27, 0x03	; 3
 b40:	0f d0       	rcall	.+30     	; 0xb60 <__ultoa_invert+0x86>
 b42:	c9 f7       	brne	.-14     	; 0xb36 <__ultoa_invert+0x5c>
 b44:	f6 cf       	rjmp	.-20     	; 0xb32 <__ultoa_invert+0x58>
 b46:	46 2f       	mov	r20, r22
 b48:	4f 70       	andi	r20, 0x0F	; 15
 b4a:	40 5d       	subi	r20, 0xD0	; 208
 b4c:	4a 33       	cpi	r20, 0x3A	; 58
 b4e:	18 f0       	brcs	.+6      	; 0xb56 <__ultoa_invert+0x7c>
 b50:	49 5d       	subi	r20, 0xD9	; 217
 b52:	31 fd       	sbrc	r19, 1
 b54:	40 52       	subi	r20, 0x20	; 32
 b56:	41 93       	st	Z+, r20
 b58:	02 d0       	rcall	.+4      	; 0xb5e <__ultoa_invert+0x84>
 b5a:	a9 f7       	brne	.-22     	; 0xb46 <__ultoa_invert+0x6c>
 b5c:	ea cf       	rjmp	.-44     	; 0xb32 <__ultoa_invert+0x58>
 b5e:	b4 e0       	ldi	r27, 0x04	; 4
 b60:	a6 95       	lsr	r26
 b62:	97 95       	ror	r25
 b64:	87 95       	ror	r24
 b66:	77 95       	ror	r23
 b68:	67 95       	ror	r22
 b6a:	ba 95       	dec	r27
 b6c:	c9 f7       	brne	.-14     	; 0xb60 <__ultoa_invert+0x86>
 b6e:	00 97       	sbiw	r24, 0x00	; 0
 b70:	61 05       	cpc	r22, r1
 b72:	71 05       	cpc	r23, r1
 b74:	08 95       	ret
 b76:	9b 01       	movw	r18, r22
 b78:	ac 01       	movw	r20, r24
 b7a:	0a 2e       	mov	r0, r26
 b7c:	06 94       	lsr	r0
 b7e:	57 95       	ror	r21
 b80:	47 95       	ror	r20
 b82:	37 95       	ror	r19
 b84:	27 95       	ror	r18
 b86:	ba 95       	dec	r27
 b88:	c9 f7       	brne	.-14     	; 0xb7c <__ultoa_invert+0xa2>
 b8a:	62 0f       	add	r22, r18
 b8c:	73 1f       	adc	r23, r19
 b8e:	84 1f       	adc	r24, r20
 b90:	95 1f       	adc	r25, r21
 b92:	a0 1d       	adc	r26, r0
 b94:	08 95       	ret

00000b96 <__divmodsi4>:
 b96:	05 2e       	mov	r0, r21
 b98:	97 fb       	bst	r25, 7
 b9a:	1e f4       	brtc	.+6      	; 0xba2 <__divmodsi4+0xc>
 b9c:	00 94       	com	r0
 b9e:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__negsi2>
 ba2:	57 fd       	sbrc	r21, 7
 ba4:	07 d0       	rcall	.+14     	; 0xbb4 <__divmodsi4_neg2>
 ba6:	0e 94 34 06 	call	0xc68	; 0xc68 <__udivmodsi4>
 baa:	07 fc       	sbrc	r0, 7
 bac:	03 d0       	rcall	.+6      	; 0xbb4 <__divmodsi4_neg2>
 bae:	4e f4       	brtc	.+18     	; 0xbc2 <__divmodsi4_exit>
 bb0:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__negsi2>

00000bb4 <__divmodsi4_neg2>:
 bb4:	50 95       	com	r21
 bb6:	40 95       	com	r20
 bb8:	30 95       	com	r19
 bba:	21 95       	neg	r18
 bbc:	3f 4f       	sbci	r19, 0xFF	; 255
 bbe:	4f 4f       	sbci	r20, 0xFF	; 255
 bc0:	5f 4f       	sbci	r21, 0xFF	; 255

00000bc2 <__divmodsi4_exit>:
 bc2:	08 95       	ret

00000bc4 <__negsi2>:
 bc4:	90 95       	com	r25
 bc6:	80 95       	com	r24
 bc8:	70 95       	com	r23
 bca:	61 95       	neg	r22
 bcc:	7f 4f       	sbci	r23, 0xFF	; 255
 bce:	8f 4f       	sbci	r24, 0xFF	; 255
 bd0:	9f 4f       	sbci	r25, 0xFF	; 255
 bd2:	08 95       	ret

00000bd4 <__muluhisi3>:
 bd4:	0e 94 56 06 	call	0xcac	; 0xcac <__umulhisi3>
 bd8:	a5 9f       	mul	r26, r21
 bda:	90 0d       	add	r25, r0
 bdc:	b4 9f       	mul	r27, r20
 bde:	90 0d       	add	r25, r0
 be0:	a4 9f       	mul	r26, r20
 be2:	80 0d       	add	r24, r0
 be4:	91 1d       	adc	r25, r1
 be6:	11 24       	eor	r1, r1
 be8:	08 95       	ret

00000bea <__mulshisi3>:
 bea:	b7 ff       	sbrs	r27, 7
 bec:	0c 94 ea 05 	jmp	0xbd4	; 0xbd4 <__muluhisi3>

00000bf0 <__mulohisi3>:
 bf0:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__muluhisi3>
 bf4:	82 1b       	sub	r24, r18
 bf6:	93 0b       	sbc	r25, r19
 bf8:	08 95       	ret

00000bfa <__prologue_saves__>:
 bfa:	2f 92       	push	r2
 bfc:	3f 92       	push	r3
 bfe:	4f 92       	push	r4
 c00:	5f 92       	push	r5
 c02:	6f 92       	push	r6
 c04:	7f 92       	push	r7
 c06:	8f 92       	push	r8
 c08:	9f 92       	push	r9
 c0a:	af 92       	push	r10
 c0c:	bf 92       	push	r11
 c0e:	cf 92       	push	r12
 c10:	df 92       	push	r13
 c12:	ef 92       	push	r14
 c14:	ff 92       	push	r15
 c16:	0f 93       	push	r16
 c18:	1f 93       	push	r17
 c1a:	cf 93       	push	r28
 c1c:	df 93       	push	r29
 c1e:	cd b7       	in	r28, 0x3d	; 61
 c20:	de b7       	in	r29, 0x3e	; 62
 c22:	ca 1b       	sub	r28, r26
 c24:	db 0b       	sbc	r29, r27
 c26:	0f b6       	in	r0, 0x3f	; 63
 c28:	f8 94       	cli
 c2a:	de bf       	out	0x3e, r29	; 62
 c2c:	0f be       	out	0x3f, r0	; 63
 c2e:	cd bf       	out	0x3d, r28	; 61
 c30:	09 94       	ijmp

00000c32 <__epilogue_restores__>:
 c32:	2a 88       	ldd	r2, Y+18	; 0x12
 c34:	39 88       	ldd	r3, Y+17	; 0x11
 c36:	48 88       	ldd	r4, Y+16	; 0x10
 c38:	5f 84       	ldd	r5, Y+15	; 0x0f
 c3a:	6e 84       	ldd	r6, Y+14	; 0x0e
 c3c:	7d 84       	ldd	r7, Y+13	; 0x0d
 c3e:	8c 84       	ldd	r8, Y+12	; 0x0c
 c40:	9b 84       	ldd	r9, Y+11	; 0x0b
 c42:	aa 84       	ldd	r10, Y+10	; 0x0a
 c44:	b9 84       	ldd	r11, Y+9	; 0x09
 c46:	c8 84       	ldd	r12, Y+8	; 0x08
 c48:	df 80       	ldd	r13, Y+7	; 0x07
 c4a:	ee 80       	ldd	r14, Y+6	; 0x06
 c4c:	fd 80       	ldd	r15, Y+5	; 0x05
 c4e:	0c 81       	ldd	r16, Y+4	; 0x04
 c50:	1b 81       	ldd	r17, Y+3	; 0x03
 c52:	aa 81       	ldd	r26, Y+2	; 0x02
 c54:	b9 81       	ldd	r27, Y+1	; 0x01
 c56:	ce 0f       	add	r28, r30
 c58:	d1 1d       	adc	r29, r1
 c5a:	0f b6       	in	r0, 0x3f	; 63
 c5c:	f8 94       	cli
 c5e:	de bf       	out	0x3e, r29	; 62
 c60:	0f be       	out	0x3f, r0	; 63
 c62:	cd bf       	out	0x3d, r28	; 61
 c64:	ed 01       	movw	r28, r26
 c66:	08 95       	ret

00000c68 <__udivmodsi4>:
 c68:	a1 e2       	ldi	r26, 0x21	; 33
 c6a:	1a 2e       	mov	r1, r26
 c6c:	aa 1b       	sub	r26, r26
 c6e:	bb 1b       	sub	r27, r27
 c70:	fd 01       	movw	r30, r26
 c72:	0d c0       	rjmp	.+26     	; 0xc8e <__udivmodsi4_ep>

00000c74 <__udivmodsi4_loop>:
 c74:	aa 1f       	adc	r26, r26
 c76:	bb 1f       	adc	r27, r27
 c78:	ee 1f       	adc	r30, r30
 c7a:	ff 1f       	adc	r31, r31
 c7c:	a2 17       	cp	r26, r18
 c7e:	b3 07       	cpc	r27, r19
 c80:	e4 07       	cpc	r30, r20
 c82:	f5 07       	cpc	r31, r21
 c84:	20 f0       	brcs	.+8      	; 0xc8e <__udivmodsi4_ep>
 c86:	a2 1b       	sub	r26, r18
 c88:	b3 0b       	sbc	r27, r19
 c8a:	e4 0b       	sbc	r30, r20
 c8c:	f5 0b       	sbc	r31, r21

00000c8e <__udivmodsi4_ep>:
 c8e:	66 1f       	adc	r22, r22
 c90:	77 1f       	adc	r23, r23
 c92:	88 1f       	adc	r24, r24
 c94:	99 1f       	adc	r25, r25
 c96:	1a 94       	dec	r1
 c98:	69 f7       	brne	.-38     	; 0xc74 <__udivmodsi4_loop>
 c9a:	60 95       	com	r22
 c9c:	70 95       	com	r23
 c9e:	80 95       	com	r24
 ca0:	90 95       	com	r25
 ca2:	9b 01       	movw	r18, r22
 ca4:	ac 01       	movw	r20, r24
 ca6:	bd 01       	movw	r22, r26
 ca8:	cf 01       	movw	r24, r30
 caa:	08 95       	ret

00000cac <__umulhisi3>:
 cac:	a2 9f       	mul	r26, r18
 cae:	b0 01       	movw	r22, r0
 cb0:	b3 9f       	mul	r27, r19
 cb2:	c0 01       	movw	r24, r0
 cb4:	a3 9f       	mul	r26, r19
 cb6:	70 0d       	add	r23, r0
 cb8:	81 1d       	adc	r24, r1
 cba:	11 24       	eor	r1, r1
 cbc:	91 1d       	adc	r25, r1
 cbe:	b2 9f       	mul	r27, r18
 cc0:	70 0d       	add	r23, r0
 cc2:	81 1d       	adc	r24, r1
 cc4:	11 24       	eor	r1, r1
 cc6:	91 1d       	adc	r25, r1
 cc8:	08 95       	ret

00000cca <_exit>:
 cca:	f8 94       	cli

00000ccc <__stop_program>:
 ccc:	ff cf       	rjmp	.-2      	; 0xccc <__stop_program>
