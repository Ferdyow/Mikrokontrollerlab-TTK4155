
microcontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002cc  00800100  000026b4  00002748  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000026b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000056  008003cc  008003cc  00002a14  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002a14  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000438  00000000  00000000  00002a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00004dca  00000000  00000000  00002ea8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001c11  00000000  00000000  00007c72  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000017c1  00000000  00000000  00009883  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000be8  00000000  00000000  0000b044  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000d1a  00000000  00000000  0000bc2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002b25  00000000  00000000  0000c946  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000370  00000000  00000000  0000f46b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e4 01 	jmp	0x3c8	; 0x3c8 <__ctors_end>
       4:	0c 94 89 02 	jmp	0x512	; 0x512 <__vector_1>
       8:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
       c:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      10:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      14:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      18:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      1c:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      20:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      24:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      28:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      2c:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      30:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      34:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      38:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      3c:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      40:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      44:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      48:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      4c:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      50:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      54:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      58:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      5c:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      60:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      64:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      68:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>
      6c:	0c 94 01 02 	jmp	0x402	; 0x402 <__bad_interrupt>

00000070 <LETTERS_BIG>:
      70:	30 31 32 33 34 35 36 37 38 39 21 3f 51 57 45 52     0123456789!?QWER
      80:	54 59 55 49 4f 50 29 2b 41 53 44 46 47 48 4a 4b     TYUIOP)+ASDFGHJK
      90:	4c 28 27 2d 5a 58 43 56 42 4e 4d 2c 2e 3b 3a 23     L('-ZXCVBNM,.;:#

000000a0 <LETTERS_SMALL>:
      a0:	30 31 32 33 34 35 36 37 38 39 21 3f 71 77 65 72     0123456789!?qwer
      b0:	74 79 75 69 6f 70 26 2b 61 73 64 66 67 68 6a 6b     tyuiop&+asdfghjk
      c0:	6c 25 24 2d 7a 78 63 76 62 6e 6d 2c 2e 3b 3a 23     l%$-zxcvbnm,.;:#

000000d0 <font8>:
	...
      d8:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
      e8:	14 7f 7f 14 7f 7f 14 00 20 54 54 38 54 54 58 00     ........ TT8TTX.
      f8:	38 64 54 54 4c 38 00 00 20 50 54 55 54 78 40 00     8dTTL8.. PTUTx@.
     108:	60 18 16 11 7f 49 49 00 5c 22 51 49 45 22 1d 00     `....II.\"QIE"..
     118:	60 30 28 25 28 30 60 00 08 2a 3e 1c 1c 3e 2a 08     `0(%(0`..*>..>*.
     128:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     138:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     148:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     158:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     168:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     178:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     188:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     198:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     1a8:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     1b8:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     1c8:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     1d8:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     1e8:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     1f8:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     208:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     218:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     228:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     238:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     248:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     258:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     268:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     278:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     288:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     298:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     2a8:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     2b8:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     2c8:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     2d8:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     2e8:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     2f8:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     308:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     318:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     328:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     338:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     348:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     358:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     368:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     378:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     388:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     398:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     3a8:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     3b8:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............

000003c8 <__ctors_end>:
     3c8:	11 24       	eor	r1, r1
     3ca:	1f be       	out	0x3f, r1	; 63
     3cc:	cf ef       	ldi	r28, 0xFF	; 255
     3ce:	d4 e0       	ldi	r29, 0x04	; 4
     3d0:	de bf       	out	0x3e, r29	; 62
     3d2:	cd bf       	out	0x3d, r28	; 61

000003d4 <__do_copy_data>:
     3d4:	13 e0       	ldi	r17, 0x03	; 3
     3d6:	a0 e0       	ldi	r26, 0x00	; 0
     3d8:	b1 e0       	ldi	r27, 0x01	; 1
     3da:	e4 eb       	ldi	r30, 0xB4	; 180
     3dc:	f6 e2       	ldi	r31, 0x26	; 38
     3de:	02 c0       	rjmp	.+4      	; 0x3e4 <__do_copy_data+0x10>
     3e0:	05 90       	lpm	r0, Z+
     3e2:	0d 92       	st	X+, r0
     3e4:	ac 3c       	cpi	r26, 0xCC	; 204
     3e6:	b1 07       	cpc	r27, r17
     3e8:	d9 f7       	brne	.-10     	; 0x3e0 <__do_copy_data+0xc>

000003ea <__do_clear_bss>:
     3ea:	24 e0       	ldi	r18, 0x04	; 4
     3ec:	ac ec       	ldi	r26, 0xCC	; 204
     3ee:	b3 e0       	ldi	r27, 0x03	; 3
     3f0:	01 c0       	rjmp	.+2      	; 0x3f4 <.do_clear_bss_start>

000003f2 <.do_clear_bss_loop>:
     3f2:	1d 92       	st	X+, r1

000003f4 <.do_clear_bss_start>:
     3f4:	a2 32       	cpi	r26, 0x22	; 34
     3f6:	b2 07       	cpc	r27, r18
     3f8:	e1 f7       	brne	.-8      	; 0x3f2 <.do_clear_bss_loop>
     3fa:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <main>
     3fe:	0c 94 58 13 	jmp	0x26b0	; 0x26b0 <_exit>

00000402 <__bad_interrupt>:
     402:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000406 <ADC_init>:
     406:	30 98       	cbi	0x06, 0	; 6
     408:	08 95       	ret

0000040a <ADC_read>:
     40a:	84 30       	cpi	r24, 0x04	; 4
     40c:	40 f4       	brcc	.+16     	; 0x41e <ADC_read+0x14>
     40e:	8c 5f       	subi	r24, 0xFC	; 252
     410:	80 93 00 14 	sts	0x1400, r24
     414:	28 99       	sbic	0x05, 0	; 5
     416:	fe cf       	rjmp	.-4      	; 0x414 <ADC_read+0xa>
     418:	80 91 00 14 	lds	r24, 0x1400
     41c:	08 95       	ret
     41e:	80 e0       	ldi	r24, 0x00	; 0
     420:	08 95       	ret

00000422 <brightness_init>:
     422:	0f 93       	push	r16
     424:	1f 93       	push	r17
     426:	cf 93       	push	r28
     428:	df 93       	push	r29
     42a:	0e 94 4b 0c 	call	0x1896	; 0x1896 <OLED_reset>
     42e:	89 e6       	ldi	r24, 0x69	; 105
     430:	91 e0       	ldi	r25, 0x01	; 1
     432:	9f 93       	push	r25
     434:	8f 93       	push	r24
     436:	03 e7       	ldi	r16, 0x73	; 115
     438:	11 e0       	ldi	r17, 0x01	; 1
     43a:	1f 93       	push	r17
     43c:	0f 93       	push	r16
     43e:	c6 e0       	ldi	r28, 0x06	; 6
     440:	d1 e0       	ldi	r29, 0x01	; 1
     442:	df 93       	push	r29
     444:	cf 93       	push	r28
     446:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
     44a:	60 e0       	ldi	r22, 0x00	; 0
     44c:	81 e0       	ldi	r24, 0x01	; 1
     44e:	0e 94 1c 0c 	call	0x1838	; 0x1838 <OLED_pos>
     452:	87 e7       	ldi	r24, 0x77	; 119
     454:	91 e0       	ldi	r25, 0x01	; 1
     456:	9f 93       	push	r25
     458:	8f 93       	push	r24
     45a:	1f 93       	push	r17
     45c:	0f 93       	push	r16
     45e:	df 93       	push	r29
     460:	cf 93       	push	r28
     462:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
     466:	60 e0       	ldi	r22, 0x00	; 0
     468:	82 e0       	ldi	r24, 0x02	; 2
     46a:	0e 94 1c 0c 	call	0x1838	; 0x1838 <OLED_pos>
     46e:	87 e8       	ldi	r24, 0x87	; 135
     470:	91 e0       	ldi	r25, 0x01	; 1
     472:	9f 93       	push	r25
     474:	8f 93       	push	r24
     476:	1f 93       	push	r17
     478:	0f 93       	push	r16
     47a:	df 93       	push	r29
     47c:	cf 93       	push	r28
     47e:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
     482:	84 e0       	ldi	r24, 0x04	; 4
     484:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <OLED_set_line>
     488:	85 e0       	ldi	r24, 0x05	; 5
     48a:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <OLED_set_line>
     48e:	86 e0       	ldi	r24, 0x06	; 6
     490:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <OLED_set_line>
     494:	87 e0       	ldi	r24, 0x07	; 7
     496:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <OLED_set_line>
     49a:	8d b7       	in	r24, 0x3d	; 61
     49c:	9e b7       	in	r25, 0x3e	; 62
     49e:	42 96       	adiw	r24, 0x12	; 18
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	f8 94       	cli
     4a4:	9e bf       	out	0x3e, r25	; 62
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	8d bf       	out	0x3d, r24	; 61
     4aa:	df 91       	pop	r29
     4ac:	cf 91       	pop	r28
     4ae:	1f 91       	pop	r17
     4b0:	0f 91       	pop	r16
     4b2:	08 95       	ret

000004b4 <brightness_run>:
     4b4:	0e 94 11 02 	call	0x422	; 0x422 <brightness_init>
     4b8:	05 c0       	rjmp	.+10     	; 0x4c4 <brightness_run+0x10>
     4ba:	0e 94 1f 06 	call	0xc3e	; 0xc3e <SLI_getPosition>
     4be:	86 2f       	mov	r24, r22
     4c0:	0e 94 ab 0c 	call	0x1956	; 0x1956 <OLED_set_brightness>
     4c4:	80 e0       	ldi	r24, 0x00	; 0
     4c6:	0e 94 a3 05 	call	0xb46	; 0xb46 <JOY_button_pressed>
     4ca:	89 2b       	or	r24, r25
     4cc:	b1 f3       	breq	.-20     	; 0x4ba <brightness_run+0x6>
     4ce:	08 95       	ret

000004d0 <CAN_int_vect>:
ISR(INT0_vect){
	CAN_int_vect();
}


void CAN_int_vect() {
     4d0:	cf 93       	push	r28
	uint8_t int_flags = MCP2515_read(MCP_CANINTF);
     4d2:	8c e2       	ldi	r24, 0x2C	; 44
     4d4:	0e 94 00 0a 	call	0x1400	; 0x1400 <MCP2515_read>
     4d8:	c8 2f       	mov	r28, r24
	if(int_flags & MCP_RX0IF){
     4da:	80 ff       	sbrs	r24, 0
     4dc:	0b c0       	rjmp	.+22     	; 0x4f4 <CAN_int_vect+0x24>
		MCP2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
     4de:	40 e0       	ldi	r20, 0x00	; 0
     4e0:	61 e0       	ldi	r22, 0x01	; 1
     4e2:	8c e2       	ldi	r24, 0x2C	; 44
     4e4:	0e 94 32 0a 	call	0x1464	; 0x1464 <MCP2515_bit_modify>
		flag_RX0 = 1;
     4e8:	21 e0       	ldi	r18, 0x01	; 1
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	30 93 cf 03 	sts	0x03CF, r19
     4f0:	20 93 ce 03 	sts	0x03CE, r18
	}
			
	if(int_flags & MCP_RX1IF){
     4f4:	c1 ff       	sbrs	r28, 1
     4f6:	0b c0       	rjmp	.+22     	; 0x50e <__stack+0xf>
		MCP2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
     4f8:	40 e0       	ldi	r20, 0x00	; 0
     4fa:	62 e0       	ldi	r22, 0x02	; 2
     4fc:	8c e2       	ldi	r24, 0x2C	; 44
     4fe:	0e 94 32 0a 	call	0x1464	; 0x1464 <MCP2515_bit_modify>
		flag_RX1 = 1;
     502:	81 e0       	ldi	r24, 0x01	; 1
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	90 93 cd 03 	sts	0x03CD, r25
     50a:	80 93 cc 03 	sts	0x03CC, r24
	}
}
     50e:	cf 91       	pop	r28
     510:	08 95       	ret

00000512 <__vector_1>:

volatile int flag_RX0 = 0;
volatile int flag_RX1 = 0;

//interrupt service routine
ISR(INT0_vect){
     512:	1f 92       	push	r1
     514:	0f 92       	push	r0
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	0f 92       	push	r0
     51a:	11 24       	eor	r1, r1
     51c:	2f 93       	push	r18
     51e:	3f 93       	push	r19
     520:	4f 93       	push	r20
     522:	5f 93       	push	r21
     524:	6f 93       	push	r22
     526:	7f 93       	push	r23
     528:	8f 93       	push	r24
     52a:	9f 93       	push	r25
     52c:	af 93       	push	r26
     52e:	bf 93       	push	r27
     530:	ef 93       	push	r30
     532:	ff 93       	push	r31
	CAN_int_vect();
     534:	0e 94 68 02 	call	0x4d0	; 0x4d0 <CAN_int_vect>
}
     538:	ff 91       	pop	r31
     53a:	ef 91       	pop	r30
     53c:	bf 91       	pop	r27
     53e:	af 91       	pop	r26
     540:	9f 91       	pop	r25
     542:	8f 91       	pop	r24
     544:	7f 91       	pop	r23
     546:	6f 91       	pop	r22
     548:	5f 91       	pop	r21
     54a:	4f 91       	pop	r20
     54c:	3f 91       	pop	r19
     54e:	2f 91       	pop	r18
     550:	0f 90       	pop	r0
     552:	0f be       	out	0x3f, r0	; 63
     554:	0f 90       	pop	r0
     556:	1f 90       	pop	r1
     558:	18 95       	reti

0000055a <CAN_init>:
//hex to binary is left as an exercise to the reader :)
void CAN_init() {
	
	//enable external interrupt on ATmega162
	//enable interrupt on MCP2515
	MCP2515_init();
     55a:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <MCP2515_init>
	
	//enable rollover: message will rollover to RX1 if RX0 is full
	//also sets filter for RXB0 to only accept all transmission
	MCP2515_bit_modify(MCP_RXB0CTRL, 0x64, 0xFF);  //0b 0010 0100
     55e:	4f ef       	ldi	r20, 0xFF	; 255
     560:	64 e6       	ldi	r22, 0x64	; 100
     562:	80 e6       	ldi	r24, 0x60	; 96
     564:	0e 94 32 0a 	call	0x1464	; 0x1464 <MCP2515_bit_modify>

	
	//set filter for RXB1 to accept all transmission
	MCP2515_bit_modify(MCP_RXB1CTRL, 0x60, 0xFF);
     568:	4f ef       	ldi	r20, 0xFF	; 255
     56a:	60 e6       	ldi	r22, 0x60	; 96
     56c:	80 e7       	ldi	r24, 0x70	; 112
     56e:	0e 94 32 0a 	call	0x1464	; 0x1464 <MCP2515_bit_modify>
	

	//CANINTE contains the interrupt enable bits for each individual interrupt
	//CANINTF cointains the interrupt flags for each interrupt source. this should be cleared by a bit_modify
	
	MCP2515_bit_modify(MCP_CANINTE,0x03, 0x03);
     572:	43 e0       	ldi	r20, 0x03	; 3
     574:	63 e0       	ldi	r22, 0x03	; 3
     576:	8b e2       	ldi	r24, 0x2B	; 43
     578:	0e 94 32 0a 	call	0x1464	; 0x1464 <MCP2515_bit_modify>
	//interrupts for RX1, RX0 enabled
	
	//set loopback mode: 0x40
	//later use normal mode 0x00
	MCP2515_bit_modify(MCP_CANCTRL,0xE0, 0x00);
     57c:	40 e0       	ldi	r20, 0x00	; 0
     57e:	60 ee       	ldi	r22, 0xE0	; 224
     580:	8f e0       	ldi	r24, 0x0F	; 15
     582:	0e 94 32 0a 	call	0x1464	; 0x1464 <MCP2515_bit_modify>
     586:	08 95       	ret

00000588 <CAN_message_send>:
	
	

}

void CAN_message_send(can_message* msg) {
     588:	0f 93       	push	r16
     58a:	1f 93       	push	r17
     58c:	cf 93       	push	r28
     58e:	df 93       	push	r29
     590:	ec 01       	movw	r28, r24
	//transmit is done using the TX registers, have to check which transmit_buffer_register we are writing from 
	uint8_t buffer_numb = 0; //Not sure how this logic is done yet


	//transmit the correct ID
	uint8_t id_high = msg->id / 8;
     592:	08 81       	ld	r16, Y
     594:	19 81       	ldd	r17, Y+1	; 0x01
     596:	b8 01       	movw	r22, r16
     598:	76 95       	lsr	r23
     59a:	67 95       	ror	r22
     59c:	76 95       	lsr	r23
     59e:	67 95       	ror	r22
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
	uint8_t id_low = msg->id % 8;

	MCP2515_write(MCP_TXB0SIDH + BUFFER_LENGTH * buffer_numb, id_high);
     5a4:	81 e3       	ldi	r24, 0x31	; 49
     5a6:	0e 94 12 0a 	call	0x1424	; 0x1424 <MCP2515_write>
	MCP2515_write(MCP_TXB0SIDL + BUFFER_LENGTH * buffer_numb, (id_low << 5));
     5aa:	60 2f       	mov	r22, r16
     5ac:	62 95       	swap	r22
     5ae:	66 0f       	add	r22, r22
     5b0:	60 7e       	andi	r22, 0xE0	; 224
     5b2:	82 e3       	ldi	r24, 0x32	; 50
     5b4:	0e 94 12 0a 	call	0x1424	; 0x1424 <MCP2515_write>
	//resten av TXB0SIDL er 0 siden vi har standard identifier

	//transmit the data length
	MCP2515_write(MCP_TXB0DLC + BUFFER_LENGTH * buffer_numb, msg->length);
     5b8:	6a 81       	ldd	r22, Y+2	; 0x02
     5ba:	85 e3       	ldi	r24, 0x35	; 53
     5bc:	0e 94 12 0a 	call	0x1424	; 0x1424 <MCP2515_write>

	//transmit the data
	for (uint8_t byte = 0; byte < msg->length; byte++) {
     5c0:	8a 81       	ldd	r24, Y+2	; 0x02
     5c2:	88 23       	and	r24, r24
     5c4:	69 f0       	breq	.+26     	; 0x5e0 <CAN_message_send+0x58>
     5c6:	10 e0       	ldi	r17, 0x00	; 0
		MCP2515_write((MCP_TXB0D0 + byte) + BUFFER_LENGTH * buffer_numb, msg->data[byte]);
     5c8:	fe 01       	movw	r30, r28
     5ca:	e1 0f       	add	r30, r17
     5cc:	f1 1d       	adc	r31, r1
     5ce:	63 81       	ldd	r22, Z+3	; 0x03
     5d0:	86 e3       	ldi	r24, 0x36	; 54
     5d2:	81 0f       	add	r24, r17
     5d4:	0e 94 12 0a 	call	0x1424	; 0x1424 <MCP2515_write>

	//transmit the data length
	MCP2515_write(MCP_TXB0DLC + BUFFER_LENGTH * buffer_numb, msg->length);

	//transmit the data
	for (uint8_t byte = 0; byte < msg->length; byte++) {
     5d8:	1f 5f       	subi	r17, 0xFF	; 255
     5da:	8a 81       	ldd	r24, Y+2	; 0x02
     5dc:	18 17       	cp	r17, r24
     5de:	a0 f3       	brcs	.-24     	; 0x5c8 <CAN_message_send+0x40>
		MCP2515_write((MCP_TXB0D0 + byte) + BUFFER_LENGTH * buffer_numb, msg->data[byte]);
	}
	
	uint8_t buffer_states = (uint8_t)(1 << buffer_numb);
	MCP2515_request_to_send(buffer_states);
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	0e 94 26 0a 	call	0x144c	; 0x144c <MCP2515_request_to_send>
	
	
}
     5e6:	df 91       	pop	r29
     5e8:	cf 91       	pop	r28
     5ea:	1f 91       	pop	r17
     5ec:	0f 91       	pop	r16
     5ee:	08 95       	ret

000005f0 <CAN_transmit_complete>:
	//}
}


bool CAN_transmit_complete(int transmit_buffer_index) {
	const int address = MCP_TXB0CTRL + BUFFER_LENGTH * transmit_buffer_index;
     5f0:	03 96       	adiw	r24, 0x03	; 3
	return !(MCP2515_read(address) & MCP_TXREQ);
     5f2:	82 95       	swap	r24
     5f4:	80 7f       	andi	r24, 0xF0	; 240
     5f6:	0e 94 00 0a 	call	0x1400	; 0x1400 <MCP2515_read>
     5fa:	83 fb       	bst	r24, 3
     5fc:	88 27       	eor	r24, r24
     5fe:	80 f9       	bld	r24, 0
}
     600:	91 e0       	ldi	r25, 0x01	; 1
     602:	89 27       	eor	r24, r25
     604:	08 95       	ret

00000606 <CAN_message_receive>:


void CAN_message_receive(can_message* received_msg){
     606:	df 92       	push	r13
     608:	ef 92       	push	r14
     60a:	ff 92       	push	r15
     60c:	0f 93       	push	r16
     60e:	1f 93       	push	r17
     610:	cf 93       	push	r28
     612:	df 93       	push	r29
     614:	8c 01       	movw	r16, r24
	cli();
     616:	f8 94       	cli
	int receive_buffer_index;
	if(flag_RX0){
     618:	80 91 ce 03 	lds	r24, 0x03CE
     61c:	90 91 cf 03 	lds	r25, 0x03CF
     620:	89 2b       	or	r24, r25
     622:	39 f0       	breq	.+14     	; 0x632 <CAN_message_receive+0x2c>
		receive_buffer_index = 0;
		flag_RX0 = 0;
     624:	10 92 cf 03 	sts	0x03CF, r1
     628:	10 92 ce 03 	sts	0x03CE, r1

void CAN_message_receive(can_message* received_msg){
	cli();
	int receive_buffer_index;
	if(flag_RX0){
		receive_buffer_index = 0;
     62c:	c0 e0       	ldi	r28, 0x00	; 0
     62e:	d0 e0       	ldi	r29, 0x00	; 0
     630:	11 c0       	rjmp	.+34     	; 0x654 <CAN_message_receive+0x4e>
		flag_RX0 = 0;
	}
	else if(flag_RX1){
     632:	80 91 cc 03 	lds	r24, 0x03CC
     636:	90 91 cd 03 	lds	r25, 0x03CD
     63a:	89 2b       	or	r24, r25
     63c:	39 f0       	breq	.+14     	; 0x64c <CAN_message_receive+0x46>
		receive_buffer_index = 1;
		flag_RX1 = 0;
     63e:	10 92 cd 03 	sts	0x03CD, r1
     642:	10 92 cc 03 	sts	0x03CC, r1
	if(flag_RX0){
		receive_buffer_index = 0;
		flag_RX0 = 0;
	}
	else if(flag_RX1){
		receive_buffer_index = 1;
     646:	c1 e0       	ldi	r28, 0x01	; 1
     648:	d0 e0       	ldi	r29, 0x00	; 0
     64a:	04 c0       	rjmp	.+8      	; 0x654 <CAN_message_receive+0x4e>
		flag_RX1 = 0;
	}
	else{
		received_msg->length = 0;
     64c:	f8 01       	movw	r30, r16
     64e:	12 82       	std	Z+2, r1	; 0x02
		sei();
     650:	78 94       	sei
		return;
     652:	42 c0       	rjmp	.+132    	; 0x6d8 <CAN_message_receive+0xd2>
	}
	
	uint8_t id_high = MCP2515_read(MCP_RXB0SIDH + BUFFER_LENGTH * receive_buffer_index);
     654:	fc 2e       	mov	r15, r28
     656:	ff 0c       	add	r15, r15
     658:	ff 0c       	add	r15, r15
     65a:	ff 0c       	add	r15, r15
     65c:	ff 0c       	add	r15, r15
     65e:	81 e6       	ldi	r24, 0x61	; 97
     660:	8f 0d       	add	r24, r15
     662:	0e 94 00 0a 	call	0x1400	; 0x1400 <MCP2515_read>
     666:	e8 2e       	mov	r14, r24
	uint8_t id_low = MCP2515_read(MCP_RXB0SIDL + BUFFER_LENGTH * receive_buffer_index);
     668:	82 e6       	ldi	r24, 0x62	; 98
     66a:	8f 0d       	add	r24, r15
     66c:	0e 94 00 0a 	call	0x1400	; 0x1400 <MCP2515_read>
	/*
		id_low:	    X XXXX LLL
		id_high: HHHH HHHH
		id:		 HHHH HHHH LLL
	*/
	received_msg->id = (id_high << 3) + id_low; 
     670:	2e 2d       	mov	r18, r14
     672:	30 e0       	ldi	r19, 0x00	; 0
     674:	22 0f       	add	r18, r18
     676:	33 1f       	adc	r19, r19
     678:	22 0f       	add	r18, r18
     67a:	33 1f       	adc	r19, r19
     67c:	22 0f       	add	r18, r18
     67e:	33 1f       	adc	r19, r19
	
	uint8_t id_high = MCP2515_read(MCP_RXB0SIDH + BUFFER_LENGTH * receive_buffer_index);
	uint8_t id_low = MCP2515_read(MCP_RXB0SIDL + BUFFER_LENGTH * receive_buffer_index);
	
	//only want the last 3 bits
	id_low = id_low >> 5;
     680:	82 95       	swap	r24
     682:	86 95       	lsr	r24
     684:	87 70       	andi	r24, 0x07	; 7
	/*
		id_low:	    X XXXX LLL
		id_high: HHHH HHHH
		id:		 HHHH HHHH LLL
	*/
	received_msg->id = (id_high << 3) + id_low; 
     686:	28 0f       	add	r18, r24
     688:	31 1d       	adc	r19, r1
     68a:	f8 01       	movw	r30, r16
     68c:	31 83       	std	Z+1, r19	; 0x01
     68e:	20 83       	st	Z, r18
	
	//read the data length contained in the last 3 bits of the RXBnDLC register
	received_msg->length = (MCP2515_read(MCP_RXB0DLC + BUFFER_LENGTH * receive_buffer_index) % (1<<3));
     690:	85 e6       	ldi	r24, 0x65	; 101
     692:	8f 0d       	add	r24, r15
     694:	0e 94 00 0a 	call	0x1400	; 0x1400 <MCP2515_read>
     698:	87 70       	andi	r24, 0x07	; 7
     69a:	f8 01       	movw	r30, r16
     69c:	82 83       	std	Z+2, r24	; 0x02
	
	//read the data
	for (uint8_t byte = 0; byte < received_msg->length; byte++){
     69e:	88 23       	and	r24, r24
     6a0:	d1 f0       	breq	.+52     	; 0x6d6 <CAN_message_receive+0xd0>
		int address = (MCP_RXB0D0 + byte) + BUFFER_LENGTH * receive_buffer_index;
     6a2:	7e 01       	movw	r14, r28
     6a4:	ee 0c       	add	r14, r14
     6a6:	ff 1c       	adc	r15, r15
     6a8:	ee 0c       	add	r14, r14
     6aa:	ff 1c       	adc	r15, r15
     6ac:	ee 0c       	add	r14, r14
     6ae:	ff 1c       	adc	r15, r15
     6b0:	ee 0c       	add	r14, r14
     6b2:	ff 1c       	adc	r15, r15
	
	//read the data length contained in the last 3 bits of the RXBnDLC register
	received_msg->length = (MCP2515_read(MCP_RXB0DLC + BUFFER_LENGTH * receive_buffer_index) % (1<<3));
	
	//read the data
	for (uint8_t byte = 0; byte < received_msg->length; byte++){
     6b4:	d1 2c       	mov	r13, r1
		int address = (MCP_RXB0D0 + byte) + BUFFER_LENGTH * receive_buffer_index;
     6b6:	cd 2d       	mov	r28, r13
     6b8:	d0 e0       	ldi	r29, 0x00	; 0
     6ba:	ce 01       	movw	r24, r28
     6bc:	8a 59       	subi	r24, 0x9A	; 154
     6be:	9f 4f       	sbci	r25, 0xFF	; 255
		received_msg->data[byte] = MCP2515_read(address);
     6c0:	8e 0d       	add	r24, r14
     6c2:	0e 94 00 0a 	call	0x1400	; 0x1400 <MCP2515_read>
     6c6:	c0 0f       	add	r28, r16
     6c8:	d1 1f       	adc	r29, r17
     6ca:	8b 83       	std	Y+3, r24	; 0x03
	
	//read the data length contained in the last 3 bits of the RXBnDLC register
	received_msg->length = (MCP2515_read(MCP_RXB0DLC + BUFFER_LENGTH * receive_buffer_index) % (1<<3));
	
	//read the data
	for (uint8_t byte = 0; byte < received_msg->length; byte++){
     6cc:	d3 94       	inc	r13
     6ce:	f8 01       	movw	r30, r16
     6d0:	82 81       	ldd	r24, Z+2	; 0x02
     6d2:	d8 16       	cp	r13, r24
     6d4:	80 f3       	brcs	.-32     	; 0x6b6 <CAN_message_receive+0xb0>
		int address = (MCP_RXB0D0 + byte) + BUFFER_LENGTH * receive_buffer_index;
		received_msg->data[byte] = MCP2515_read(address);
	}

	sei();
     6d6:	78 94       	sei
}
     6d8:	df 91       	pop	r29
     6da:	cf 91       	pop	r28
     6dc:	1f 91       	pop	r17
     6de:	0f 91       	pop	r16
     6e0:	ff 90       	pop	r15
     6e2:	ef 90       	pop	r14
     6e4:	df 90       	pop	r13
     6e6:	08 95       	ret

000006e8 <send_control_input>:
		send_control_input();
		receive_score();
	}
}

void send_control_input(void) {
     6e8:	ff 92       	push	r15
     6ea:	0f 93       	push	r16
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	cd b7       	in	r28, 0x3d	; 61
     6f4:	de b7       	in	r29, 0x3e	; 62
     6f6:	2b 97       	sbiw	r28, 0x0b	; 11
     6f8:	0f b6       	in	r0, 0x3f	; 63
     6fa:	f8 94       	cli
     6fc:	de bf       	out	0x3e, r29	; 62
     6fe:	0f be       	out	0x3f, r0	; 63
     700:	cd bf       	out	0x3d, r28	; 61
	can_message control_input;
	control_input.id = 0;
     702:	1a 82       	std	Y+2, r1	; 0x02
     704:	19 82       	std	Y+1, r1	; 0x01
	control_input.length = 5;
     706:	85 e0       	ldi	r24, 0x05	; 5
     708:	8b 83       	std	Y+3, r24	; 0x03
	
	//printf("[joy_position]\n");
	JOY_position_t joy_position = JOY_getPosition();
     70a:	0e 94 bd 05 	call	0xb7a	; 0xb7a <JOY_getPosition>
	control_input.data[JOYSTICK_X] = joy_position.x;
     70e:	6c 83       	std	Y+4, r22	; 0x04
	control_input.data[JOYSTICK_Y] = joy_position.y;
     710:	8d 83       	std	Y+5, r24	; 0x05
	
	//printf("[sli_position]\n");
	SLI_position_t sli_position = SLI_getPosition();
     712:	0e 94 1f 06 	call	0xc3e	; 0xc3e <SLI_getPosition>
	control_input.data[SLIDER_LEFT] = sli_position.left;
     716:	6e 83       	std	Y+6, r22	; 0x06
	control_input.data[SLIDER_RIGHT] = sli_position.right;
     718:	8f 83       	std	Y+7, r24	; 0x07
	
	//printf("[BUTTONS]\n");
	int joy_button = JOY_button_pressed(JOY_BUTTON) << JOY_BUTTON;
     71a:	82 e0       	ldi	r24, 0x02	; 2
     71c:	0e 94 a3 05 	call	0xb46	; 0xb46 <JOY_button_pressed>
     720:	8c 01       	movw	r16, r24
	int left_button = JOY_button_pressed(LEFT_BUTTON) << LEFT_BUTTON;
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	0e 94 a3 05 	call	0xb46	; 0xb46 <JOY_button_pressed>
     728:	f8 2e       	mov	r15, r24
	int right_button = JOY_button_pressed(RIGHT_BUTTON) << RIGHT_BUTTON;
     72a:	81 e0       	ldi	r24, 0x01	; 1
     72c:	0e 94 a3 05 	call	0xb46	; 0xb46 <JOY_button_pressed>
	SLI_position_t sli_position = SLI_getPosition();
	control_input.data[SLIDER_LEFT] = sli_position.left;
	control_input.data[SLIDER_RIGHT] = sli_position.right;
	
	//printf("[BUTTONS]\n");
	int joy_button = JOY_button_pressed(JOY_BUTTON) << JOY_BUTTON;
     730:	00 0f       	add	r16, r16
     732:	11 1f       	adc	r17, r17
     734:	00 0f       	add	r16, r16
     736:	11 1f       	adc	r17, r17
	int left_button = JOY_button_pressed(LEFT_BUTTON) << LEFT_BUTTON;
	int right_button = JOY_button_pressed(RIGHT_BUTTON) << RIGHT_BUTTON;
     738:	88 0f       	add	r24, r24
     73a:	99 1f       	adc	r25, r25
	control_input.data[BUTTONS] = joy_button | left_button | right_button;
     73c:	08 2b       	or	r16, r24
     73e:	f0 2a       	or	r15, r16
     740:	f8 86       	std	Y+8, r15	; 0x08
	
	printf("[a]\n");
     742:	86 e9       	ldi	r24, 0x96	; 150
     744:	91 e0       	ldi	r25, 0x01	; 1
     746:	0e 94 8b 10 	call	0x2116	; 0x2116 <puts>
	CAN_message_send(&control_input);
     74a:	ce 01       	movw	r24, r28
     74c:	01 96       	adiw	r24, 0x01	; 1
     74e:	0e 94 c4 02 	call	0x588	; 0x588 <CAN_message_send>
	printf("[b]\n");
     752:	8a e9       	ldi	r24, 0x9A	; 154
     754:	91 e0       	ldi	r25, 0x01	; 1
     756:	0e 94 8b 10 	call	0x2116	; 0x2116 <puts>
	while(!CAN_transmit_complete(TB0));
     75a:	80 e0       	ldi	r24, 0x00	; 0
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <CAN_transmit_complete>
     762:	88 23       	and	r24, r24
     764:	d1 f3       	breq	.-12     	; 0x75a <send_control_input+0x72>
	printf("[c]\n");
     766:	8e e9       	ldi	r24, 0x9E	; 158
     768:	91 e0       	ldi	r25, 0x01	; 1
     76a:	0e 94 8b 10 	call	0x2116	; 0x2116 <puts>
}
     76e:	2b 96       	adiw	r28, 0x0b	; 11
     770:	0f b6       	in	r0, 0x3f	; 63
     772:	f8 94       	cli
     774:	de bf       	out	0x3e, r29	; 62
     776:	0f be       	out	0x3f, r0	; 63
     778:	cd bf       	out	0x3d, r28	; 61
     77a:	df 91       	pop	r29
     77c:	cf 91       	pop	r28
     77e:	1f 91       	pop	r17
     780:	0f 91       	pop	r16
     782:	ff 90       	pop	r15
     784:	08 95       	ret

00000786 <receive_score>:

void receive_score(void){
     786:	0f 93       	push	r16
     788:	1f 93       	push	r17
     78a:	cf 93       	push	r28
     78c:	df 93       	push	r29
     78e:	cd b7       	in	r28, 0x3d	; 61
     790:	de b7       	in	r29, 0x3e	; 62
     792:	2b 97       	sbiw	r28, 0x0b	; 11
     794:	0f b6       	in	r0, 0x3f	; 63
     796:	f8 94       	cli
     798:	de bf       	out	0x3e, r29	; 62
     79a:	0f be       	out	0x3f, r0	; 63
     79c:	cd bf       	out	0x3d, r28	; 61
	can_message score_message;
	score_message.length = 0;
     79e:	1b 82       	std	Y+3, r1	; 0x03
	
	CAN_message_receive(&score_message);
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	0e 94 03 03 	call	0x606	; 0x606 <CAN_message_receive>
	//printf("score msg 0: %d \tscore msg 1: %d\n", score_message.data[0], score_message.data[1]);
	if(score_message.length){
     7a8:	8b 81       	ldd	r24, Y+3	; 0x03
     7aa:	88 23       	and	r24, r24
     7ac:	09 f4       	brne	.+2      	; 0x7b0 <receive_score+0x2a>
     7ae:	5c c0       	rjmp	.+184    	; 0x868 <receive_score+0xe2>
	score = ((uint8_t)(score_message.data[0]) << 8) |(uint8_t) score_message.data[1];
     7b0:	8c 81       	ldd	r24, Y+4	; 0x04
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	98 2f       	mov	r25, r24
     7b6:	88 27       	eor	r24, r24
     7b8:	2d 81       	ldd	r18, Y+5	; 0x05
     7ba:	82 2b       	or	r24, r18
     7bc:	90 93 d3 03 	sts	0x03D3, r25
     7c0:	80 93 d2 03 	sts	0x03D2, r24
	if (score > highscore){
     7c4:	20 91 d2 03 	lds	r18, 0x03D2
     7c8:	30 91 d3 03 	lds	r19, 0x03D3
     7cc:	80 91 d0 03 	lds	r24, 0x03D0
     7d0:	90 91 d1 03 	lds	r25, 0x03D1
     7d4:	82 17       	cp	r24, r18
     7d6:	93 07       	cpc	r25, r19
     7d8:	44 f4       	brge	.+16     	; 0x7ea <receive_score+0x64>
		highscore = score;
     7da:	80 91 d2 03 	lds	r24, 0x03D2
     7de:	90 91 d3 03 	lds	r25, 0x03D3
     7e2:	90 93 d1 03 	sts	0x03D1, r25
     7e6:	80 93 d0 03 	sts	0x03D0, r24
	}
	OLED_reset_cursor();
     7ea:	0e 94 2e 0c 	call	0x185c	; 0x185c <OLED_reset_cursor>
	printf("seconds %d.%d\n", score/10, score%10);
     7ee:	80 91 d2 03 	lds	r24, 0x03D2
     7f2:	90 91 d3 03 	lds	r25, 0x03D3
     7f6:	20 91 d2 03 	lds	r18, 0x03D2
     7fa:	30 91 d3 03 	lds	r19, 0x03D3
     7fe:	0a e0       	ldi	r16, 0x0A	; 10
     800:	10 e0       	ldi	r17, 0x00	; 0
     802:	b8 01       	movw	r22, r16
     804:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__divmodhi4>
     808:	9f 93       	push	r25
     80a:	8f 93       	push	r24
     80c:	c9 01       	movw	r24, r18
     80e:	b8 01       	movw	r22, r16
     810:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__divmodhi4>
     814:	7f 93       	push	r23
     816:	6f 93       	push	r22
     818:	82 ea       	ldi	r24, 0xA2	; 162
     81a:	91 e0       	ldi	r25, 0x01	; 1
     81c:	9f 93       	push	r25
     81e:	8f 93       	push	r24
     820:	0e 94 77 10 	call	0x20ee	; 0x20ee <printf>
	fprintf(OLED, "time: %d.%d    ", score/10, score%10);
     824:	80 91 d2 03 	lds	r24, 0x03D2
     828:	90 91 d3 03 	lds	r25, 0x03D3
     82c:	20 91 d2 03 	lds	r18, 0x03D2
     830:	30 91 d3 03 	lds	r19, 0x03D3
     834:	b8 01       	movw	r22, r16
     836:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__divmodhi4>
     83a:	9f 93       	push	r25
     83c:	8f 93       	push	r24
     83e:	c9 01       	movw	r24, r18
     840:	b8 01       	movw	r22, r16
     842:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__divmodhi4>
     846:	7f 93       	push	r23
     848:	6f 93       	push	r22
     84a:	81 eb       	ldi	r24, 0xB1	; 177
     84c:	91 e0       	ldi	r25, 0x01	; 1
     84e:	9f 93       	push	r25
     850:	8f 93       	push	r24
     852:	84 e1       	ldi	r24, 0x14	; 20
     854:	91 e0       	ldi	r25, 0x01	; 1
     856:	9f 93       	push	r25
     858:	8f 93       	push	r24
     85a:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
     85e:	0f b6       	in	r0, 0x3f	; 63
     860:	f8 94       	cli
     862:	de bf       	out	0x3e, r29	; 62
     864:	0f be       	out	0x3f, r0	; 63
     866:	cd bf       	out	0x3d, r28	; 61
	
	//int ir_disrupted = score_message.data[2];
	//if(ir_disrupted){
	//	set_highscore();
	//}
}
     868:	2b 96       	adiw	r28, 0x0b	; 11
     86a:	0f b6       	in	r0, 0x3f	; 63
     86c:	f8 94       	cli
     86e:	de bf       	out	0x3e, r29	; 62
     870:	0f be       	out	0x3f, r0	; 63
     872:	cd bf       	out	0x3d, r28	; 61
     874:	df 91       	pop	r29
     876:	cf 91       	pop	r28
     878:	1f 91       	pop	r17
     87a:	0f 91       	pop	r16
     87c:	08 95       	ret

0000087e <game_play>:
volatile int highscore = 0;

void send_control_input(void);
void receive_score(void);

void game_play() {
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
	OLED_reset();
     882:	0e 94 4b 0c 	call	0x1896	; 0x1896 <OLED_reset>
	fprintf(OLED, "\n\n%s \n", "lButton: quit");
     886:	81 ec       	ldi	r24, 0xC1	; 193
     888:	91 e0       	ldi	r25, 0x01	; 1
     88a:	9f 93       	push	r25
     88c:	8f 93       	push	r24
     88e:	8f ec       	ldi	r24, 0xCF	; 207
     890:	91 e0       	ldi	r25, 0x01	; 1
     892:	9f 93       	push	r25
     894:	8f 93       	push	r24
     896:	c4 e1       	ldi	r28, 0x14	; 20
     898:	d1 e0       	ldi	r29, 0x01	; 1
     89a:	df 93       	push	r29
     89c:	cf 93       	push	r28
     89e:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
	fprintf(OLED, "%s \n", "jButton: shoot");
     8a2:	86 ed       	ldi	r24, 0xD6	; 214
     8a4:	91 e0       	ldi	r25, 0x01	; 1
     8a6:	9f 93       	push	r25
     8a8:	8f 93       	push	r24
     8aa:	81 ed       	ldi	r24, 0xD1	; 209
     8ac:	91 e0       	ldi	r25, 0x01	; 1
     8ae:	9f 93       	push	r25
     8b0:	8f 93       	push	r24
     8b2:	df 93       	push	r29
     8b4:	cf 93       	push	r28
     8b6:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8ba:	8f ef       	ldi	r24, 0xFF	; 255
     8bc:	9f e7       	ldi	r25, 0x7F	; 127
     8be:	27 e0       	ldi	r18, 0x07	; 7
     8c0:	81 50       	subi	r24, 0x01	; 1
     8c2:	90 40       	sbci	r25, 0x00	; 0
     8c4:	20 40       	sbci	r18, 0x00	; 0
     8c6:	e1 f7       	brne	.-8      	; 0x8c0 <game_play+0x42>
     8c8:	00 c0       	rjmp	.+0      	; 0x8ca <game_play+0x4c>
     8ca:	00 00       	nop
     8cc:	8d b7       	in	r24, 0x3d	; 61
     8ce:	9e b7       	in	r25, 0x3e	; 62
     8d0:	0c 96       	adiw	r24, 0x0c	; 12
     8d2:	0f b6       	in	r0, 0x3f	; 63
     8d4:	f8 94       	cli
     8d6:	9e bf       	out	0x3e, r25	; 62
     8d8:	0f be       	out	0x3f, r0	; 63
     8da:	8d bf       	out	0x3d, r24	; 61
     8dc:	04 c0       	rjmp	.+8      	; 0x8e6 <game_play+0x68>
	//fprintf(OLED, "%s ", "r_slider: angle\n");
	//fprintf(OLED, "%s ", "x-axis: move\n");
	_delay_ms(500);						//makes sure first press does not trigger solenoid
	while(!JOY_button_pressed(LEFT_BUTTON)){
		send_control_input();
     8de:	0e 94 74 03 	call	0x6e8	; 0x6e8 <send_control_input>
		receive_score();
     8e2:	0e 94 c3 03 	call	0x786	; 0x786 <receive_score>
	fprintf(OLED, "\n\n%s \n", "lButton: quit");
	fprintf(OLED, "%s \n", "jButton: shoot");
	//fprintf(OLED, "%s ", "r_slider: angle\n");
	//fprintf(OLED, "%s ", "x-axis: move\n");
	_delay_ms(500);						//makes sure first press does not trigger solenoid
	while(!JOY_button_pressed(LEFT_BUTTON)){
     8e6:	80 e0       	ldi	r24, 0x00	; 0
     8e8:	0e 94 a3 05 	call	0xb46	; 0xb46 <JOY_button_pressed>
     8ec:	89 2b       	or	r24, r25
     8ee:	b9 f3       	breq	.-18     	; 0x8de <game_play+0x60>
		send_control_input();
		receive_score();
	}
}
     8f0:	df 91       	pop	r29
     8f2:	cf 91       	pop	r28
     8f4:	08 95       	ret

000008f6 <print_highscore>:
	//if(ir_disrupted){
	//	set_highscore();
	//}
}

void print_highscore(){
     8f6:	cf 93       	push	r28
     8f8:	df 93       	push	r29
	OLED_reset();
     8fa:	0e 94 4b 0c 	call	0x1896	; 0x1896 <OLED_reset>
	//printf("HIGHSCORE:%d.%d seconds\n", highscore/10, highscore%10);
	fprintf(OLED, "   HIGHSCORE:\n  %d.%d seconds\n", highscore/10, highscore%10);
     8fe:	80 91 d0 03 	lds	r24, 0x03D0
     902:	90 91 d1 03 	lds	r25, 0x03D1
     906:	e0 91 d0 03 	lds	r30, 0x03D0
     90a:	f0 91 d1 03 	lds	r31, 0x03D1
     90e:	2a e0       	ldi	r18, 0x0A	; 10
     910:	30 e0       	ldi	r19, 0x00	; 0
     912:	b9 01       	movw	r22, r18
     914:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__divmodhi4>
     918:	9f 93       	push	r25
     91a:	8f 93       	push	r24
     91c:	cf 01       	movw	r24, r30
     91e:	b9 01       	movw	r22, r18
     920:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__divmodhi4>
     924:	7f 93       	push	r23
     926:	6f 93       	push	r22
     928:	85 ee       	ldi	r24, 0xE5	; 229
     92a:	91 e0       	ldi	r25, 0x01	; 1
     92c:	9f 93       	push	r25
     92e:	8f 93       	push	r24
     930:	c4 e1       	ldi	r28, 0x14	; 20
     932:	d1 e0       	ldi	r29, 0x01	; 1
     934:	df 93       	push	r29
     936:	cf 93       	push	r28
     938:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
	fprintf(OLED, "\n\n\n\n %s", "lButton: back");
     93c:	84 e0       	ldi	r24, 0x04	; 4
     93e:	92 e0       	ldi	r25, 0x02	; 2
     940:	9f 93       	push	r25
     942:	8f 93       	push	r24
     944:	82 e1       	ldi	r24, 0x12	; 18
     946:	92 e0       	ldi	r25, 0x02	; 2
     948:	9f 93       	push	r25
     94a:	8f 93       	push	r24
     94c:	df 93       	push	r29
     94e:	cf 93       	push	r28
     950:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
	while(!JOY_button_pressed(LEFT_BUTTON)){}
     954:	8d b7       	in	r24, 0x3d	; 61
     956:	9e b7       	in	r25, 0x3e	; 62
     958:	0e 96       	adiw	r24, 0x0e	; 14
     95a:	0f b6       	in	r0, 0x3f	; 63
     95c:	f8 94       	cli
     95e:	9e bf       	out	0x3e, r25	; 62
     960:	0f be       	out	0x3f, r0	; 63
     962:	8d bf       	out	0x3d, r24	; 61
     964:	80 e0       	ldi	r24, 0x00	; 0
     966:	0e 94 a3 05 	call	0xb46	; 0xb46 <JOY_button_pressed>
     96a:	89 2b       	or	r24, r25
     96c:	d9 f3       	breq	.-10     	; 0x964 <print_highscore+0x6e>
     96e:	df 91       	pop	r29
     970:	cf 91       	pop	r28
     972:	08 95       	ret

00000974 <JOY_print_calibration_status>:
	clear_bit(DDRB,PB2);
	clear_bit(SFIOR, PUD);
	JOY_calibrate(calibraton_mode);
}

void JOY_print_calibration_status() {
     974:	cf 93       	push	r28
     976:	df 93       	push	r29
	OLED_reset();
     978:	0e 94 4b 0c 	call	0x1896	; 0x1896 <OLED_reset>
	fprintf(OLED, "%s\n", "Calibrate JOY");
     97c:	8a e1       	ldi	r24, 0x1A	; 26
     97e:	92 e0       	ldi	r25, 0x02	; 2
     980:	9f 93       	push	r25
     982:	8f 93       	push	r24
     984:	89 e6       	ldi	r24, 0x69	; 105
     986:	92 e0       	ldi	r25, 0x02	; 2
     988:	9f 93       	push	r25
     98a:	8f 93       	push	r24
     98c:	c2 e2       	ldi	r28, 0x22	; 34
     98e:	d1 e0       	ldi	r29, 0x01	; 1
     990:	df 93       	push	r29
     992:	cf 93       	push	r28
     994:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
	fprintf(OLED, "x_max: %6d\n", max.x);
     998:	80 91 e4 03 	lds	r24, 0x03E4
     99c:	1f 92       	push	r1
     99e:	8f 93       	push	r24
     9a0:	88 e2       	ldi	r24, 0x28	; 40
     9a2:	92 e0       	ldi	r25, 0x02	; 2
     9a4:	9f 93       	push	r25
     9a6:	8f 93       	push	r24
     9a8:	df 93       	push	r29
     9aa:	cf 93       	push	r28
     9ac:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
	fprintf(OLED, "x_min: %6d\n", min.x);
     9b0:	80 91 e8 03 	lds	r24, 0x03E8
     9b4:	1f 92       	push	r1
     9b6:	8f 93       	push	r24
     9b8:	84 e3       	ldi	r24, 0x34	; 52
     9ba:	92 e0       	ldi	r25, 0x02	; 2
     9bc:	9f 93       	push	r25
     9be:	8f 93       	push	r24
     9c0:	df 93       	push	r29
     9c2:	cf 93       	push	r28
     9c4:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
	fprintf(OLED, "y_max: %6d\n", max.y);
     9c8:	80 91 e5 03 	lds	r24, 0x03E5
     9cc:	1f 92       	push	r1
     9ce:	8f 93       	push	r24
     9d0:	80 e4       	ldi	r24, 0x40	; 64
     9d2:	92 e0       	ldi	r25, 0x02	; 2
     9d4:	9f 93       	push	r25
     9d6:	8f 93       	push	r24
     9d8:	df 93       	push	r29
     9da:	cf 93       	push	r28
     9dc:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
	fprintf(OLED, "y_min: %6d\n", min.y);
     9e0:	80 91 e9 03 	lds	r24, 0x03E9
     9e4:	1f 92       	push	r1
     9e6:	8f 93       	push	r24
     9e8:	8c e4       	ldi	r24, 0x4C	; 76
     9ea:	92 e0       	ldi	r25, 0x02	; 2
     9ec:	9f 93       	push	r25
     9ee:	8f 93       	push	r24
     9f0:	df 93       	push	r29
     9f2:	cf 93       	push	r28
     9f4:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
	fprintf(OLED, "\n%s\n", "Click when done");
     9f8:	88 e5       	ldi	r24, 0x58	; 88
     9fa:	92 e0       	ldi	r25, 0x02	; 2
     9fc:	9f 93       	push	r25
     9fe:	8f 93       	push	r24
     a00:	88 e6       	ldi	r24, 0x68	; 104
     a02:	92 e0       	ldi	r25, 0x02	; 2
     a04:	9f 93       	push	r25
     a06:	8f 93       	push	r24
     a08:	df 93       	push	r29
     a0a:	cf 93       	push	r28
     a0c:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
     a10:	8d b7       	in	r24, 0x3d	; 61
     a12:	9e b7       	in	r25, 0x3e	; 62
     a14:	84 96       	adiw	r24, 0x24	; 36
     a16:	0f b6       	in	r0, 0x3f	; 63
     a18:	f8 94       	cli
     a1a:	9e bf       	out	0x3e, r25	; 62
     a1c:	0f be       	out	0x3f, r0	; 63
     a1e:	8d bf       	out	0x3d, r24	; 61
}
     a20:	df 91       	pop	r29
     a22:	cf 91       	pop	r28
     a24:	08 95       	ret

00000a26 <JOY_calibrate>:

void JOY_calibrate(int calibraton_mode){
     a26:	bf 92       	push	r11
     a28:	cf 92       	push	r12
     a2a:	df 92       	push	r13
     a2c:	ef 92       	push	r14
     a2e:	ff 92       	push	r15
     a30:	0f 93       	push	r16
     a32:	1f 93       	push	r17
     a34:	cf 93       	push	r28
     a36:	df 93       	push	r29
	max.x = JOY_DEFAULT_MAX_X;
     a38:	2f ef       	ldi	r18, 0xFF	; 255
     a3a:	20 93 e4 03 	sts	0x03E4, r18
	max.y = JOY_DEFAULT_MAX_Y;
     a3e:	20 93 e5 03 	sts	0x03E5, r18
	min.x = JOY_DEFAULT_MIN_X;
     a42:	10 92 e8 03 	sts	0x03E8, r1
	min.y = JOY_DEFAULT_MIN_Y;
     a46:	10 92 e9 03 	sts	0x03E9, r1
	
	if (calibraton_mode == CALIBRATION_MANUAL) {
     a4a:	01 97       	sbiw	r24, 0x01	; 1
     a4c:	e9 f5       	brne	.+122    	; 0xac8 <JOY_calibrate+0xa2>
		// Loop while joystick button is not pressed.
		while(test_bit(PINB,PINB2)) {
     a4e:	b2 9b       	sbis	0x16, 2	; 22
     a50:	3b c0       	rjmp	.+118    	; 0xac8 <JOY_calibrate+0xa2>
			// Read sensor values
			uint8_t x = ADC_read(X_COORD);
			uint8_t y = ADC_read(Y_COORD);
			
			// Find max and min values for x and y:
			max.x = MAX(x, max.x);
     a52:	0f 2e       	mov	r0, r31
     a54:	f4 ee       	ldi	r31, 0xE4	; 228
     a56:	cf 2e       	mov	r12, r31
     a58:	f3 e0       	ldi	r31, 0x03	; 3
     a5a:	df 2e       	mov	r13, r31
     a5c:	f0 2d       	mov	r31, r0
			max.y = MAX(y, max.y);
     a5e:	0f 2e       	mov	r0, r31
     a60:	f5 ee       	ldi	r31, 0xE5	; 229
     a62:	ef 2e       	mov	r14, r31
     a64:	f3 e0       	ldi	r31, 0x03	; 3
     a66:	ff 2e       	mov	r15, r31
     a68:	f0 2d       	mov	r31, r0
			min.x = MIN(x, min.x);
     a6a:	08 ee       	ldi	r16, 0xE8	; 232
     a6c:	13 e0       	ldi	r17, 0x03	; 3
			min.y = MIN(y, min.y);
     a6e:	c9 ee       	ldi	r28, 0xE9	; 233
     a70:	d3 e0       	ldi	r29, 0x03	; 3
	
	if (calibraton_mode == CALIBRATION_MANUAL) {
		// Loop while joystick button is not pressed.
		while(test_bit(PINB,PINB2)) {
			// Read sensor values
			uint8_t x = ADC_read(X_COORD);
     a72:	80 e0       	ldi	r24, 0x00	; 0
     a74:	0e 94 05 02 	call	0x40a	; 0x40a <ADC_read>
     a78:	b8 2e       	mov	r11, r24
			uint8_t y = ADC_read(Y_COORD);
     a7a:	81 e0       	ldi	r24, 0x01	; 1
     a7c:	0e 94 05 02 	call	0x40a	; 0x40a <ADC_read>
			
			// Find max and min values for x and y:
			max.x = MAX(x, max.x);
     a80:	f6 01       	movw	r30, r12
     a82:	20 81       	ld	r18, Z
     a84:	9b 2d       	mov	r25, r11
     a86:	b2 16       	cp	r11, r18
     a88:	08 f4       	brcc	.+2      	; 0xa8c <JOY_calibrate+0x66>
     a8a:	92 2f       	mov	r25, r18
     a8c:	f6 01       	movw	r30, r12
     a8e:	90 83       	st	Z, r25
			max.y = MAX(y, max.y);
     a90:	f7 01       	movw	r30, r14
     a92:	20 81       	ld	r18, Z
     a94:	98 2f       	mov	r25, r24
     a96:	82 17       	cp	r24, r18
     a98:	08 f4       	brcc	.+2      	; 0xa9c <JOY_calibrate+0x76>
     a9a:	92 2f       	mov	r25, r18
     a9c:	f7 01       	movw	r30, r14
     a9e:	90 83       	st	Z, r25
			min.x = MIN(x, min.x);
     aa0:	f8 01       	movw	r30, r16
     aa2:	90 81       	ld	r25, Z
     aa4:	9b 15       	cp	r25, r11
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <JOY_calibrate+0x84>
     aa8:	b9 2e       	mov	r11, r25
     aaa:	f8 01       	movw	r30, r16
     aac:	b0 82       	st	Z, r11
			min.y = MIN(y, min.y);
     aae:	98 81       	ld	r25, Y
     ab0:	98 17       	cp	r25, r24
     ab2:	08 f4       	brcc	.+2      	; 0xab6 <JOY_calibrate+0x90>
     ab4:	89 2f       	mov	r24, r25
     ab6:	88 83       	st	Y, r24
			
			JOY_print_calibration_status();
     ab8:	0e 94 ba 04 	call	0x974	; 0x974 <JOY_print_calibration_status>
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	90 ef       	ldi	r25, 0xF0	; 240
     ac0:	01 97       	sbiw	r24, 0x01	; 1
     ac2:	f1 f7       	brne	.-4      	; 0xac0 <JOY_calibrate+0x9a>
	min.x = JOY_DEFAULT_MIN_X;
	min.y = JOY_DEFAULT_MIN_Y;
	
	if (calibraton_mode == CALIBRATION_MANUAL) {
		// Loop while joystick button is not pressed.
		while(test_bit(PINB,PINB2)) {
     ac4:	b2 99       	sbic	0x16, 2	; 22
     ac6:	d5 cf       	rjmp	.-86     	; 0xa72 <JOY_calibrate+0x4c>
			_delay_ms(50);
		}
	}
	
	// Find distance from middle to edges (radius)
	rad.x = (max.x - min.x) / 2;
     ac8:	e0 91 e4 03 	lds	r30, 0x03E4
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	60 91 e8 03 	lds	r22, 0x03E8
     ad2:	70 e0       	ldi	r23, 0x00	; 0
     ad4:	9f 01       	movw	r18, r30
     ad6:	26 1b       	sub	r18, r22
     ad8:	37 0b       	sbc	r19, r23
     ada:	c9 01       	movw	r24, r18
     adc:	99 23       	and	r25, r25
     ade:	0c f4       	brge	.+2      	; 0xae2 <JOY_calibrate+0xbc>
     ae0:	01 96       	adiw	r24, 0x01	; 1
     ae2:	95 95       	asr	r25
     ae4:	87 95       	ror	r24
     ae6:	80 93 e6 03 	sts	0x03E6, r24
	rad.y = (max.y - min.y) / 2;
     aea:	40 91 e5 03 	lds	r20, 0x03E5
     aee:	50 e0       	ldi	r21, 0x00	; 0
     af0:	20 91 e9 03 	lds	r18, 0x03E9
     af4:	30 e0       	ldi	r19, 0x00	; 0
     af6:	da 01       	movw	r26, r20
     af8:	a2 1b       	sub	r26, r18
     afa:	b3 0b       	sbc	r27, r19
     afc:	cd 01       	movw	r24, r26
     afe:	0a f4       	brpl	.+2      	; 0xb02 <JOY_calibrate+0xdc>
     b00:	01 96       	adiw	r24, 0x01	; 1
     b02:	95 95       	asr	r25
     b04:	87 95       	ror	r24
     b06:	80 93 e7 03 	sts	0x03E7, r24
		
	// Find mid point using edges.
	mid.x = (max.x + min.x) / 2;
     b0a:	6e 0f       	add	r22, r30
     b0c:	7f 1f       	adc	r23, r31
     b0e:	75 95       	asr	r23
     b10:	67 95       	ror	r22
     b12:	60 93 ea 03 	sts	0x03EA, r22
	mid.y = (max.y + min.y) / 2;
     b16:	24 0f       	add	r18, r20
     b18:	35 1f       	adc	r19, r21
     b1a:	35 95       	asr	r19
     b1c:	27 95       	ror	r18
     b1e:	20 93 eb 03 	sts	0x03EB, r18
}
     b22:	df 91       	pop	r29
     b24:	cf 91       	pop	r28
     b26:	1f 91       	pop	r17
     b28:	0f 91       	pop	r16
     b2a:	ff 90       	pop	r15
     b2c:	ef 90       	pop	r14
     b2e:	df 90       	pop	r13
     b30:	cf 90       	pop	r12
     b32:	bf 90       	pop	r11
     b34:	08 95       	ret

00000b36 <JOY_init>:
	uint8_t y;
} max, min, rad, mid;

void JOY_init(int calibraton_mode){
	//set pull-up resistors on PORTB for JOY_button
	set_bit(PORTB,PB2);
     b36:	c2 9a       	sbi	0x18, 2	; 24
	clear_bit(DDRB,PB2);
     b38:	ba 98       	cbi	0x17, 2	; 23
	clear_bit(SFIOR, PUD);
     b3a:	20 b7       	in	r18, 0x30	; 48
     b3c:	2b 7f       	andi	r18, 0xFB	; 251
     b3e:	20 bf       	out	0x30, r18	; 48
	JOY_calibrate(calibraton_mode);
     b40:	0e 94 13 05 	call	0xa26	; 0xa26 <JOY_calibrate>
     b44:	08 95       	ret

00000b46 <JOY_button_pressed>:
	mid.x = (max.x + min.x) / 2;
	mid.y = (max.y + min.y) / 2;
}

int JOY_button_pressed(button b) {
	switch (b) {
     b46:	81 30       	cpi	r24, 0x01	; 1
     b48:	41 f0       	breq	.+16     	; 0xb5a <JOY_button_pressed+0x14>
     b4a:	18 f0       	brcs	.+6      	; 0xb52 <JOY_button_pressed+0xc>
     b4c:	82 30       	cpi	r24, 0x02	; 2
     b4e:	51 f0       	breq	.+20     	; 0xb64 <JOY_button_pressed+0x1e>
     b50:	11 c0       	rjmp	.+34     	; 0xb74 <JOY_button_pressed+0x2e>
	case LEFT_BUTTON:
		if (test_bit(PINB, PINB0)) return 1;
     b52:	86 b3       	in	r24, 0x16	; 22
     b54:	81 70       	andi	r24, 0x01	; 1
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	08 95       	ret
		break;
	case RIGHT_BUTTON:
		if (test_bit(PINB, PINB1)) return 1;
     b5a:	86 b3       	in	r24, 0x16	; 22
}

int JOY_button_pressed(button b) {
	switch (b) {
	case LEFT_BUTTON:
		if (test_bit(PINB, PINB0)) return 1;
     b5c:	86 95       	lsr	r24
     b5e:	81 70       	andi	r24, 0x01	; 1
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	08 95       	ret
		break;
	case RIGHT_BUTTON:
		if (test_bit(PINB, PINB1)) return 1;
		break;
	case JOY_BUTTON:
		if (!test_bit(PINB, PINB2)) return 1;
     b64:	86 b3       	in	r24, 0x16	; 22
     b66:	86 95       	lsr	r24
     b68:	86 95       	lsr	r24
     b6a:	91 e0       	ldi	r25, 0x01	; 1
     b6c:	89 27       	eor	r24, r25
}

int JOY_button_pressed(button b) {
	switch (b) {
	case LEFT_BUTTON:
		if (test_bit(PINB, PINB0)) return 1;
     b6e:	81 70       	andi	r24, 0x01	; 1
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	08 95       	ret
		break;
	case JOY_BUTTON:
		if (!test_bit(PINB, PINB2)) return 1;
		break;
	}
	return 0;
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	90 e0       	ldi	r25, 0x00	; 0
}
     b78:	08 95       	ret

00000b7a <JOY_getPosition>:

JOY_position_t JOY_getPosition() {
     b7a:	1f 93       	push	r17
     b7c:	cf 93       	push	r28
     b7e:	df 93       	push	r29
	JOY_position_t JOY_position;
	JOY_position.x = (100 * (ADC_read(X_COORD) - mid.x)) / rad.x;
     b80:	80 e0       	ldi	r24, 0x00	; 0
     b82:	0e 94 05 02 	call	0x40a	; 0x40a <ADC_read>
     b86:	28 2f       	mov	r18, r24
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	80 91 ea 03 	lds	r24, 0x03EA
     b8e:	28 1b       	sub	r18, r24
     b90:	31 09       	sbc	r19, r1
     b92:	14 e6       	ldi	r17, 0x64	; 100
     b94:	12 9f       	mul	r17, r18
     b96:	c0 01       	movw	r24, r0
     b98:	13 9f       	mul	r17, r19
     b9a:	90 0d       	add	r25, r0
     b9c:	11 24       	eor	r1, r1
     b9e:	60 91 e6 03 	lds	r22, 0x03E6
     ba2:	70 e0       	ldi	r23, 0x00	; 0
     ba4:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__divmodhi4>
     ba8:	eb 01       	movw	r28, r22
	JOY_position.y = (100 * (ADC_read(Y_COORD) - mid.y)) / rad.y;
     baa:	81 e0       	ldi	r24, 0x01	; 1
     bac:	0e 94 05 02 	call	0x40a	; 0x40a <ADC_read>
     bb0:	28 2f       	mov	r18, r24
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	80 91 eb 03 	lds	r24, 0x03EB
     bb8:	28 1b       	sub	r18, r24
     bba:	31 09       	sbc	r19, r1
     bbc:	12 9f       	mul	r17, r18
     bbe:	c0 01       	movw	r24, r0
     bc0:	13 9f       	mul	r17, r19
     bc2:	90 0d       	add	r25, r0
     bc4:	11 24       	eor	r1, r1
     bc6:	60 91 e7 03 	lds	r22, 0x03E7
     bca:	70 e0       	ldi	r23, 0x00	; 0
     bcc:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__divmodhi4>
     bd0:	9b 01       	movw	r18, r22
	//printf("x: %d, y: %d\n", JOY_position.x, JOY_position.y);
	return JOY_position;
     bd2:	be 01       	movw	r22, r28
     bd4:	c9 01       	movw	r24, r18
}
     bd6:	df 91       	pop	r29
     bd8:	cf 91       	pop	r28
     bda:	1f 91       	pop	r17
     bdc:	08 95       	ret

00000bde <JOY_getDirection>:

JOY_direction_t JOY_getDirection() {
	JOY_position_t position = JOY_getPosition();
     bde:	0e 94 bd 05 	call	0xb7a	; 0xb7a <JOY_getPosition>
     be2:	fb 01       	movw	r30, r22
     be4:	ac 01       	movw	r20, r24
	
	// The JOYstick is within {(-5, -5), (5, 5)}, and the position is considered neutral.
	if (abs(position.x) < 5 && abs(position.y) < 5) return NEUTRAL;
     be6:	9b 01       	movw	r18, r22
     be8:	2c 5f       	subi	r18, 0xFC	; 252
     bea:	3f 4f       	sbci	r19, 0xFF	; 255
     bec:	29 30       	cpi	r18, 0x09	; 9
     bee:	31 05       	cpc	r19, r1
     bf0:	30 f4       	brcc	.+12     	; 0xbfe <JOY_getDirection+0x20>
     bf2:	9c 01       	movw	r18, r24
     bf4:	2c 5f       	subi	r18, 0xFC	; 252
     bf6:	3f 4f       	sbci	r19, 0xFF	; 255
     bf8:	29 30       	cpi	r18, 0x09	; 9
     bfa:	31 05       	cpc	r19, r1
     bfc:	e0 f0       	brcs	.+56     	; 0xc36 <JOY_getDirection+0x58>

	// The x-coordinate is dominating
	else if (abs(position.x) > abs(position.y)) {
     bfe:	db 01       	movw	r26, r22
     c00:	ff 23       	and	r31, r31
     c02:	24 f4       	brge	.+8      	; 0xc0c <JOY_getDirection+0x2e>
     c04:	aa 27       	eor	r26, r26
     c06:	bb 27       	eor	r27, r27
     c08:	a6 1b       	sub	r26, r22
     c0a:	b7 0b       	sbc	r27, r23
     c0c:	9c 01       	movw	r18, r24
     c0e:	55 23       	and	r21, r21
     c10:	24 f4       	brge	.+8      	; 0xc1a <JOY_getDirection+0x3c>
     c12:	22 27       	eor	r18, r18
     c14:	33 27       	eor	r19, r19
     c16:	28 1b       	sub	r18, r24
     c18:	39 0b       	sbc	r19, r25
     c1a:	2a 17       	cp	r18, r26
     c1c:	3b 07       	cpc	r19, r27
     c1e:	34 f4       	brge	.+12     	; 0xc2c <JOY_getDirection+0x4e>
		// Positive x => RIGHT
		if (position.x > 0) return RIGHT;
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	1e 16       	cp	r1, r30
     c24:	1f 06       	cpc	r1, r31
     c26:	54 f0       	brlt	.+20     	; 0xc3c <JOY_getDirection+0x5e>
     c28:	80 e0       	ldi	r24, 0x00	; 0
     c2a:	08 95       	ret
		else return LEFT;

	// The y-coordinate is dominating
	} else {
		// Positive y => UP
		if (position.y > 0) return UP;
     c2c:	14 16       	cp	r1, r20
     c2e:	15 06       	cpc	r1, r21
     c30:	24 f4       	brge	.+8      	; 0xc3a <JOY_getDirection+0x5c>
     c32:	82 e0       	ldi	r24, 0x02	; 2
     c34:	08 95       	ret

JOY_direction_t JOY_getDirection() {
	JOY_position_t position = JOY_getPosition();
	
	// The JOYstick is within {(-5, -5), (5, 5)}, and the position is considered neutral.
	if (abs(position.x) < 5 && abs(position.y) < 5) return NEUTRAL;
     c36:	84 e0       	ldi	r24, 0x04	; 4
     c38:	08 95       	ret
	// The y-coordinate is dominating
	} else {
		// Positive y => UP
		if (position.y > 0) return UP;
		// Negative y => DOWN
		else return DOWN;
     c3a:	83 e0       	ldi	r24, 0x03	; 3
	}
}
     c3c:	08 95       	ret

00000c3e <SLI_getPosition>:

SLI_position_t SLI_getPosition() {
     c3e:	cf 93       	push	r28
	SLI_position_t pos;
	pos.left = ADC_read(LEFT_CH);
     c40:	82 e0       	ldi	r24, 0x02	; 2
     c42:	0e 94 05 02 	call	0x40a	; 0x40a <ADC_read>
     c46:	c8 2f       	mov	r28, r24
	pos.right = ADC_read(RIGHT_CH);
     c48:	83 e0       	ldi	r24, 0x03	; 3
     c4a:	0e 94 05 02 	call	0x40a	; 0x40a <ADC_read>
     c4e:	28 2f       	mov	r18, r24
	return pos;
     c50:	6c 2f       	mov	r22, r28
     c52:	70 e0       	ldi	r23, 0x00	; 0
     c54:	82 2f       	mov	r24, r18
     c56:	90 e0       	ldi	r25, 0x00	; 0
}
     c58:	cf 91       	pop	r28
     c5a:	08 95       	ret

00000c5c <append_char>:
     c5c:	ec ee       	ldi	r30, 0xEC	; 236
     c5e:	f3 e0       	ldi	r31, 0x03	; 3
     c60:	01 90       	ld	r0, Z+
     c62:	00 20       	and	r0, r0
     c64:	e9 f7       	brne	.-6      	; 0xc60 <append_char+0x4>
     c66:	31 97       	sbiw	r30, 0x01	; 1
     c68:	ec 5e       	subi	r30, 0xEC	; 236
     c6a:	f3 40       	sbci	r31, 0x03	; 3
     c6c:	e8 32       	cpi	r30, 0x28	; 40
     c6e:	f1 05       	cpc	r31, r1
     c70:	6c f4       	brge	.+26     	; 0xc8c <append_char+0x30>
     c72:	e4 51       	subi	r30, 0x14	; 20
     c74:	fc 4f       	sbci	r31, 0xFC	; 252
     c76:	80 83       	st	Z, r24
     c78:	11 82       	std	Z+1, r1	; 0x01
     c7a:	80 91 de 03 	lds	r24, 0x03DE
     c7e:	90 91 df 03 	lds	r25, 0x03DF
     c82:	01 96       	adiw	r24, 0x01	; 1
     c84:	90 93 df 03 	sts	0x03DF, r25
     c88:	80 93 de 03 	sts	0x03DE, r24
     c8c:	08 95       	ret

00000c8e <remove_last_char>:
     c8e:	80 91 ec 03 	lds	r24, 0x03EC
     c92:	88 23       	and	r24, r24
     c94:	39 f0       	breq	.+14     	; 0xca4 <remove_last_char+0x16>
     c96:	ec ee       	ldi	r30, 0xEC	; 236
     c98:	f3 e0       	ldi	r31, 0x03	; 3
     c9a:	01 90       	ld	r0, Z+
     c9c:	00 20       	and	r0, r0
     c9e:	e9 f7       	brne	.-6      	; 0xc9a <remove_last_char+0xc>
     ca0:	32 97       	sbiw	r30, 0x02	; 2
     ca2:	10 82       	st	Z, r1
     ca4:	08 95       	ret

00000ca6 <keyboard_goto>:
     ca6:	6e 5f       	subi	r22, 0xFE	; 254
     ca8:	7f 4f       	sbci	r23, 0xFF	; 255
     caa:	66 0f       	add	r22, r22
     cac:	66 0f       	add	r22, r22
     cae:	66 0f       	add	r22, r22
     cb0:	8d 5f       	subi	r24, 0xFD	; 253
     cb2:	0e 94 1c 0c 	call	0x1838	; 0x1838 <OLED_pos>
     cb6:	08 95       	ret

00000cb8 <print_string>:
     cb8:	cf 93       	push	r28
     cba:	df 93       	push	r29
     cbc:	0e 94 2e 0c 	call	0x185c	; 0x185c <OLED_reset_cursor>
     cc0:	62 e3       	ldi	r22, 0x32	; 50
     cc2:	71 e0       	ldi	r23, 0x01	; 1
     cc4:	8c ee       	ldi	r24, 0xEC	; 236
     cc6:	93 e0       	ldi	r25, 0x03	; 3
     cc8:	0e 94 4e 10 	call	0x209c	; 0x209c <fputs>
     ccc:	cc ee       	ldi	r28, 0xEC	; 236
     cce:	d3 e0       	ldi	r29, 0x03	; 3
     cd0:	09 90       	ld	r0, Y+
     cd2:	00 20       	and	r0, r0
     cd4:	e9 f7       	brne	.-6      	; 0xcd0 <print_string+0x18>
     cd6:	21 97       	sbiw	r28, 0x01	; 1
     cd8:	cc 5e       	subi	r28, 0xEC	; 236
     cda:	d3 40       	sbci	r29, 0x03	; 3
     cdc:	c0 31       	cpi	r28, 0x10	; 16
     cde:	d1 05       	cpc	r29, r1
     ce0:	54 f4       	brge	.+20     	; 0xcf6 <print_string+0x3e>
     ce2:	62 e3       	ldi	r22, 0x32	; 50
     ce4:	71 e0       	ldi	r23, 0x01	; 1
     ce6:	80 e2       	ldi	r24, 0x20	; 32
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	0e 94 1c 10 	call	0x2038	; 0x2038 <fputc>
     cee:	21 96       	adiw	r28, 0x01	; 1
     cf0:	c0 31       	cpi	r28, 0x10	; 16
     cf2:	d1 05       	cpc	r29, r1
     cf4:	b1 f7       	brne	.-20     	; 0xce2 <print_string+0x2a>
     cf6:	ec ee       	ldi	r30, 0xEC	; 236
     cf8:	f3 e0       	ldi	r31, 0x03	; 3
     cfa:	01 90       	ld	r0, Z+
     cfc:	00 20       	and	r0, r0
     cfe:	e9 f7       	brne	.-6      	; 0xcfa <print_string+0x42>
     d00:	31 97       	sbiw	r30, 0x01	; 1
     d02:	ec 5e       	subi	r30, 0xEC	; 236
     d04:	f3 40       	sbci	r31, 0x03	; 3
     d06:	ef 70       	andi	r30, 0x0F	; 15
     d08:	ff 27       	eor	r31, r31
     d0a:	bf 01       	movw	r22, r30
     d0c:	66 0f       	add	r22, r22
     d0e:	77 1f       	adc	r23, r23
     d10:	66 0f       	add	r22, r22
     d12:	77 1f       	adc	r23, r23
     d14:	66 0f       	add	r22, r22
     d16:	77 1f       	adc	r23, r23
     d18:	80 e0       	ldi	r24, 0x00	; 0
     d1a:	0e 94 1c 0c 	call	0x1838	; 0x1838 <OLED_pos>
     d1e:	88 e0       	ldi	r24, 0x08	; 8
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <print_fill>
     d26:	10 92 dd 03 	sts	0x03DD, r1
     d2a:	10 92 dc 03 	sts	0x03DC, r1
     d2e:	60 91 d8 03 	lds	r22, 0x03D8
     d32:	70 91 d9 03 	lds	r23, 0x03D9
     d36:	80 91 da 03 	lds	r24, 0x03DA
     d3a:	90 91 db 03 	lds	r25, 0x03DB
     d3e:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
     d42:	df 91       	pop	r29
     d44:	cf 91       	pop	r28
     d46:	08 95       	ret

00000d48 <keyboard_goto_line>:
     d48:	60 e0       	ldi	r22, 0x00	; 0
     d4a:	70 e0       	ldi	r23, 0x00	; 0
     d4c:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
     d50:	08 95       	ret

00000d52 <keyboard_init>:
     d52:	ef 92       	push	r14
     d54:	ff 92       	push	r15
     d56:	0f 93       	push	r16
     d58:	1f 93       	push	r17
     d5a:	cf 93       	push	r28
     d5c:	df 93       	push	r29
     d5e:	0e 94 4b 0c 	call	0x1896	; 0x1896 <OLED_reset>
     d62:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <print_string>
     d66:	80 ea       	ldi	r24, 0xA0	; 160
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	90 93 31 01 	sts	0x0131, r25
     d6e:	80 93 30 01 	sts	0x0130, r24
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	90 e0       	ldi	r25, 0x00	; 0
     d76:	0e 94 a4 06 	call	0xd48	; 0xd48 <keyboard_goto_line>
     d7a:	10 92 d9 03 	sts	0x03D9, r1
     d7e:	10 92 d8 03 	sts	0x03D8, r1
     d82:	10 92 db 03 	sts	0x03DB, r1
     d86:	10 92 da 03 	sts	0x03DA, r1
     d8a:	10 92 ec 03 	sts	0x03EC, r1
     d8e:	e0 91 30 01 	lds	r30, 0x0130
     d92:	f0 91 31 01 	lds	r31, 0x0131
     d96:	84 91       	lpm	r24, Z
     d98:	61 e0       	ldi	r22, 0x01	; 1
     d9a:	70 e0       	ldi	r23, 0x00	; 0
     d9c:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <print_char>
     da0:	c1 e0       	ldi	r28, 0x01	; 1
     da2:	d0 e0       	ldi	r29, 0x00	; 0
     da4:	0c e0       	ldi	r16, 0x0C	; 12
     da6:	10 e0       	ldi	r17, 0x00	; 0
     da8:	0f 2e       	mov	r0, r31
     daa:	fa ed       	ldi	r31, 0xDA	; 218
     dac:	ef 2e       	mov	r14, r31
     dae:	f3 e0       	ldi	r31, 0x03	; 3
     db0:	ff 2e       	mov	r15, r31
     db2:	f0 2d       	mov	r31, r0
     db4:	0e c0       	rjmp	.+28     	; 0xdd2 <keyboard_init+0x80>
     db6:	ce 01       	movw	r24, r28
     db8:	b8 01       	movw	r22, r16
     dba:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__divmodhi4>
     dbe:	89 2b       	or	r24, r25
     dc0:	41 f4       	brne	.+16     	; 0xdd2 <keyboard_init+0x80>
     dc2:	f7 01       	movw	r30, r14
     dc4:	80 81       	ld	r24, Z
     dc6:	91 81       	ldd	r25, Z+1	; 0x01
     dc8:	01 96       	adiw	r24, 0x01	; 1
     dca:	91 83       	std	Z+1, r25	; 0x01
     dcc:	80 83       	st	Z, r24
     dce:	0e 94 a4 06 	call	0xd48	; 0xd48 <keyboard_goto_line>
     dd2:	e0 91 30 01 	lds	r30, 0x0130
     dd6:	f0 91 31 01 	lds	r31, 0x0131
     dda:	ec 0f       	add	r30, r28
     ddc:	fd 1f       	adc	r31, r29
     dde:	84 91       	lpm	r24, Z
     de0:	60 e0       	ldi	r22, 0x00	; 0
     de2:	70 e0       	ldi	r23, 0x00	; 0
     de4:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <print_char>
     de8:	21 96       	adiw	r28, 0x01	; 1
     dea:	c0 33       	cpi	r28, 0x30	; 48
     dec:	d1 05       	cpc	r29, r1
     dee:	19 f7       	brne	.-58     	; 0xdb6 <keyboard_init+0x64>
     df0:	84 e0       	ldi	r24, 0x04	; 4
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	0e 94 a4 06 	call	0xd48	; 0xd48 <keyboard_goto_line>
     df8:	20 e0       	ldi	r18, 0x00	; 0
     dfa:	30 e0       	ldi	r19, 0x00	; 0
     dfc:	40 e0       	ldi	r20, 0x00	; 0
     dfe:	50 e0       	ldi	r21, 0x00	; 0
     e00:	60 e0       	ldi	r22, 0x00	; 0
     e02:	70 e0       	ldi	r23, 0x00	; 0
     e04:	80 e0       	ldi	r24, 0x00	; 0
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	0e 94 0a 0e 	call	0x1c14	; 0x1c14 <print_options_bar>
     e0c:	10 92 db 03 	sts	0x03DB, r1
     e10:	10 92 da 03 	sts	0x03DA, r1
     e14:	ff ef       	ldi	r31, 0xFF	; 255
     e16:	2f e7       	ldi	r18, 0x7F	; 127
     e18:	87 e0       	ldi	r24, 0x07	; 7
     e1a:	f1 50       	subi	r31, 0x01	; 1
     e1c:	20 40       	sbci	r18, 0x00	; 0
     e1e:	80 40       	sbci	r24, 0x00	; 0
     e20:	e1 f7       	brne	.-8      	; 0xe1a <keyboard_init+0xc8>
     e22:	00 c0       	rjmp	.+0      	; 0xe24 <keyboard_init+0xd2>
     e24:	00 00       	nop
     e26:	df 91       	pop	r29
     e28:	cf 91       	pop	r28
     e2a:	1f 91       	pop	r17
     e2c:	0f 91       	pop	r16
     e2e:	ff 90       	pop	r15
     e30:	ef 90       	pop	r14
     e32:	08 95       	ret

00000e34 <keyboard_print>:
     e34:	ef 92       	push	r14
     e36:	ff 92       	push	r15
     e38:	0f 93       	push	r16
     e3a:	1f 93       	push	r17
     e3c:	cf 93       	push	r28
     e3e:	df 93       	push	r29
     e40:	80 e0       	ldi	r24, 0x00	; 0
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	0e 94 a4 06 	call	0xd48	; 0xd48 <keyboard_goto_line>
     e48:	10 92 db 03 	sts	0x03DB, r1
     e4c:	10 92 da 03 	sts	0x03DA, r1
     e50:	c0 e0       	ldi	r28, 0x00	; 0
     e52:	d0 e0       	ldi	r29, 0x00	; 0
     e54:	0c e0       	ldi	r16, 0x0C	; 12
     e56:	10 e0       	ldi	r17, 0x00	; 0
     e58:	0f 2e       	mov	r0, r31
     e5a:	fa ed       	ldi	r31, 0xDA	; 218
     e5c:	ef 2e       	mov	r14, r31
     e5e:	f3 e0       	ldi	r31, 0x03	; 3
     e60:	ff 2e       	mov	r15, r31
     e62:	f0 2d       	mov	r31, r0
     e64:	10 c0       	rjmp	.+32     	; 0xe86 <keyboard_print+0x52>
     e66:	ce 01       	movw	r24, r28
     e68:	b8 01       	movw	r22, r16
     e6a:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__divmodhi4>
     e6e:	89 2b       	or	r24, r25
     e70:	51 f4       	brne	.+20     	; 0xe86 <keyboard_print+0x52>
     e72:	20 97       	sbiw	r28, 0x00	; 0
     e74:	41 f0       	breq	.+16     	; 0xe86 <keyboard_print+0x52>
     e76:	f7 01       	movw	r30, r14
     e78:	80 81       	ld	r24, Z
     e7a:	91 81       	ldd	r25, Z+1	; 0x01
     e7c:	01 96       	adiw	r24, 0x01	; 1
     e7e:	91 83       	std	Z+1, r25	; 0x01
     e80:	80 83       	st	Z, r24
     e82:	0e 94 a4 06 	call	0xd48	; 0xd48 <keyboard_goto_line>
     e86:	e0 91 30 01 	lds	r30, 0x0130
     e8a:	f0 91 31 01 	lds	r31, 0x0131
     e8e:	ec 0f       	add	r30, r28
     e90:	fd 1f       	adc	r31, r29
     e92:	84 91       	lpm	r24, Z
     e94:	60 e0       	ldi	r22, 0x00	; 0
     e96:	70 e0       	ldi	r23, 0x00	; 0
     e98:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <print_char>
     e9c:	21 96       	adiw	r28, 0x01	; 1
     e9e:	c0 33       	cpi	r28, 0x30	; 48
     ea0:	d1 05       	cpc	r29, r1
     ea2:	09 f7       	brne	.-62     	; 0xe66 <keyboard_print+0x32>
     ea4:	84 e0       	ldi	r24, 0x04	; 4
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	0e 94 a4 06 	call	0xd48	; 0xd48 <keyboard_goto_line>
     eac:	20 e0       	ldi	r18, 0x00	; 0
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	40 e0       	ldi	r20, 0x00	; 0
     eb2:	50 e0       	ldi	r21, 0x00	; 0
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	80 e0       	ldi	r24, 0x00	; 0
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	0e 94 0a 0e 	call	0x1c14	; 0x1c14 <print_options_bar>
     ec0:	df 91       	pop	r29
     ec2:	cf 91       	pop	r28
     ec4:	1f 91       	pop	r17
     ec6:	0f 91       	pop	r16
     ec8:	ff 90       	pop	r15
     eca:	ef 90       	pop	r14
     ecc:	08 95       	ret

00000ece <toggle_shift>:
     ece:	80 91 30 01 	lds	r24, 0x0130
     ed2:	90 91 31 01 	lds	r25, 0x0131
     ed6:	80 5a       	subi	r24, 0xA0	; 160
     ed8:	90 40       	sbci	r25, 0x00	; 0
     eda:	39 f4       	brne	.+14     	; 0xeea <toggle_shift+0x1c>
     edc:	80 e7       	ldi	r24, 0x70	; 112
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	90 93 31 01 	sts	0x0131, r25
     ee4:	80 93 30 01 	sts	0x0130, r24
     ee8:	06 c0       	rjmp	.+12     	; 0xef6 <toggle_shift+0x28>
     eea:	80 ea       	ldi	r24, 0xA0	; 160
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	90 93 31 01 	sts	0x0131, r25
     ef2:	80 93 30 01 	sts	0x0130, r24
     ef6:	0e 94 1a 07 	call	0xe34	; 0xe34 <keyboard_print>
     efa:	84 e0       	ldi	r24, 0x04	; 4
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	0e 94 a4 06 	call	0xd48	; 0xd48 <keyboard_goto_line>
     f02:	81 e0       	ldi	r24, 0x01	; 1
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <print_shift>
     f0a:	84 e0       	ldi	r24, 0x04	; 4
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	90 93 db 03 	sts	0x03DB, r25
     f12:	80 93 da 03 	sts	0x03DA, r24
     f16:	10 92 d9 03 	sts	0x03D9, r1
     f1a:	10 92 d8 03 	sts	0x03D8, r1
     f1e:	08 95       	ret

00000f20 <keyboard_register_position_change>:
     f20:	84 30       	cpi	r24, 0x04	; 4
     f22:	09 f4       	brne	.+2      	; 0xf26 <keyboard_register_position_change+0x6>
     f24:	8a c0       	rjmp	.+276    	; 0x103a <keyboard_register_position_change+0x11a>
     f26:	83 30       	cpi	r24, 0x03	; 3
     f28:	91 f4       	brne	.+36     	; 0xf4e <keyboard_register_position_change+0x2e>
     f2a:	20 91 da 03 	lds	r18, 0x03DA
     f2e:	30 91 db 03 	lds	r19, 0x03DB
     f32:	24 30       	cpi	r18, 0x04	; 4
     f34:	31 05       	cpc	r19, r1
     f36:	bc f5       	brge	.+110    	; 0xfa6 <keyboard_register_position_change+0x86>
     f38:	c9 01       	movw	r24, r18
     f3a:	01 96       	adiw	r24, 0x01	; 1
     f3c:	90 93 db 03 	sts	0x03DB, r25
     f40:	80 93 da 03 	sts	0x03DA, r24
     f44:	30 93 d7 03 	sts	0x03D7, r19
     f48:	20 93 d6 03 	sts	0x03D6, r18
     f4c:	08 95       	ret
     f4e:	82 30       	cpi	r24, 0x02	; 2
     f50:	a1 f4       	brne	.+40     	; 0xf7a <keyboard_register_position_change+0x5a>
     f52:	80 91 da 03 	lds	r24, 0x03DA
     f56:	90 91 db 03 	lds	r25, 0x03DB
     f5a:	18 16       	cp	r1, r24
     f5c:	19 06       	cpc	r1, r25
     f5e:	0c f0       	brlt	.+2      	; 0xf62 <keyboard_register_position_change+0x42>
     f60:	6c c0       	rjmp	.+216    	; 0x103a <keyboard_register_position_change+0x11a>
     f62:	9c 01       	movw	r18, r24
     f64:	21 50       	subi	r18, 0x01	; 1
     f66:	31 09       	sbc	r19, r1
     f68:	30 93 db 03 	sts	0x03DB, r19
     f6c:	20 93 da 03 	sts	0x03DA, r18
     f70:	90 93 d7 03 	sts	0x03D7, r25
     f74:	80 93 d6 03 	sts	0x03D6, r24
     f78:	08 95       	ret
     f7a:	81 11       	cpse	r24, r1
     f7c:	14 c0       	rjmp	.+40     	; 0xfa6 <keyboard_register_position_change+0x86>
     f7e:	80 91 d8 03 	lds	r24, 0x03D8
     f82:	90 91 d9 03 	lds	r25, 0x03D9
     f86:	18 16       	cp	r1, r24
     f88:	19 06       	cpc	r1, r25
     f8a:	0c f0       	brlt	.+2      	; 0xf8e <keyboard_register_position_change+0x6e>
     f8c:	56 c0       	rjmp	.+172    	; 0x103a <keyboard_register_position_change+0x11a>
     f8e:	9c 01       	movw	r18, r24
     f90:	21 50       	subi	r18, 0x01	; 1
     f92:	31 09       	sbc	r19, r1
     f94:	30 93 d9 03 	sts	0x03D9, r19
     f98:	20 93 d8 03 	sts	0x03D8, r18
     f9c:	90 93 d5 03 	sts	0x03D5, r25
     fa0:	80 93 d4 03 	sts	0x03D4, r24
     fa4:	08 95       	ret
     fa6:	81 30       	cpi	r24, 0x01	; 1
     fa8:	09 f0       	breq	.+2      	; 0xfac <keyboard_register_position_change+0x8c>
     faa:	47 c0       	rjmp	.+142    	; 0x103a <keyboard_register_position_change+0x11a>
     fac:	80 91 d8 03 	lds	r24, 0x03D8
     fb0:	90 91 d9 03 	lds	r25, 0x03D9
     fb4:	8b 30       	cpi	r24, 0x0B	; 11
     fb6:	91 05       	cpc	r25, r1
     fb8:	0c f0       	brlt	.+2      	; 0xfbc <keyboard_register_position_change+0x9c>
     fba:	3f c0       	rjmp	.+126    	; 0x103a <keyboard_register_position_change+0x11a>
     fbc:	20 91 da 03 	lds	r18, 0x03DA
     fc0:	30 91 db 03 	lds	r19, 0x03DB
     fc4:	24 30       	cpi	r18, 0x04	; 4
     fc6:	31 05       	cpc	r19, r1
     fc8:	69 f5       	brne	.+90     	; 0x1024 <keyboard_register_position_change+0x104>
     fca:	82 30       	cpi	r24, 0x02	; 2
     fcc:	91 05       	cpc	r25, r1
     fce:	5c f4       	brge	.+22     	; 0xfe6 <keyboard_register_position_change+0xc6>
     fd0:	10 92 d5 03 	sts	0x03D5, r1
     fd4:	10 92 d4 03 	sts	0x03D4, r1
     fd8:	82 e0       	ldi	r24, 0x02	; 2
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	90 93 d9 03 	sts	0x03D9, r25
     fe0:	80 93 d8 03 	sts	0x03D8, r24
     fe4:	08 95       	ret
     fe6:	88 30       	cpi	r24, 0x08	; 8
     fe8:	91 05       	cpc	r25, r1
     fea:	6c f4       	brge	.+26     	; 0x1006 <keyboard_register_position_change+0xe6>
     fec:	82 e0       	ldi	r24, 0x02	; 2
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	90 93 d5 03 	sts	0x03D5, r25
     ff4:	80 93 d4 03 	sts	0x03D4, r24
     ff8:	88 e0       	ldi	r24, 0x08	; 8
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	90 93 d9 03 	sts	0x03D9, r25
    1000:	80 93 d8 03 	sts	0x03D8, r24
    1004:	08 95       	ret
    1006:	0a 97       	sbiw	r24, 0x0a	; 10
    1008:	c4 f4       	brge	.+48     	; 0x103a <keyboard_register_position_change+0x11a>
    100a:	88 e0       	ldi	r24, 0x08	; 8
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	90 93 d5 03 	sts	0x03D5, r25
    1012:	80 93 d4 03 	sts	0x03D4, r24
    1016:	8a e0       	ldi	r24, 0x0A	; 10
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	90 93 d9 03 	sts	0x03D9, r25
    101e:	80 93 d8 03 	sts	0x03D8, r24
    1022:	08 95       	ret
    1024:	9c 01       	movw	r18, r24
    1026:	2f 5f       	subi	r18, 0xFF	; 255
    1028:	3f 4f       	sbci	r19, 0xFF	; 255
    102a:	30 93 d9 03 	sts	0x03D9, r19
    102e:	20 93 d8 03 	sts	0x03D8, r18
    1032:	90 93 d5 03 	sts	0x03D5, r25
    1036:	80 93 d4 03 	sts	0x03D4, r24
    103a:	08 95       	ret

0000103c <keyboard_unselect_prev>:
    103c:	cf 93       	push	r28
    103e:	df 93       	push	r29
    1040:	80 91 d6 03 	lds	r24, 0x03D6
    1044:	90 91 d7 03 	lds	r25, 0x03D7
    1048:	84 30       	cpi	r24, 0x04	; 4
    104a:	91 05       	cpc	r25, r1
    104c:	24 f5       	brge	.+72     	; 0x1096 <keyboard_unselect_prev+0x5a>
    104e:	c4 ed       	ldi	r28, 0xD4	; 212
    1050:	d3 e0       	ldi	r29, 0x03	; 3
    1052:	68 81       	ld	r22, Y
    1054:	79 81       	ldd	r23, Y+1	; 0x01
    1056:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
    105a:	80 91 d6 03 	lds	r24, 0x03D6
    105e:	90 91 d7 03 	lds	r25, 0x03D7
    1062:	fc 01       	movw	r30, r24
    1064:	ee 0f       	add	r30, r30
    1066:	ff 1f       	adc	r31, r31
    1068:	8e 0f       	add	r24, r30
    106a:	9f 1f       	adc	r25, r31
    106c:	fc 01       	movw	r30, r24
    106e:	ee 0f       	add	r30, r30
    1070:	ff 1f       	adc	r31, r31
    1072:	ee 0f       	add	r30, r30
    1074:	ff 1f       	adc	r31, r31
    1076:	28 81       	ld	r18, Y
    1078:	39 81       	ldd	r19, Y+1	; 0x01
    107a:	e2 0f       	add	r30, r18
    107c:	f3 1f       	adc	r31, r19
    107e:	80 91 30 01 	lds	r24, 0x0130
    1082:	90 91 31 01 	lds	r25, 0x0131
    1086:	e8 0f       	add	r30, r24
    1088:	f9 1f       	adc	r31, r25
    108a:	84 91       	lpm	r24, Z
    108c:	60 e0       	ldi	r22, 0x00	; 0
    108e:	70 e0       	ldi	r23, 0x00	; 0
    1090:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <print_char>
    1094:	46 c0       	rjmp	.+140    	; 0x1122 <keyboard_unselect_prev+0xe6>
    1096:	20 91 d4 03 	lds	r18, 0x03D4
    109a:	30 91 d5 03 	lds	r19, 0x03D5
    109e:	22 30       	cpi	r18, 0x02	; 2
    10a0:	31 05       	cpc	r19, r1
    10a2:	6c f4       	brge	.+26     	; 0x10be <keyboard_unselect_prev+0x82>
    10a4:	10 92 d5 03 	sts	0x03D5, r1
    10a8:	10 92 d4 03 	sts	0x03D4, r1
    10ac:	60 e0       	ldi	r22, 0x00	; 0
    10ae:	70 e0       	ldi	r23, 0x00	; 0
    10b0:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
    10b4:	80 e0       	ldi	r24, 0x00	; 0
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <print_shift>
    10bc:	32 c0       	rjmp	.+100    	; 0x1122 <keyboard_unselect_prev+0xe6>
    10be:	28 30       	cpi	r18, 0x08	; 8
    10c0:	31 05       	cpc	r19, r1
    10c2:	7c f4       	brge	.+30     	; 0x10e2 <keyboard_unselect_prev+0xa6>
    10c4:	22 e0       	ldi	r18, 0x02	; 2
    10c6:	30 e0       	ldi	r19, 0x00	; 0
    10c8:	30 93 d5 03 	sts	0x03D5, r19
    10cc:	20 93 d4 03 	sts	0x03D4, r18
    10d0:	62 e0       	ldi	r22, 0x02	; 2
    10d2:	70 e0       	ldi	r23, 0x00	; 0
    10d4:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
    10d8:	80 e0       	ldi	r24, 0x00	; 0
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <print_spacebar>
    10e0:	20 c0       	rjmp	.+64     	; 0x1122 <keyboard_unselect_prev+0xe6>
    10e2:	2a 30       	cpi	r18, 0x0A	; 10
    10e4:	31 05       	cpc	r19, r1
    10e6:	7c f4       	brge	.+30     	; 0x1106 <keyboard_unselect_prev+0xca>
    10e8:	28 e0       	ldi	r18, 0x08	; 8
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	30 93 d5 03 	sts	0x03D5, r19
    10f0:	20 93 d4 03 	sts	0x03D4, r18
    10f4:	68 e0       	ldi	r22, 0x08	; 8
    10f6:	70 e0       	ldi	r23, 0x00	; 0
    10f8:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
    10fc:	80 e0       	ldi	r24, 0x00	; 0
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <print_left_arrow>
    1104:	0e c0       	rjmp	.+28     	; 0x1122 <keyboard_unselect_prev+0xe6>
    1106:	2a e0       	ldi	r18, 0x0A	; 10
    1108:	30 e0       	ldi	r19, 0x00	; 0
    110a:	30 93 d5 03 	sts	0x03D5, r19
    110e:	20 93 d4 03 	sts	0x03D4, r18
    1112:	6a e0       	ldi	r22, 0x0A	; 10
    1114:	70 e0       	ldi	r23, 0x00	; 0
    1116:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
    111a:	80 e0       	ldi	r24, 0x00	; 0
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <print_right_arrow>
    1122:	df 91       	pop	r29
    1124:	cf 91       	pop	r28
    1126:	08 95       	ret

00001128 <keyboard_select_curr>:
    1128:	cf 93       	push	r28
    112a:	df 93       	push	r29
    112c:	80 91 da 03 	lds	r24, 0x03DA
    1130:	90 91 db 03 	lds	r25, 0x03DB
    1134:	84 30       	cpi	r24, 0x04	; 4
    1136:	91 05       	cpc	r25, r1
    1138:	24 f5       	brge	.+72     	; 0x1182 <keyboard_select_curr+0x5a>
    113a:	c8 ed       	ldi	r28, 0xD8	; 216
    113c:	d3 e0       	ldi	r29, 0x03	; 3
    113e:	68 81       	ld	r22, Y
    1140:	79 81       	ldd	r23, Y+1	; 0x01
    1142:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
    1146:	80 91 da 03 	lds	r24, 0x03DA
    114a:	90 91 db 03 	lds	r25, 0x03DB
    114e:	fc 01       	movw	r30, r24
    1150:	ee 0f       	add	r30, r30
    1152:	ff 1f       	adc	r31, r31
    1154:	8e 0f       	add	r24, r30
    1156:	9f 1f       	adc	r25, r31
    1158:	fc 01       	movw	r30, r24
    115a:	ee 0f       	add	r30, r30
    115c:	ff 1f       	adc	r31, r31
    115e:	ee 0f       	add	r30, r30
    1160:	ff 1f       	adc	r31, r31
    1162:	28 81       	ld	r18, Y
    1164:	39 81       	ldd	r19, Y+1	; 0x01
    1166:	e2 0f       	add	r30, r18
    1168:	f3 1f       	adc	r31, r19
    116a:	80 91 30 01 	lds	r24, 0x0130
    116e:	90 91 31 01 	lds	r25, 0x0131
    1172:	e8 0f       	add	r30, r24
    1174:	f9 1f       	adc	r31, r25
    1176:	84 91       	lpm	r24, Z
    1178:	61 e0       	ldi	r22, 0x01	; 1
    117a:	70 e0       	ldi	r23, 0x00	; 0
    117c:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <print_char>
    1180:	46 c0       	rjmp	.+140    	; 0x120e <keyboard_select_curr+0xe6>
    1182:	20 91 d8 03 	lds	r18, 0x03D8
    1186:	30 91 d9 03 	lds	r19, 0x03D9
    118a:	22 30       	cpi	r18, 0x02	; 2
    118c:	31 05       	cpc	r19, r1
    118e:	6c f4       	brge	.+26     	; 0x11aa <keyboard_select_curr+0x82>
    1190:	10 92 d9 03 	sts	0x03D9, r1
    1194:	10 92 d8 03 	sts	0x03D8, r1
    1198:	60 e0       	ldi	r22, 0x00	; 0
    119a:	70 e0       	ldi	r23, 0x00	; 0
    119c:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
    11a0:	81 e0       	ldi	r24, 0x01	; 1
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <print_shift>
    11a8:	32 c0       	rjmp	.+100    	; 0x120e <keyboard_select_curr+0xe6>
    11aa:	28 30       	cpi	r18, 0x08	; 8
    11ac:	31 05       	cpc	r19, r1
    11ae:	7c f4       	brge	.+30     	; 0x11ce <keyboard_select_curr+0xa6>
    11b0:	22 e0       	ldi	r18, 0x02	; 2
    11b2:	30 e0       	ldi	r19, 0x00	; 0
    11b4:	30 93 d9 03 	sts	0x03D9, r19
    11b8:	20 93 d8 03 	sts	0x03D8, r18
    11bc:	62 e0       	ldi	r22, 0x02	; 2
    11be:	70 e0       	ldi	r23, 0x00	; 0
    11c0:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
    11c4:	81 e0       	ldi	r24, 0x01	; 1
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <print_spacebar>
    11cc:	20 c0       	rjmp	.+64     	; 0x120e <keyboard_select_curr+0xe6>
    11ce:	2a 30       	cpi	r18, 0x0A	; 10
    11d0:	31 05       	cpc	r19, r1
    11d2:	7c f4       	brge	.+30     	; 0x11f2 <keyboard_select_curr+0xca>
    11d4:	28 e0       	ldi	r18, 0x08	; 8
    11d6:	30 e0       	ldi	r19, 0x00	; 0
    11d8:	30 93 d9 03 	sts	0x03D9, r19
    11dc:	20 93 d8 03 	sts	0x03D8, r18
    11e0:	68 e0       	ldi	r22, 0x08	; 8
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
    11e8:	81 e0       	ldi	r24, 0x01	; 1
    11ea:	90 e0       	ldi	r25, 0x00	; 0
    11ec:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <print_left_arrow>
    11f0:	0e c0       	rjmp	.+28     	; 0x120e <keyboard_select_curr+0xe6>
    11f2:	2a e0       	ldi	r18, 0x0A	; 10
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	30 93 d9 03 	sts	0x03D9, r19
    11fa:	20 93 d8 03 	sts	0x03D8, r18
    11fe:	6a e0       	ldi	r22, 0x0A	; 10
    1200:	70 e0       	ldi	r23, 0x00	; 0
    1202:	0e 94 53 06 	call	0xca6	; 0xca6 <keyboard_goto>
    1206:	81 e0       	ldi	r24, 0x01	; 1
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <print_right_arrow>
    120e:	df 91       	pop	r29
    1210:	cf 91       	pop	r28
    1212:	08 95       	ret

00001214 <keyboard_item_pressed>:
    1214:	80 91 da 03 	lds	r24, 0x03DA
    1218:	90 91 db 03 	lds	r25, 0x03DB
    121c:	84 30       	cpi	r24, 0x04	; 4
    121e:	91 05       	cpc	r25, r1
    1220:	e4 f4       	brge	.+56     	; 0x125a <keyboard_item_pressed+0x46>
    1222:	fc 01       	movw	r30, r24
    1224:	ee 0f       	add	r30, r30
    1226:	ff 1f       	adc	r31, r31
    1228:	8e 0f       	add	r24, r30
    122a:	9f 1f       	adc	r25, r31
    122c:	fc 01       	movw	r30, r24
    122e:	ee 0f       	add	r30, r30
    1230:	ff 1f       	adc	r31, r31
    1232:	ee 0f       	add	r30, r30
    1234:	ff 1f       	adc	r31, r31
    1236:	20 91 d8 03 	lds	r18, 0x03D8
    123a:	30 91 d9 03 	lds	r19, 0x03D9
    123e:	e2 0f       	add	r30, r18
    1240:	f3 1f       	adc	r31, r19
    1242:	80 91 30 01 	lds	r24, 0x0130
    1246:	90 91 31 01 	lds	r25, 0x0131
    124a:	e8 0f       	add	r30, r24
    124c:	f9 1f       	adc	r31, r25
    124e:	84 91       	lpm	r24, Z
    1250:	0e 94 2e 06 	call	0xc5c	; 0xc5c <append_char>
    1254:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <print_string>
    1258:	08 95       	ret
    125a:	80 91 d8 03 	lds	r24, 0x03D8
    125e:	90 91 d9 03 	lds	r25, 0x03D9
    1262:	82 30       	cpi	r24, 0x02	; 2
    1264:	91 05       	cpc	r25, r1
    1266:	1c f4       	brge	.+6      	; 0x126e <keyboard_item_pressed+0x5a>
    1268:	0e 94 67 07 	call	0xece	; 0xece <toggle_shift>
    126c:	08 95       	ret
    126e:	88 30       	cpi	r24, 0x08	; 8
    1270:	91 05       	cpc	r25, r1
    1272:	34 f4       	brge	.+12     	; 0x1280 <keyboard_item_pressed+0x6c>
    1274:	80 e2       	ldi	r24, 0x20	; 32
    1276:	0e 94 2e 06 	call	0xc5c	; 0xc5c <append_char>
    127a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <print_string>
    127e:	08 95       	ret
    1280:	8a 30       	cpi	r24, 0x0A	; 10
    1282:	91 05       	cpc	r25, r1
    1284:	74 f4       	brge	.+28     	; 0x12a2 <keyboard_item_pressed+0x8e>
    1286:	20 91 de 03 	lds	r18, 0x03DE
    128a:	30 91 df 03 	lds	r19, 0x03DF
    128e:	12 16       	cp	r1, r18
    1290:	13 06       	cpc	r1, r19
    1292:	3c f4       	brge	.+14     	; 0x12a2 <keyboard_item_pressed+0x8e>
    1294:	21 50       	subi	r18, 0x01	; 1
    1296:	31 09       	sbc	r19, r1
    1298:	30 93 df 03 	sts	0x03DF, r19
    129c:	20 93 de 03 	sts	0x03DE, r18
    12a0:	08 95       	ret
    12a2:	0c 97       	sbiw	r24, 0x0c	; 12
    12a4:	a4 f4       	brge	.+40     	; 0x12ce <keyboard_item_pressed+0xba>
    12a6:	80 91 de 03 	lds	r24, 0x03DE
    12aa:	90 91 df 03 	lds	r25, 0x03DF
    12ae:	ec ee       	ldi	r30, 0xEC	; 236
    12b0:	f3 e0       	ldi	r31, 0x03	; 3
    12b2:	01 90       	ld	r0, Z+
    12b4:	00 20       	and	r0, r0
    12b6:	e9 f7       	brne	.-6      	; 0x12b2 <keyboard_item_pressed+0x9e>
    12b8:	31 97       	sbiw	r30, 0x01	; 1
    12ba:	ec 5e       	subi	r30, 0xEC	; 236
    12bc:	f3 40       	sbci	r31, 0x03	; 3
    12be:	8e 17       	cp	r24, r30
    12c0:	9f 07       	cpc	r25, r31
    12c2:	28 f4       	brcc	.+10     	; 0x12ce <keyboard_item_pressed+0xba>
    12c4:	01 96       	adiw	r24, 0x01	; 1
    12c6:	90 93 df 03 	sts	0x03DF, r25
    12ca:	80 93 de 03 	sts	0x03DE, r24
    12ce:	08 95       	ret

000012d0 <keyboard_run>:
    12d0:	6f 92       	push	r6
    12d2:	7f 92       	push	r7
    12d4:	8f 92       	push	r8
    12d6:	9f 92       	push	r9
    12d8:	af 92       	push	r10
    12da:	bf 92       	push	r11
    12dc:	cf 92       	push	r12
    12de:	df 92       	push	r13
    12e0:	ef 92       	push	r14
    12e2:	ff 92       	push	r15
    12e4:	0f 93       	push	r16
    12e6:	1f 93       	push	r17
    12e8:	cf 93       	push	r28
    12ea:	df 93       	push	r29
    12ec:	0e 94 a9 06 	call	0xd52	; 0xd52 <keyboard_init>
    12f0:	0f 2e       	mov	r0, r31
    12f2:	f6 ed       	ldi	r31, 0xD6	; 214
    12f4:	ef 2e       	mov	r14, r31
    12f6:	f3 e0       	ldi	r31, 0x03	; 3
    12f8:	ff 2e       	mov	r15, r31
    12fa:	f0 2d       	mov	r31, r0
    12fc:	0a ed       	ldi	r16, 0xDA	; 218
    12fe:	13 e0       	ldi	r17, 0x03	; 3
    1300:	0f 2e       	mov	r0, r31
    1302:	f4 ed       	ldi	r31, 0xD4	; 212
    1304:	af 2e       	mov	r10, r31
    1306:	f3 e0       	ldi	r31, 0x03	; 3
    1308:	bf 2e       	mov	r11, r31
    130a:	f0 2d       	mov	r31, r0
    130c:	0f 2e       	mov	r0, r31
    130e:	f8 ed       	ldi	r31, 0xD8	; 216
    1310:	cf 2e       	mov	r12, r31
    1312:	f3 e0       	ldi	r31, 0x03	; 3
    1314:	df 2e       	mov	r13, r31
    1316:	f0 2d       	mov	r31, r0
    1318:	88 24       	eor	r8, r8
    131a:	83 94       	inc	r8
    131c:	91 2c       	mov	r9, r1
    131e:	61 2c       	mov	r6, r1
    1320:	71 2c       	mov	r7, r1
    1322:	59 c0       	rjmp	.+178    	; 0x13d6 <keyboard_run+0x106>
    1324:	0e 94 ef 05 	call	0xbde	; 0xbde <JOY_getDirection>
    1328:	0e 94 90 07 	call	0xf20	; 0xf20 <keyboard_register_position_change>
    132c:	f7 01       	movw	r30, r14
    132e:	20 81       	ld	r18, Z
    1330:	31 81       	ldd	r19, Z+1	; 0x01
    1332:	f8 01       	movw	r30, r16
    1334:	80 81       	ld	r24, Z
    1336:	91 81       	ldd	r25, Z+1	; 0x01
    1338:	28 17       	cp	r18, r24
    133a:	39 07       	cpc	r19, r25
    133c:	49 f4       	brne	.+18     	; 0x1350 <keyboard_run+0x80>
    133e:	f5 01       	movw	r30, r10
    1340:	20 81       	ld	r18, Z
    1342:	31 81       	ldd	r19, Z+1	; 0x01
    1344:	f6 01       	movw	r30, r12
    1346:	80 81       	ld	r24, Z
    1348:	91 81       	ldd	r25, Z+1	; 0x01
    134a:	28 17       	cp	r18, r24
    134c:	39 07       	cpc	r19, r25
    134e:	99 f0       	breq	.+38     	; 0x1376 <keyboard_run+0xa6>
    1350:	0e 94 1e 08 	call	0x103c	; 0x103c <keyboard_unselect_prev>
    1354:	0e 94 94 08 	call	0x1128	; 0x1128 <keyboard_select_curr>
    1358:	f6 01       	movw	r30, r12
    135a:	80 81       	ld	r24, Z
    135c:	91 81       	ldd	r25, Z+1	; 0x01
    135e:	f5 01       	movw	r30, r10
    1360:	91 83       	std	Z+1, r25	; 0x01
    1362:	80 83       	st	Z, r24
    1364:	f8 01       	movw	r30, r16
    1366:	80 81       	ld	r24, Z
    1368:	91 81       	ldd	r25, Z+1	; 0x01
    136a:	f7 01       	movw	r30, r14
    136c:	91 83       	std	Z+1, r25	; 0x01
    136e:	80 83       	st	Z, r24
    1370:	c8 2d       	mov	r28, r8
    1372:	d9 2d       	mov	r29, r9
    1374:	02 c0       	rjmp	.+4      	; 0x137a <keyboard_run+0xaa>
    1376:	c6 2d       	mov	r28, r6
    1378:	d7 2d       	mov	r29, r7
    137a:	82 e0       	ldi	r24, 0x02	; 2
    137c:	0e 94 a3 05 	call	0xb46	; 0xb46 <JOY_button_pressed>
    1380:	89 2b       	or	r24, r25
    1382:	29 f0       	breq	.+10     	; 0x138e <keyboard_run+0xbe>
    1384:	0e 94 0a 09 	call	0x1214	; 0x1214 <keyboard_item_pressed>
    1388:	88 2d       	mov	r24, r8
    138a:	99 2d       	mov	r25, r9
    138c:	0e c0       	rjmp	.+28     	; 0x13aa <keyboard_run+0xda>
    138e:	81 e0       	ldi	r24, 0x01	; 1
    1390:	0e 94 a3 05 	call	0xb46	; 0xb46 <JOY_button_pressed>
    1394:	89 2b       	or	r24, r25
    1396:	39 f0       	breq	.+14     	; 0x13a6 <keyboard_run+0xd6>
    1398:	0e 94 47 06 	call	0xc8e	; 0xc8e <remove_last_char>
    139c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <print_string>
    13a0:	88 2d       	mov	r24, r8
    13a2:	99 2d       	mov	r25, r9
    13a4:	02 c0       	rjmp	.+4      	; 0x13aa <keyboard_run+0xda>
    13a6:	86 2d       	mov	r24, r6
    13a8:	97 2d       	mov	r25, r7
    13aa:	cd 2b       	or	r28, r29
    13ac:	49 f0       	breq	.+18     	; 0x13c0 <keyboard_run+0xf0>
    13ae:	ef ef       	ldi	r30, 0xFF	; 255
    13b0:	ff eb       	ldi	r31, 0xBF	; 191
    13b2:	23 e0       	ldi	r18, 0x03	; 3
    13b4:	e1 50       	subi	r30, 0x01	; 1
    13b6:	f0 40       	sbci	r31, 0x00	; 0
    13b8:	20 40       	sbci	r18, 0x00	; 0
    13ba:	e1 f7       	brne	.-8      	; 0x13b4 <keyboard_run+0xe4>
    13bc:	00 c0       	rjmp	.+0      	; 0x13be <keyboard_run+0xee>
    13be:	00 00       	nop
    13c0:	89 2b       	or	r24, r25
    13c2:	49 f0       	breq	.+18     	; 0x13d6 <keyboard_run+0x106>
    13c4:	3f ef       	ldi	r19, 0xFF	; 255
    13c6:	4f e7       	ldi	r20, 0x7F	; 127
    13c8:	87 e0       	ldi	r24, 0x07	; 7
    13ca:	31 50       	subi	r19, 0x01	; 1
    13cc:	40 40       	sbci	r20, 0x00	; 0
    13ce:	80 40       	sbci	r24, 0x00	; 0
    13d0:	e1 f7       	brne	.-8      	; 0x13ca <keyboard_run+0xfa>
    13d2:	00 c0       	rjmp	.+0      	; 0x13d4 <keyboard_run+0x104>
    13d4:	00 00       	nop
    13d6:	80 e0       	ldi	r24, 0x00	; 0
    13d8:	0e 94 a3 05 	call	0xb46	; 0xb46 <JOY_button_pressed>
    13dc:	89 2b       	or	r24, r25
    13de:	09 f4       	brne	.+2      	; 0x13e2 <keyboard_run+0x112>
    13e0:	a1 cf       	rjmp	.-190    	; 0x1324 <keyboard_run+0x54>
    13e2:	df 91       	pop	r29
    13e4:	cf 91       	pop	r28
    13e6:	1f 91       	pop	r17
    13e8:	0f 91       	pop	r16
    13ea:	ff 90       	pop	r15
    13ec:	ef 90       	pop	r14
    13ee:	df 90       	pop	r13
    13f0:	cf 90       	pop	r12
    13f2:	bf 90       	pop	r11
    13f4:	af 90       	pop	r10
    13f6:	9f 90       	pop	r9
    13f8:	8f 90       	pop	r8
    13fa:	7f 90       	pop	r7
    13fc:	6f 90       	pop	r6
    13fe:	08 95       	ret

00001400 <MCP2515_read>:
    1400:	cf 93       	push	r28
    1402:	c8 2f       	mov	r28, r24
    1404:	0e 94 4a 0e 	call	0x1c94	; 0x1c94 <SPI_select>
    1408:	83 e0       	ldi	r24, 0x03	; 3
    140a:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    140e:	8c 2f       	mov	r24, r28
    1410:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    1414:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <SPI_read>
    1418:	c8 2f       	mov	r28, r24
    141a:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <SPI_deselect>
    141e:	8c 2f       	mov	r24, r28
    1420:	cf 91       	pop	r28
    1422:	08 95       	ret

00001424 <MCP2515_write>:
    1424:	cf 93       	push	r28
    1426:	df 93       	push	r29
    1428:	d8 2f       	mov	r29, r24
    142a:	c6 2f       	mov	r28, r22
    142c:	0e 94 4a 0e 	call	0x1c94	; 0x1c94 <SPI_select>
    1430:	82 e0       	ldi	r24, 0x02	; 2
    1432:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    1436:	8d 2f       	mov	r24, r29
    1438:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    143c:	8c 2f       	mov	r24, r28
    143e:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    1442:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <SPI_deselect>
    1446:	df 91       	pop	r29
    1448:	cf 91       	pop	r28
    144a:	08 95       	ret

0000144c <MCP2515_request_to_send>:
    144c:	cf 93       	push	r28
    144e:	c8 2f       	mov	r28, r24
    1450:	0e 94 4a 0e 	call	0x1c94	; 0x1c94 <SPI_select>
    1454:	80 e8       	ldi	r24, 0x80	; 128
    1456:	8c 0f       	add	r24, r28
    1458:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    145c:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <SPI_deselect>
    1460:	cf 91       	pop	r28
    1462:	08 95       	ret

00001464 <MCP2515_bit_modify>:
    1464:	1f 93       	push	r17
    1466:	cf 93       	push	r28
    1468:	df 93       	push	r29
    146a:	18 2f       	mov	r17, r24
    146c:	d6 2f       	mov	r29, r22
    146e:	c4 2f       	mov	r28, r20
    1470:	0e 94 4a 0e 	call	0x1c94	; 0x1c94 <SPI_select>
    1474:	85 e0       	ldi	r24, 0x05	; 5
    1476:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    147a:	81 2f       	mov	r24, r17
    147c:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    1480:	8d 2f       	mov	r24, r29
    1482:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    1486:	8c 2f       	mov	r24, r28
    1488:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    148c:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <SPI_deselect>
    1490:	df 91       	pop	r29
    1492:	cf 91       	pop	r28
    1494:	1f 91       	pop	r17
    1496:	08 95       	ret

00001498 <MCP2515_reset>:
    1498:	0e 94 4a 0e 	call	0x1c94	; 0x1c94 <SPI_select>
    149c:	80 ec       	ldi	r24, 0xC0	; 192
    149e:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    14a2:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <SPI_deselect>
    14a6:	08 95       	ret

000014a8 <MCP2515_init>:
    14a8:	0e 94 2d 0e 	call	0x1c5a	; 0x1c5a <SPI_init>
    14ac:	0e 94 4c 0a 	call	0x1498	; 0x1498 <MCP2515_reset>
    14b0:	8e e0       	ldi	r24, 0x0E	; 14
    14b2:	0e 94 00 0a 	call	0x1400	; 0x1400 <MCP2515_read>
    14b6:	80 7e       	andi	r24, 0xE0	; 224
    14b8:	80 38       	cpi	r24, 0x80	; 128
    14ba:	31 f0       	breq	.+12     	; 0x14c8 <MCP2515_init+0x20>
    14bc:	80 ef       	ldi	r24, 0xF0	; 240
    14be:	92 e0       	ldi	r25, 0x02	; 2
    14c0:	0e 94 8b 10 	call	0x2116	; 0x2116 <puts>
    14c4:	81 e0       	ldi	r24, 0x01	; 1
    14c6:	08 95       	ret
    14c8:	80 e0       	ldi	r24, 0x00	; 0
    14ca:	08 95       	ret

000014cc <MENU_draw_current_menu>:
    14cc:	df 92       	push	r13
    14ce:	ef 92       	push	r14
    14d0:	ff 92       	push	r15
    14d2:	0f 93       	push	r16
    14d4:	1f 93       	push	r17
    14d6:	cf 93       	push	r28
    14d8:	df 93       	push	r29
    14da:	0e 94 4b 0c 	call	0x1896	; 0x1896 <OLED_reset>
    14de:	e0 91 16 04 	lds	r30, 0x0416
    14e2:	f0 91 17 04 	lds	r31, 0x0417
    14e6:	c4 81       	ldd	r28, Z+4	; 0x04
    14e8:	d5 81       	ldd	r29, Z+5	; 0x05
    14ea:	20 97       	sbiw	r28, 0x00	; 0
    14ec:	61 f1       	breq	.+88     	; 0x1546 <MENU_draw_current_menu+0x7a>
    14ee:	d1 2c       	mov	r13, r1
    14f0:	0f 2e       	mov	r0, r31
    14f2:	f6 e1       	ldi	r31, 0x16	; 22
    14f4:	ef 2e       	mov	r14, r31
    14f6:	f2 e0       	ldi	r31, 0x02	; 2
    14f8:	ff 2e       	mov	r15, r31
    14fa:	f0 2d       	mov	r31, r0
    14fc:	00 e4       	ldi	r16, 0x40	; 64
    14fe:	11 e0       	ldi	r17, 0x01	; 1
    1500:	60 e0       	ldi	r22, 0x00	; 0
    1502:	8d 2d       	mov	r24, r13
    1504:	0e 94 1c 0c 	call	0x1838	; 0x1838 <OLED_pos>
    1508:	20 91 14 04 	lds	r18, 0x0414
    150c:	30 91 15 04 	lds	r19, 0x0415
    1510:	c2 17       	cp	r28, r18
    1512:	d3 07       	cpc	r29, r19
    1514:	11 f4       	brne	.+4      	; 0x151a <MENU_draw_current_menu+0x4e>
    1516:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <OLED_print_arrow>
    151a:	89 81       	ldd	r24, Y+1	; 0x01
    151c:	8f 93       	push	r24
    151e:	88 81       	ld	r24, Y
    1520:	8f 93       	push	r24
    1522:	ff 92       	push	r15
    1524:	ef 92       	push	r14
    1526:	1f 93       	push	r17
    1528:	0f 93       	push	r16
    152a:	0e 94 0a 10 	call	0x2014	; 0x2014 <fprintf>
    152e:	0e 80       	ldd	r0, Y+6	; 0x06
    1530:	df 81       	ldd	r29, Y+7	; 0x07
    1532:	c0 2d       	mov	r28, r0
    1534:	d3 94       	inc	r13
    1536:	0f 90       	pop	r0
    1538:	0f 90       	pop	r0
    153a:	0f 90       	pop	r0
    153c:	0f 90       	pop	r0
    153e:	0f 90       	pop	r0
    1540:	0f 90       	pop	r0
    1542:	20 97       	sbiw	r28, 0x00	; 0
    1544:	e9 f6       	brne	.-70     	; 0x1500 <MENU_draw_current_menu+0x34>
    1546:	df 91       	pop	r29
    1548:	cf 91       	pop	r28
    154a:	1f 91       	pop	r17
    154c:	0f 91       	pop	r16
    154e:	ff 90       	pop	r15
    1550:	ef 90       	pop	r14
    1552:	df 90       	pop	r13
    1554:	08 95       	ret

00001556 <MENU_select_next>:
    1556:	e0 91 14 04 	lds	r30, 0x0414
    155a:	f0 91 15 04 	lds	r31, 0x0415
    155e:	86 81       	ldd	r24, Z+6	; 0x06
    1560:	97 81       	ldd	r25, Z+7	; 0x07
    1562:	89 2b       	or	r24, r25
    1564:	41 f0       	breq	.+16     	; 0x1576 <MENU_select_next+0x20>
    1566:	86 81       	ldd	r24, Z+6	; 0x06
    1568:	97 81       	ldd	r25, Z+7	; 0x07
    156a:	90 93 15 04 	sts	0x0415, r25
    156e:	80 93 14 04 	sts	0x0414, r24
    1572:	0e 94 66 0a 	call	0x14cc	; 0x14cc <MENU_draw_current_menu>
    1576:	08 95       	ret

00001578 <MENU_select_prev>:
    1578:	e0 91 14 04 	lds	r30, 0x0414
    157c:	f0 91 15 04 	lds	r31, 0x0415
    1580:	80 85       	ldd	r24, Z+8	; 0x08
    1582:	91 85       	ldd	r25, Z+9	; 0x09
    1584:	89 2b       	or	r24, r25
    1586:	41 f0       	breq	.+16     	; 0x1598 <MENU_select_prev+0x20>
    1588:	80 85       	ldd	r24, Z+8	; 0x08
    158a:	91 85       	ldd	r25, Z+9	; 0x09
    158c:	90 93 15 04 	sts	0x0415, r25
    1590:	80 93 14 04 	sts	0x0414, r24
    1594:	0e 94 66 0a 	call	0x14cc	; 0x14cc <MENU_draw_current_menu>
    1598:	08 95       	ret

0000159a <MENU_enter_selection>:
    159a:	e0 91 14 04 	lds	r30, 0x0414
    159e:	f0 91 15 04 	lds	r31, 0x0415
    15a2:	82 85       	ldd	r24, Z+10	; 0x0a
    15a4:	93 85       	ldd	r25, Z+11	; 0x0b
    15a6:	89 2b       	or	r24, r25
    15a8:	31 f0       	breq	.+12     	; 0x15b6 <MENU_enter_selection+0x1c>
    15aa:	02 84       	ldd	r0, Z+10	; 0x0a
    15ac:	f3 85       	ldd	r31, Z+11	; 0x0b
    15ae:	e0 2d       	mov	r30, r0
    15b0:	09 95       	icall
    15b2:	0e 94 66 0a 	call	0x14cc	; 0x14cc <MENU_draw_current_menu>
    15b6:	e0 91 14 04 	lds	r30, 0x0414
    15ba:	f0 91 15 04 	lds	r31, 0x0415
    15be:	84 81       	ldd	r24, Z+4	; 0x04
    15c0:	95 81       	ldd	r25, Z+5	; 0x05
    15c2:	89 2b       	or	r24, r25
    15c4:	61 f0       	breq	.+24     	; 0x15de <MENU_enter_selection+0x44>
    15c6:	f0 93 17 04 	sts	0x0417, r31
    15ca:	e0 93 16 04 	sts	0x0416, r30
    15ce:	84 81       	ldd	r24, Z+4	; 0x04
    15d0:	95 81       	ldd	r25, Z+5	; 0x05
    15d2:	90 93 15 04 	sts	0x0415, r25
    15d6:	80 93 14 04 	sts	0x0414, r24
    15da:	0e 94 66 0a 	call	0x14cc	; 0x14cc <MENU_draw_current_menu>
    15de:	08 95       	ret

000015e0 <MENU_go_back>:
    15e0:	e0 91 16 04 	lds	r30, 0x0416
    15e4:	f0 91 17 04 	lds	r31, 0x0417
    15e8:	82 81       	ldd	r24, Z+2	; 0x02
    15ea:	93 81       	ldd	r25, Z+3	; 0x03
    15ec:	89 2b       	or	r24, r25
    15ee:	79 f0       	breq	.+30     	; 0x160e <MENU_go_back+0x2e>
    15f0:	02 80       	ldd	r0, Z+2	; 0x02
    15f2:	f3 81       	ldd	r31, Z+3	; 0x03
    15f4:	e0 2d       	mov	r30, r0
    15f6:	f0 93 17 04 	sts	0x0417, r31
    15fa:	e0 93 16 04 	sts	0x0416, r30
    15fe:	84 81       	ldd	r24, Z+4	; 0x04
    1600:	95 81       	ldd	r25, Z+5	; 0x05
    1602:	90 93 15 04 	sts	0x0415, r25
    1606:	80 93 14 04 	sts	0x0414, r24
    160a:	0e 94 66 0a 	call	0x14cc	; 0x14cc <MENU_draw_current_menu>
    160e:	08 95       	ret

00001610 <MENU_run>:
    1610:	cf 93       	push	r28
    1612:	0e 94 ef 05 	call	0xbde	; 0xbde <JOY_getDirection>
    1616:	83 30       	cpi	r24, 0x03	; 3
    1618:	21 f4       	brne	.+8      	; 0x1622 <MENU_run+0x12>
    161a:	0e 94 ab 0a 	call	0x1556	; 0x1556 <MENU_select_next>
    161e:	c1 e0       	ldi	r28, 0x01	; 1
    1620:	09 c0       	rjmp	.+18     	; 0x1634 <MENU_run+0x24>
    1622:	0e 94 ef 05 	call	0xbde	; 0xbde <JOY_getDirection>
    1626:	82 30       	cpi	r24, 0x02	; 2
    1628:	21 f4       	brne	.+8      	; 0x1632 <MENU_run+0x22>
    162a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <MENU_select_prev>
    162e:	c1 e0       	ldi	r28, 0x01	; 1
    1630:	01 c0       	rjmp	.+2      	; 0x1634 <MENU_run+0x24>
    1632:	c0 e0       	ldi	r28, 0x00	; 0
    1634:	82 e0       	ldi	r24, 0x02	; 2
    1636:	0e 94 a3 05 	call	0xb46	; 0xb46 <JOY_button_pressed>
    163a:	89 2b       	or	r24, r25
    163c:	19 f0       	breq	.+6      	; 0x1644 <MENU_run+0x34>
    163e:	0e 94 cd 0a 	call	0x159a	; 0x159a <MENU_enter_selection>
    1642:	0a c0       	rjmp	.+20     	; 0x1658 <MENU_run+0x48>
    1644:	80 e0       	ldi	r24, 0x00	; 0
    1646:	0e 94 a3 05 	call	0xb46	; 0xb46 <JOY_button_pressed>
    164a:	89 2b       	or	r24, r25
    164c:	19 f0       	breq	.+6      	; 0x1654 <MENU_run+0x44>
    164e:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <MENU_go_back>
    1652:	02 c0       	rjmp	.+4      	; 0x1658 <MENU_run+0x48>
    1654:	cc 23       	and	r28, r28
    1656:	49 f0       	breq	.+18     	; 0x166a <MENU_run+0x5a>
    1658:	22 e3       	ldi	r18, 0x32	; 50
    165a:	83 ed       	ldi	r24, 0xD3	; 211
    165c:	93 e0       	ldi	r25, 0x03	; 3
    165e:	21 50       	subi	r18, 0x01	; 1
    1660:	80 40       	sbci	r24, 0x00	; 0
    1662:	90 40       	sbci	r25, 0x00	; 0
    1664:	e1 f7       	brne	.-8      	; 0x165e <MENU_run+0x4e>
    1666:	00 c0       	rjmp	.+0      	; 0x1668 <MENU_run+0x58>
    1668:	00 c0       	rjmp	.+0      	; 0x166a <MENU_run+0x5a>
    166a:	cf 91       	pop	r28
    166c:	08 95       	ret

0000166e <add_entry>:
    166e:	ef 92       	push	r14
    1670:	ff 92       	push	r15
    1672:	0f 93       	push	r16
    1674:	1f 93       	push	r17
    1676:	cf 93       	push	r28
    1678:	df 93       	push	r29
    167a:	ec 01       	movw	r28, r24
    167c:	7b 01       	movw	r14, r22
    167e:	8a 01       	movw	r16, r20
    1680:	8c e0       	ldi	r24, 0x0C	; 12
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	0e 94 98 0e 	call	0x1d30	; 0x1d30 <malloc>
    1688:	dc 01       	movw	r26, r24
    168a:	11 96       	adiw	r26, 0x01	; 1
    168c:	fc 92       	st	X, r15
    168e:	ee 92       	st	-X, r14
    1690:	13 96       	adiw	r26, 0x03	; 3
    1692:	dc 93       	st	X, r29
    1694:	ce 93       	st	-X, r28
    1696:	12 97       	sbiw	r26, 0x02	; 2
    1698:	15 96       	adiw	r26, 0x05	; 5
    169a:	1c 92       	st	X, r1
    169c:	1e 92       	st	-X, r1
    169e:	14 97       	sbiw	r26, 0x04	; 4
    16a0:	17 96       	adiw	r26, 0x07	; 7
    16a2:	1c 92       	st	X, r1
    16a4:	1e 92       	st	-X, r1
    16a6:	16 97       	sbiw	r26, 0x06	; 6
    16a8:	19 96       	adiw	r26, 0x09	; 9
    16aa:	1c 92       	st	X, r1
    16ac:	1e 92       	st	-X, r1
    16ae:	18 97       	sbiw	r26, 0x08	; 8
    16b0:	1b 96       	adiw	r26, 0x0b	; 11
    16b2:	1c 93       	st	X, r17
    16b4:	0e 93       	st	-X, r16
    16b6:	1a 97       	sbiw	r26, 0x0a	; 10
    16b8:	20 97       	sbiw	r28, 0x00	; 0
    16ba:	a1 f0       	breq	.+40     	; 0x16e4 <add_entry+0x76>
    16bc:	ec 81       	ldd	r30, Y+4	; 0x04
    16be:	fd 81       	ldd	r31, Y+5	; 0x05
    16c0:	30 97       	sbiw	r30, 0x00	; 0
    16c2:	19 f4       	brne	.+6      	; 0x16ca <add_entry+0x5c>
    16c4:	9d 83       	std	Y+5, r25	; 0x05
    16c6:	8c 83       	std	Y+4, r24	; 0x04
    16c8:	0d c0       	rjmp	.+26     	; 0x16e4 <add_entry+0x76>
    16ca:	26 81       	ldd	r18, Z+6	; 0x06
    16cc:	37 81       	ldd	r19, Z+7	; 0x07
    16ce:	21 15       	cp	r18, r1
    16d0:	31 05       	cpc	r19, r1
    16d2:	11 f0       	breq	.+4      	; 0x16d8 <add_entry+0x6a>
    16d4:	f9 01       	movw	r30, r18
    16d6:	f9 cf       	rjmp	.-14     	; 0x16ca <add_entry+0x5c>
    16d8:	b7 83       	std	Z+7, r27	; 0x07
    16da:	a6 83       	std	Z+6, r26	; 0x06
    16dc:	19 96       	adiw	r26, 0x09	; 9
    16de:	fc 93       	st	X, r31
    16e0:	ee 93       	st	-X, r30
    16e2:	18 97       	sbiw	r26, 0x08	; 8
    16e4:	cd 01       	movw	r24, r26
    16e6:	df 91       	pop	r29
    16e8:	cf 91       	pop	r28
    16ea:	1f 91       	pop	r17
    16ec:	0f 91       	pop	r16
    16ee:	ff 90       	pop	r15
    16f0:	ef 90       	pop	r14
    16f2:	08 95       	ret

000016f4 <MENU_init>:
    16f4:	cf 92       	push	r12
    16f6:	df 92       	push	r13
    16f8:	ef 92       	push	r14
    16fa:	ff 92       	push	r15
    16fc:	0f 93       	push	r16
    16fe:	1f 93       	push	r17
    1700:	cf 93       	push	r28
    1702:	df 93       	push	r29
    1704:	40 e0       	ldi	r20, 0x00	; 0
    1706:	50 e0       	ldi	r21, 0x00	; 0
    1708:	68 e3       	ldi	r22, 0x38	; 56
    170a:	73 e0       	ldi	r23, 0x03	; 3
    170c:	80 e0       	ldi	r24, 0x00	; 0
    170e:	90 e0       	ldi	r25, 0x00	; 0
    1710:	0e 94 37 0b 	call	0x166e	; 0x166e <add_entry>
    1714:	ec 01       	movw	r28, r24
    1716:	4f e3       	ldi	r20, 0x3F	; 63
    1718:	54 e0       	ldi	r21, 0x04	; 4
    171a:	62 e4       	ldi	r22, 0x42	; 66
    171c:	73 e0       	ldi	r23, 0x03	; 3
    171e:	0e 94 37 0b 	call	0x166e	; 0x166e <add_entry>
    1722:	7c 01       	movw	r14, r24
    1724:	4b e7       	ldi	r20, 0x7B	; 123
    1726:	54 e0       	ldi	r21, 0x04	; 4
    1728:	6c e4       	ldi	r22, 0x4C	; 76
    172a:	73 e0       	ldi	r23, 0x03	; 3
    172c:	ce 01       	movw	r24, r28
    172e:	0e 94 37 0b 	call	0x166e	; 0x166e <add_entry>
    1732:	40 e0       	ldi	r20, 0x00	; 0
    1734:	50 e0       	ldi	r21, 0x00	; 0
    1736:	66 e5       	ldi	r22, 0x56	; 86
    1738:	73 e0       	ldi	r23, 0x03	; 3
    173a:	ce 01       	movw	r24, r28
    173c:	0e 94 37 0b 	call	0x166e	; 0x166e <add_entry>
    1740:	6c 01       	movw	r12, r24
    1742:	40 e0       	ldi	r20, 0x00	; 0
    1744:	50 e0       	ldi	r21, 0x00	; 0
    1746:	6d eb       	ldi	r22, 0xBD	; 189
    1748:	73 e0       	ldi	r23, 0x03	; 3
    174a:	ce 01       	movw	r24, r28
    174c:	0e 94 37 0b 	call	0x166e	; 0x166e <add_entry>
    1750:	8c 01       	movw	r16, r24
    1752:	4a e5       	ldi	r20, 0x5A	; 90
    1754:	52 e0       	ldi	r21, 0x02	; 2
    1756:	6f e5       	ldi	r22, 0x5F	; 95
    1758:	73 e0       	ldi	r23, 0x03	; 3
    175a:	c6 01       	movw	r24, r12
    175c:	0e 94 37 0b 	call	0x166e	; 0x166e <add_entry>
    1760:	48 e6       	ldi	r20, 0x68	; 104
    1762:	59 e0       	ldi	r21, 0x09	; 9
    1764:	6a e6       	ldi	r22, 0x6A	; 106
    1766:	73 e0       	ldi	r23, 0x03	; 3
    1768:	c8 01       	movw	r24, r16
    176a:	0e 94 37 0b 	call	0x166e	; 0x166e <add_entry>
    176e:	40 e0       	ldi	r20, 0x00	; 0
    1770:	50 e0       	ldi	r21, 0x00	; 0
    1772:	63 e7       	ldi	r22, 0x73	; 115
    1774:	73 e0       	ldi	r23, 0x03	; 3
    1776:	c8 01       	movw	r24, r16
    1778:	0e 94 37 0b 	call	0x166e	; 0x166e <add_entry>
    177c:	d0 93 17 04 	sts	0x0417, r29
    1780:	c0 93 16 04 	sts	0x0416, r28
    1784:	f0 92 15 04 	sts	0x0415, r15
    1788:	e0 92 14 04 	sts	0x0414, r14
    178c:	0e 94 66 0a 	call	0x14cc	; 0x14cc <MENU_draw_current_menu>
    1790:	df 91       	pop	r29
    1792:	cf 91       	pop	r28
    1794:	1f 91       	pop	r17
    1796:	0f 91       	pop	r16
    1798:	ff 90       	pop	r15
    179a:	ef 90       	pop	r14
    179c:	df 90       	pop	r13
    179e:	cf 90       	pop	r12
    17a0:	08 95       	ret

000017a2 <initialize>:
#include <stdbool.h>

void send_control_input(void);

void initialize(void){
	cli();
    17a2:	f8 94       	cli
	usart_init(MYUBRR); 
    17a4:	8f e1       	ldi	r24, 0x1F	; 31
    17a6:	90 e0       	ldi	r25, 0x00	; 0
    17a8:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <usart_init>
	SRAM_init();
    17ac:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <SRAM_init>
	ADC_init();
    17b0:	0e 94 03 02 	call	0x406	; 0x406 <ADC_init>
	JOY_init(CALIBRATION_DEFAULT);
    17b4:	80 e0       	ldi	r24, 0x00	; 0
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	0e 94 9b 05 	call	0xb36	; 0xb36 <JOY_init>
	OLED_init();
    17bc:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <OLED_init>
	MENU_init();
    17c0:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <MENU_init>
	CAN_init();
    17c4:	0e 94 ad 02 	call	0x55a	; 0x55a <CAN_init>
	sei();
    17c8:	78 94       	sei
    17ca:	08 95       	ret

000017cc <main>:
}



int main(void) {
	initialize();
    17cc:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <initialize>
	printf("Initialization of Node 1 complete!\n\n");
    17d0:	8d e7       	ldi	r24, 0x7D	; 125
    17d2:	93 e0       	ldi	r25, 0x03	; 3
    17d4:	0e 94 8b 10 	call	0x2116	; 0x2116 <puts>
	while(1) {
		MENU_run();
    17d8:	0e 94 08 0b 	call	0x1610	; 0x1610 <MENU_run>
    17dc:	fd cf       	rjmp	.-6      	; 0x17d8 <main+0xc>

000017de <write_data>:
    17de:	e0 91 50 01 	lds	r30, 0x0150
    17e2:	f0 91 51 01 	lds	r31, 0x0151
    17e6:	80 83       	st	Z, r24
    17e8:	08 95       	ret

000017ea <OLED_goto_line>:
    17ea:	88 30       	cpi	r24, 0x08	; 8
    17ec:	60 f4       	brcc	.+24     	; 0x1806 <OLED_goto_line+0x1c>
    17ee:	90 eb       	ldi	r25, 0xB0	; 176
    17f0:	98 0f       	add	r25, r24
    17f2:	e0 91 4e 01 	lds	r30, 0x014E
    17f6:	f0 91 4f 01 	lds	r31, 0x014F
    17fa:	90 83       	st	Z, r25
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	90 93 e3 03 	sts	0x03E3, r25
    1802:	80 93 e2 03 	sts	0x03E2, r24
    1806:	08 95       	ret

00001808 <OLED_goto_column>:
    1808:	88 23       	and	r24, r24
    180a:	ac f0       	brlt	.+42     	; 0x1836 <OLED_goto_column+0x2e>
    180c:	98 2f       	mov	r25, r24
    180e:	9f 70       	andi	r25, 0x0F	; 15
    1810:	e0 91 4e 01 	lds	r30, 0x014E
    1814:	f0 91 4f 01 	lds	r31, 0x014F
    1818:	90 83       	st	Z, r25
    181a:	98 2f       	mov	r25, r24
    181c:	92 95       	swap	r25
    181e:	9f 70       	andi	r25, 0x0F	; 15
    1820:	90 5f       	subi	r25, 0xF0	; 240
    1822:	e0 91 4e 01 	lds	r30, 0x014E
    1826:	f0 91 4f 01 	lds	r31, 0x014F
    182a:	90 83       	st	Z, r25
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	90 93 e1 03 	sts	0x03E1, r25
    1832:	80 93 e0 03 	sts	0x03E0, r24
    1836:	08 95       	ret

00001838 <OLED_pos>:
    1838:	cf 93       	push	r28
    183a:	c6 2f       	mov	r28, r22
    183c:	88 30       	cpi	r24, 0x08	; 8
    183e:	10 f4       	brcc	.+4      	; 0x1844 <OLED_pos+0xc>
    1840:	66 23       	and	r22, r22
    1842:	2c f4       	brge	.+10     	; 0x184e <OLED_pos+0x16>
    1844:	81 ea       	ldi	r24, 0xA1	; 161
    1846:	93 e0       	ldi	r25, 0x03	; 3
    1848:	0e 94 8b 10 	call	0x2116	; 0x2116 <puts>
    184c:	05 c0       	rjmp	.+10     	; 0x1858 <OLED_pos+0x20>
    184e:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <OLED_goto_line>
    1852:	8c 2f       	mov	r24, r28
    1854:	0e 94 04 0c 	call	0x1808	; 0x1808 <OLED_goto_column>
    1858:	cf 91       	pop	r28
    185a:	08 95       	ret

0000185c <OLED_reset_cursor>:
    185c:	60 e0       	ldi	r22, 0x00	; 0
    185e:	80 e0       	ldi	r24, 0x00	; 0
    1860:	0e 94 1c 0c 	call	0x1838	; 0x1838 <OLED_pos>
    1864:	08 95       	ret

00001866 <OLED_clear_line>:
    1866:	60 e0       	ldi	r22, 0x00	; 0
    1868:	0e 94 1c 0c 	call	0x1838	; 0x1838 <OLED_pos>
    186c:	80 e8       	ldi	r24, 0x80	; 128
    186e:	90 e0       	ldi	r25, 0x00	; 0
    1870:	e0 91 50 01 	lds	r30, 0x0150
    1874:	f0 91 51 01 	lds	r31, 0x0151
    1878:	10 82       	st	Z, r1
    187a:	01 97       	sbiw	r24, 0x01	; 1
    187c:	00 97       	sbiw	r24, 0x00	; 0
    187e:	c1 f7       	brne	.-16     	; 0x1870 <OLED_clear_line+0xa>
    1880:	08 95       	ret

00001882 <OLED_clear_screen>:
    1882:	cf 93       	push	r28
    1884:	c0 e0       	ldi	r28, 0x00	; 0
    1886:	8c 2f       	mov	r24, r28
    1888:	0e 94 33 0c 	call	0x1866	; 0x1866 <OLED_clear_line>
    188c:	cf 5f       	subi	r28, 0xFF	; 255
    188e:	c8 30       	cpi	r28, 0x08	; 8
    1890:	d1 f7       	brne	.-12     	; 0x1886 <OLED_clear_screen+0x4>
    1892:	cf 91       	pop	r28
    1894:	08 95       	ret

00001896 <OLED_reset>:
    1896:	0e 94 41 0c 	call	0x1882	; 0x1882 <OLED_clear_screen>
    189a:	0e 94 2e 0c 	call	0x185c	; 0x185c <OLED_reset_cursor>
    189e:	08 95       	ret

000018a0 <OLED_init>:
    18a0:	cf 93       	push	r28
    18a2:	df 93       	push	r29
    18a4:	cd b7       	in	r28, 0x3d	; 61
    18a6:	de b7       	in	r29, 0x3e	; 62
    18a8:	67 97       	sbiw	r28, 0x17	; 23
    18aa:	0f b6       	in	r0, 0x3f	; 63
    18ac:	f8 94       	cli
    18ae:	de bf       	out	0x3e, r29	; 62
    18b0:	0f be       	out	0x3f, r0	; 63
    18b2:	cd bf       	out	0x3d, r28	; 61
    18b4:	87 e1       	ldi	r24, 0x17	; 23
    18b6:	e2 e5       	ldi	r30, 0x52	; 82
    18b8:	f1 e0       	ldi	r31, 0x01	; 1
    18ba:	de 01       	movw	r26, r28
    18bc:	11 96       	adiw	r26, 0x01	; 1
    18be:	01 90       	ld	r0, Z+
    18c0:	0d 92       	st	X+, r0
    18c2:	8a 95       	dec	r24
    18c4:	e1 f7       	brne	.-8      	; 0x18be <OLED_init+0x1e>
    18c6:	fe 01       	movw	r30, r28
    18c8:	31 96       	adiw	r30, 0x01	; 1
    18ca:	ce 01       	movw	r24, r28
    18cc:	48 96       	adiw	r24, 0x18	; 24
    18ce:	21 91       	ld	r18, Z+
    18d0:	a0 91 4e 01 	lds	r26, 0x014E
    18d4:	b0 91 4f 01 	lds	r27, 0x014F
    18d8:	2c 93       	st	X, r18
    18da:	e8 17       	cp	r30, r24
    18dc:	f9 07       	cpc	r31, r25
    18de:	b9 f7       	brne	.-18     	; 0x18ce <OLED_init+0x2e>
    18e0:	0e 94 4b 0c 	call	0x1896	; 0x1896 <OLED_reset>
    18e4:	67 96       	adiw	r28, 0x17	; 23
    18e6:	0f b6       	in	r0, 0x3f	; 63
    18e8:	f8 94       	cli
    18ea:	de bf       	out	0x3e, r29	; 62
    18ec:	0f be       	out	0x3f, r0	; 63
    18ee:	cd bf       	out	0x3d, r28	; 61
    18f0:	df 91       	pop	r29
    18f2:	cf 91       	pop	r28
    18f4:	08 95       	ret

000018f6 <OLED_print_char>:
    18f6:	8a 30       	cpi	r24, 0x0A	; 10
    18f8:	29 f0       	breq	.+10     	; 0x1904 <OLED_print_char+0xe>
    18fa:	8d 30       	cpi	r24, 0x0D	; 13
    18fc:	61 f0       	breq	.+24     	; 0x1916 <OLED_print_char+0x20>
    18fe:	81 11       	cpse	r24, r1
    1900:	12 c0       	rjmp	.+36     	; 0x1926 <OLED_print_char+0x30>
    1902:	08 95       	ret
    1904:	80 91 e2 03 	lds	r24, 0x03E2
    1908:	90 91 e3 03 	lds	r25, 0x03E3
    190c:	60 e0       	ldi	r22, 0x00	; 0
    190e:	8f 5f       	subi	r24, 0xFF	; 255
    1910:	0e 94 1c 0c 	call	0x1838	; 0x1838 <OLED_pos>
    1914:	08 95       	ret
    1916:	80 91 e2 03 	lds	r24, 0x03E2
    191a:	90 91 e3 03 	lds	r25, 0x03E3
    191e:	60 e0       	ldi	r22, 0x00	; 0
    1920:	0e 94 1c 0c 	call	0x1838	; 0x1838 <OLED_pos>
    1924:	08 95       	ret
    1926:	e8 2f       	mov	r30, r24
    1928:	f0 e0       	ldi	r31, 0x00	; 0
    192a:	ee 0f       	add	r30, r30
    192c:	ff 1f       	adc	r31, r31
    192e:	ee 0f       	add	r30, r30
    1930:	ff 1f       	adc	r31, r31
    1932:	ee 0f       	add	r30, r30
    1934:	ff 1f       	adc	r31, r31
    1936:	e0 53       	subi	r30, 0x30	; 48
    1938:	f0 40       	sbci	r31, 0x00	; 0
    193a:	80 e0       	ldi	r24, 0x00	; 0
    193c:	90 e0       	ldi	r25, 0x00	; 0
    193e:	24 91       	lpm	r18, Z
    1940:	a0 91 50 01 	lds	r26, 0x0150
    1944:	b0 91 51 01 	lds	r27, 0x0151
    1948:	2c 93       	st	X, r18
    194a:	01 96       	adiw	r24, 0x01	; 1
    194c:	31 96       	adiw	r30, 0x01	; 1
    194e:	88 30       	cpi	r24, 0x08	; 8
    1950:	91 05       	cpc	r25, r1
    1952:	a9 f7       	brne	.-22     	; 0x193e <OLED_print_char+0x48>
    1954:	08 95       	ret

00001956 <OLED_set_brightness>:
    1956:	e0 91 4e 01 	lds	r30, 0x014E
    195a:	f0 91 4f 01 	lds	r31, 0x014F
    195e:	91 e8       	ldi	r25, 0x81	; 129
    1960:	90 83       	st	Z, r25
    1962:	e0 91 4e 01 	lds	r30, 0x014E
    1966:	f0 91 4f 01 	lds	r31, 0x014F
    196a:	80 83       	st	Z, r24
    196c:	08 95       	ret

0000196e <OLED_print_char_inverse>:
    196e:	88 23       	and	r24, r24
    1970:	c1 f0       	breq	.+48     	; 0x19a2 <OLED_print_char_inverse+0x34>
    1972:	e8 2f       	mov	r30, r24
    1974:	f0 e0       	ldi	r31, 0x00	; 0
    1976:	ee 0f       	add	r30, r30
    1978:	ff 1f       	adc	r31, r31
    197a:	ee 0f       	add	r30, r30
    197c:	ff 1f       	adc	r31, r31
    197e:	ee 0f       	add	r30, r30
    1980:	ff 1f       	adc	r31, r31
    1982:	e0 53       	subi	r30, 0x30	; 48
    1984:	f0 40       	sbci	r31, 0x00	; 0
    1986:	80 e0       	ldi	r24, 0x00	; 0
    1988:	90 e0       	ldi	r25, 0x00	; 0
    198a:	24 91       	lpm	r18, Z
    198c:	20 95       	com	r18
    198e:	a0 91 50 01 	lds	r26, 0x0150
    1992:	b0 91 51 01 	lds	r27, 0x0151
    1996:	2c 93       	st	X, r18
    1998:	01 96       	adiw	r24, 0x01	; 1
    199a:	31 96       	adiw	r30, 0x01	; 1
    199c:	88 30       	cpi	r24, 0x08	; 8
    199e:	91 05       	cpc	r25, r1
    19a0:	a1 f7       	brne	.-24     	; 0x198a <OLED_print_char_inverse+0x1c>
    19a2:	08 95       	ret

000019a4 <OLED_set_line>:
    19a4:	60 e0       	ldi	r22, 0x00	; 0
    19a6:	0e 94 1c 0c 	call	0x1838	; 0x1838 <OLED_pos>
    19aa:	80 e8       	ldi	r24, 0x80	; 128
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	2f ef       	ldi	r18, 0xFF	; 255
    19b0:	e0 91 50 01 	lds	r30, 0x0150
    19b4:	f0 91 51 01 	lds	r31, 0x0151
    19b8:	20 83       	st	Z, r18
    19ba:	01 97       	sbiw	r24, 0x01	; 1
    19bc:	00 97       	sbiw	r24, 0x00	; 0
    19be:	c1 f7       	brne	.-16     	; 0x19b0 <OLED_set_line+0xc>
    19c0:	08 95       	ret

000019c2 <OLED_print_arrow>:
    19c2:	e0 91 50 01 	lds	r30, 0x0150
    19c6:	f0 91 51 01 	lds	r31, 0x0151
    19ca:	88 e1       	ldi	r24, 0x18	; 24
    19cc:	80 83       	st	Z, r24
    19ce:	e0 91 50 01 	lds	r30, 0x0150
    19d2:	f0 91 51 01 	lds	r31, 0x0151
    19d6:	80 83       	st	Z, r24
    19d8:	e0 91 50 01 	lds	r30, 0x0150
    19dc:	f0 91 51 01 	lds	r31, 0x0151
    19e0:	9e e7       	ldi	r25, 0x7E	; 126
    19e2:	90 83       	st	Z, r25
    19e4:	e0 91 50 01 	lds	r30, 0x0150
    19e8:	f0 91 51 01 	lds	r31, 0x0151
    19ec:	9c e3       	ldi	r25, 0x3C	; 60
    19ee:	90 83       	st	Z, r25
    19f0:	e0 91 50 01 	lds	r30, 0x0150
    19f4:	f0 91 51 01 	lds	r31, 0x0151
    19f8:	80 83       	st	Z, r24
    19fa:	08 95       	ret

000019fc <print_blank>:
    19fc:	0f 93       	push	r16
    19fe:	1f 93       	push	r17
    1a00:	cf 93       	push	r28
    1a02:	df 93       	push	r29
    1a04:	8c 01       	movw	r16, r24
    1a06:	18 16       	cp	r1, r24
    1a08:	19 06       	cpc	r1, r25
    1a0a:	54 f4       	brge	.+20     	; 0x1a20 <print_blank+0x24>
    1a0c:	c0 e0       	ldi	r28, 0x00	; 0
    1a0e:	d0 e0       	ldi	r29, 0x00	; 0
    1a10:	80 e0       	ldi	r24, 0x00	; 0
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1a18:	21 96       	adiw	r28, 0x01	; 1
    1a1a:	c0 17       	cp	r28, r16
    1a1c:	d1 07       	cpc	r29, r17
    1a1e:	c1 f7       	brne	.-16     	; 0x1a10 <print_blank+0x14>
    1a20:	df 91       	pop	r29
    1a22:	cf 91       	pop	r28
    1a24:	1f 91       	pop	r17
    1a26:	0f 91       	pop	r16
    1a28:	08 95       	ret

00001a2a <print_fill>:
    1a2a:	0f 93       	push	r16
    1a2c:	1f 93       	push	r17
    1a2e:	cf 93       	push	r28
    1a30:	df 93       	push	r29
    1a32:	8c 01       	movw	r16, r24
    1a34:	18 16       	cp	r1, r24
    1a36:	19 06       	cpc	r1, r25
    1a38:	54 f4       	brge	.+20     	; 0x1a4e <print_fill+0x24>
    1a3a:	c0 e0       	ldi	r28, 0x00	; 0
    1a3c:	d0 e0       	ldi	r29, 0x00	; 0
    1a3e:	8f ef       	ldi	r24, 0xFF	; 255
    1a40:	90 e0       	ldi	r25, 0x00	; 0
    1a42:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1a46:	21 96       	adiw	r28, 0x01	; 1
    1a48:	c0 17       	cp	r28, r16
    1a4a:	d1 07       	cpc	r29, r17
    1a4c:	c1 f7       	brne	.-16     	; 0x1a3e <print_fill+0x14>
    1a4e:	df 91       	pop	r29
    1a50:	cf 91       	pop	r28
    1a52:	1f 91       	pop	r17
    1a54:	0f 91       	pop	r16
    1a56:	08 95       	ret

00001a58 <print_shift>:
    1a58:	89 2b       	or	r24, r25
    1a5a:	29 f5       	brne	.+74     	; 0x1aa6 <print_shift+0x4e>
    1a5c:	84 e0       	ldi	r24, 0x04	; 4
    1a5e:	90 e0       	ldi	r25, 0x00	; 0
    1a60:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <print_blank>
    1a64:	80 e1       	ldi	r24, 0x10	; 16
    1a66:	90 e0       	ldi	r25, 0x00	; 0
    1a68:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1a6c:	88 e1       	ldi	r24, 0x18	; 24
    1a6e:	90 e0       	ldi	r25, 0x00	; 0
    1a70:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1a74:	8c e3       	ldi	r24, 0x3C	; 60
    1a76:	90 e0       	ldi	r25, 0x00	; 0
    1a78:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1a7c:	8e e3       	ldi	r24, 0x3E	; 62
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1a84:	8c e3       	ldi	r24, 0x3C	; 60
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1a8c:	88 e1       	ldi	r24, 0x18	; 24
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1a94:	80 e1       	ldi	r24, 0x10	; 16
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1a9c:	85 e0       	ldi	r24, 0x05	; 5
    1a9e:	90 e0       	ldi	r25, 0x00	; 0
    1aa0:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <print_blank>
    1aa4:	08 95       	ret
    1aa6:	84 e0       	ldi	r24, 0x04	; 4
    1aa8:	90 e0       	ldi	r25, 0x00	; 0
    1aaa:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <print_fill>
    1aae:	8f ee       	ldi	r24, 0xEF	; 239
    1ab0:	9f ef       	ldi	r25, 0xFF	; 255
    1ab2:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1ab6:	87 ee       	ldi	r24, 0xE7	; 231
    1ab8:	9f ef       	ldi	r25, 0xFF	; 255
    1aba:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1abe:	83 ec       	ldi	r24, 0xC3	; 195
    1ac0:	9f ef       	ldi	r25, 0xFF	; 255
    1ac2:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1ac6:	81 ec       	ldi	r24, 0xC1	; 193
    1ac8:	9f ef       	ldi	r25, 0xFF	; 255
    1aca:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1ace:	83 ec       	ldi	r24, 0xC3	; 195
    1ad0:	9f ef       	ldi	r25, 0xFF	; 255
    1ad2:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1ad6:	87 ee       	ldi	r24, 0xE7	; 231
    1ad8:	9f ef       	ldi	r25, 0xFF	; 255
    1ada:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1ade:	8f ee       	ldi	r24, 0xEF	; 239
    1ae0:	9f ef       	ldi	r25, 0xFF	; 255
    1ae2:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1ae6:	85 e0       	ldi	r24, 0x05	; 5
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <print_fill>
    1aee:	08 95       	ret

00001af0 <print_left_arrow>:
    1af0:	89 2b       	or	r24, r25
    1af2:	a9 f4       	brne	.+42     	; 0x1b1e <print_left_arrow+0x2e>
    1af4:	86 e0       	ldi	r24, 0x06	; 6
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <print_blank>
    1afc:	80 e1       	ldi	r24, 0x10	; 16
    1afe:	90 e0       	ldi	r25, 0x00	; 0
    1b00:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b04:	88 e3       	ldi	r24, 0x38	; 56
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b0c:	8c e7       	ldi	r24, 0x7C	; 124
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b14:	87 e0       	ldi	r24, 0x07	; 7
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <print_blank>
    1b1c:	08 95       	ret
    1b1e:	86 e0       	ldi	r24, 0x06	; 6
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <print_fill>
    1b26:	8f ee       	ldi	r24, 0xEF	; 239
    1b28:	9f ef       	ldi	r25, 0xFF	; 255
    1b2a:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b2e:	87 ec       	ldi	r24, 0xC7	; 199
    1b30:	9f ef       	ldi	r25, 0xFF	; 255
    1b32:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b36:	83 e8       	ldi	r24, 0x83	; 131
    1b38:	9f ef       	ldi	r25, 0xFF	; 255
    1b3a:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b3e:	87 e0       	ldi	r24, 0x07	; 7
    1b40:	90 e0       	ldi	r25, 0x00	; 0
    1b42:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <print_fill>
    1b46:	08 95       	ret

00001b48 <print_right_arrow>:
    1b48:	89 2b       	or	r24, r25
    1b4a:	a9 f4       	brne	.+42     	; 0x1b76 <print_right_arrow+0x2e>
    1b4c:	86 e0       	ldi	r24, 0x06	; 6
    1b4e:	90 e0       	ldi	r25, 0x00	; 0
    1b50:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <print_blank>
    1b54:	8c e7       	ldi	r24, 0x7C	; 124
    1b56:	90 e0       	ldi	r25, 0x00	; 0
    1b58:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b5c:	88 e3       	ldi	r24, 0x38	; 56
    1b5e:	90 e0       	ldi	r25, 0x00	; 0
    1b60:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b64:	80 e1       	ldi	r24, 0x10	; 16
    1b66:	90 e0       	ldi	r25, 0x00	; 0
    1b68:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b6c:	87 e0       	ldi	r24, 0x07	; 7
    1b6e:	90 e0       	ldi	r25, 0x00	; 0
    1b70:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <print_blank>
    1b74:	08 95       	ret
    1b76:	86 e0       	ldi	r24, 0x06	; 6
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <print_fill>
    1b7e:	83 e8       	ldi	r24, 0x83	; 131
    1b80:	9f ef       	ldi	r25, 0xFF	; 255
    1b82:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b86:	87 ec       	ldi	r24, 0xC7	; 199
    1b88:	9f ef       	ldi	r25, 0xFF	; 255
    1b8a:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b8e:	8f ee       	ldi	r24, 0xEF	; 239
    1b90:	9f ef       	ldi	r25, 0xFF	; 255
    1b92:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1b96:	87 e0       	ldi	r24, 0x07	; 7
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <print_fill>
    1b9e:	08 95       	ret

00001ba0 <print_spacebar>:
    1ba0:	cf 93       	push	r28
    1ba2:	df 93       	push	r29
    1ba4:	89 2b       	or	r24, r25
    1ba6:	d1 f4       	brne	.+52     	; 0x1bdc <print_spacebar+0x3c>
    1ba8:	84 e0       	ldi	r24, 0x04	; 4
    1baa:	90 e0       	ldi	r25, 0x00	; 0
    1bac:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <print_blank>
    1bb0:	88 e3       	ldi	r24, 0x38	; 56
    1bb2:	90 e0       	ldi	r25, 0x00	; 0
    1bb4:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1bb8:	c7 e2       	ldi	r28, 0x27	; 39
    1bba:	d0 e0       	ldi	r29, 0x00	; 0
    1bbc:	80 e2       	ldi	r24, 0x20	; 32
    1bbe:	90 e0       	ldi	r25, 0x00	; 0
    1bc0:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1bc4:	21 97       	sbiw	r28, 0x01	; 1
    1bc6:	20 97       	sbiw	r28, 0x00	; 0
    1bc8:	c9 f7       	brne	.-14     	; 0x1bbc <print_spacebar+0x1c>
    1bca:	88 e3       	ldi	r24, 0x38	; 56
    1bcc:	90 e0       	ldi	r25, 0x00	; 0
    1bce:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1bd2:	85 e0       	ldi	r24, 0x05	; 5
    1bd4:	90 e0       	ldi	r25, 0x00	; 0
    1bd6:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <print_blank>
    1bda:	19 c0       	rjmp	.+50     	; 0x1c0e <print_spacebar+0x6e>
    1bdc:	84 e0       	ldi	r24, 0x04	; 4
    1bde:	90 e0       	ldi	r25, 0x00	; 0
    1be0:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <print_blank>
    1be4:	87 ec       	ldi	r24, 0xC7	; 199
    1be6:	9f ef       	ldi	r25, 0xFF	; 255
    1be8:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1bec:	c7 e2       	ldi	r28, 0x27	; 39
    1bee:	d0 e0       	ldi	r29, 0x00	; 0
    1bf0:	8f ed       	ldi	r24, 0xDF	; 223
    1bf2:	9f ef       	ldi	r25, 0xFF	; 255
    1bf4:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1bf8:	21 97       	sbiw	r28, 0x01	; 1
    1bfa:	20 97       	sbiw	r28, 0x00	; 0
    1bfc:	c9 f7       	brne	.-14     	; 0x1bf0 <print_spacebar+0x50>
    1bfe:	87 ec       	ldi	r24, 0xC7	; 199
    1c00:	9f ef       	ldi	r25, 0xFF	; 255
    1c02:	0e 94 ef 0b 	call	0x17de	; 0x17de <write_data>
    1c06:	85 e0       	ldi	r24, 0x05	; 5
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <print_blank>
    1c0e:	df 91       	pop	r29
    1c10:	cf 91       	pop	r28
    1c12:	08 95       	ret

00001c14 <print_options_bar>:
    1c14:	ef 92       	push	r14
    1c16:	ff 92       	push	r15
    1c18:	0f 93       	push	r16
    1c1a:	1f 93       	push	r17
    1c1c:	cf 93       	push	r28
    1c1e:	df 93       	push	r29
    1c20:	7b 01       	movw	r14, r22
    1c22:	8a 01       	movw	r16, r20
    1c24:	e9 01       	movw	r28, r18
    1c26:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <print_shift>
    1c2a:	c7 01       	movw	r24, r14
    1c2c:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <print_spacebar>
    1c30:	c8 01       	movw	r24, r16
    1c32:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <print_left_arrow>
    1c36:	ce 01       	movw	r24, r28
    1c38:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <print_right_arrow>
    1c3c:	df 91       	pop	r29
    1c3e:	cf 91       	pop	r28
    1c40:	1f 91       	pop	r17
    1c42:	0f 91       	pop	r16
    1c44:	ff 90       	pop	r15
    1c46:	ef 90       	pop	r14
    1c48:	08 95       	ret

00001c4a <print_char>:
    1c4a:	67 2b       	or	r22, r23
    1c4c:	19 f4       	brne	.+6      	; 0x1c54 <print_char+0xa>
    1c4e:	0e 94 7b 0c 	call	0x18f6	; 0x18f6 <OLED_print_char>
    1c52:	08 95       	ret
    1c54:	0e 94 b7 0c 	call	0x196e	; 0x196e <OLED_print_char_inverse>
    1c58:	08 95       	ret

00001c5a <SPI_init>:
    1c5a:	8b b7       	in	r24, 0x3b	; 59
    1c5c:	80 64       	ori	r24, 0x40	; 64
    1c5e:	8b bf       	out	0x3b, r24	; 59
    1c60:	85 b7       	in	r24, 0x35	; 53
    1c62:	8d 7f       	andi	r24, 0xFD	; 253
    1c64:	85 bf       	out	0x35, r24	; 53
    1c66:	85 b7       	in	r24, 0x35	; 53
    1c68:	8e 7f       	andi	r24, 0xFE	; 254
    1c6a:	85 bf       	out	0x35, r24	; 53
    1c6c:	bd 9a       	sbi	0x17, 5	; 23
    1c6e:	bf 9a       	sbi	0x17, 7	; 23
    1c70:	bc 9a       	sbi	0x17, 4	; 23
    1c72:	6c 9a       	sbi	0x0d, 4	; 13
    1c74:	6e 9a       	sbi	0x0d, 6	; 13
    1c76:	68 9a       	sbi	0x0d, 0	; 13
    1c78:	69 98       	cbi	0x0d, 1	; 13
    1c7a:	68 98       	cbi	0x0d, 0	; 13
    1c7c:	08 95       	ret

00001c7e <SPI_send>:
    1c7e:	8f b9       	out	0x0f, r24	; 15
    1c80:	77 9b       	sbis	0x0e, 7	; 14
    1c82:	fe cf       	rjmp	.-4      	; 0x1c80 <SPI_send+0x2>
    1c84:	08 95       	ret

00001c86 <SPI_read>:
    1c86:	80 e0       	ldi	r24, 0x00	; 0
    1c88:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <SPI_send>
    1c8c:	77 9b       	sbis	0x0e, 7	; 14
    1c8e:	fe cf       	rjmp	.-4      	; 0x1c8c <SPI_read+0x6>
    1c90:	8f b1       	in	r24, 0x0f	; 15
    1c92:	08 95       	ret

00001c94 <SPI_select>:
    1c94:	c4 98       	cbi	0x18, 4	; 24
    1c96:	08 95       	ret

00001c98 <SPI_deselect>:
    1c98:	c4 9a       	sbi	0x18, 4	; 24
    1c9a:	08 95       	ret

00001c9c <SRAM_init>:
    1c9c:	85 b7       	in	r24, 0x35	; 53
    1c9e:	80 68       	ori	r24, 0x80	; 128
    1ca0:	85 bf       	out	0x35, r24	; 53
    1ca2:	80 b7       	in	r24, 0x30	; 48
    1ca4:	80 62       	ori	r24, 0x20	; 32
    1ca6:	80 bf       	out	0x30, r24	; 48
    1ca8:	80 b7       	in	r24, 0x30	; 48
    1caa:	8f 7e       	andi	r24, 0xEF	; 239
    1cac:	80 bf       	out	0x30, r24	; 48
    1cae:	80 b7       	in	r24, 0x30	; 48
    1cb0:	87 7f       	andi	r24, 0xF7	; 247
    1cb2:	80 bf       	out	0x30, r24	; 48
    1cb4:	08 95       	ret

00001cb6 <usart_transmit_to_computer>:
    1cb6:	5d 9b       	sbis	0x0b, 5	; 11
    1cb8:	fe cf       	rjmp	.-4      	; 0x1cb6 <usart_transmit_to_computer>
    1cba:	8c b9       	out	0x0c, r24	; 12
    1cbc:	08 95       	ret

00001cbe <usart_receive_from_computer>:
    1cbe:	5f 9b       	sbis	0x0b, 7	; 11
    1cc0:	fe cf       	rjmp	.-4      	; 0x1cbe <usart_receive_from_computer>
    1cc2:	8c b1       	in	r24, 0x0c	; 12
    1cc4:	08 95       	ret

00001cc6 <usart_init>:
    1cc6:	90 bd       	out	0x20, r25	; 32
    1cc8:	89 b9       	out	0x09, r24	; 9
    1cca:	88 e1       	ldi	r24, 0x18	; 24
    1ccc:	8a b9       	out	0x0a, r24	; 10
    1cce:	8e e8       	ldi	r24, 0x8E	; 142
    1cd0:	80 bd       	out	0x20, r24	; 32
    1cd2:	6f e5       	ldi	r22, 0x5F	; 95
    1cd4:	7e e0       	ldi	r23, 0x0E	; 14
    1cd6:	8b e5       	ldi	r24, 0x5B	; 91
    1cd8:	9e e0       	ldi	r25, 0x0E	; 14
    1cda:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <fdevopen>
    1cde:	08 95       	ret

00001ce0 <__divmodhi4>:
    1ce0:	97 fb       	bst	r25, 7
    1ce2:	07 2e       	mov	r0, r23
    1ce4:	16 f4       	brtc	.+4      	; 0x1cea <__divmodhi4+0xa>
    1ce6:	00 94       	com	r0
    1ce8:	07 d0       	rcall	.+14     	; 0x1cf8 <__divmodhi4_neg1>
    1cea:	77 fd       	sbrc	r23, 7
    1cec:	09 d0       	rcall	.+18     	; 0x1d00 <__divmodhi4_neg2>
    1cee:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__udivmodhi4>
    1cf2:	07 fc       	sbrc	r0, 7
    1cf4:	05 d0       	rcall	.+10     	; 0x1d00 <__divmodhi4_neg2>
    1cf6:	3e f4       	brtc	.+14     	; 0x1d06 <__divmodhi4_exit>

00001cf8 <__divmodhi4_neg1>:
    1cf8:	90 95       	com	r25
    1cfa:	81 95       	neg	r24
    1cfc:	9f 4f       	sbci	r25, 0xFF	; 255
    1cfe:	08 95       	ret

00001d00 <__divmodhi4_neg2>:
    1d00:	70 95       	com	r23
    1d02:	61 95       	neg	r22
    1d04:	7f 4f       	sbci	r23, 0xFF	; 255

00001d06 <__divmodhi4_exit>:
    1d06:	08 95       	ret

00001d08 <__udivmodhi4>:
    1d08:	aa 1b       	sub	r26, r26
    1d0a:	bb 1b       	sub	r27, r27
    1d0c:	51 e1       	ldi	r21, 0x11	; 17
    1d0e:	07 c0       	rjmp	.+14     	; 0x1d1e <__udivmodhi4_ep>

00001d10 <__udivmodhi4_loop>:
    1d10:	aa 1f       	adc	r26, r26
    1d12:	bb 1f       	adc	r27, r27
    1d14:	a6 17       	cp	r26, r22
    1d16:	b7 07       	cpc	r27, r23
    1d18:	10 f0       	brcs	.+4      	; 0x1d1e <__udivmodhi4_ep>
    1d1a:	a6 1b       	sub	r26, r22
    1d1c:	b7 0b       	sbc	r27, r23

00001d1e <__udivmodhi4_ep>:
    1d1e:	88 1f       	adc	r24, r24
    1d20:	99 1f       	adc	r25, r25
    1d22:	5a 95       	dec	r21
    1d24:	a9 f7       	brne	.-22     	; 0x1d10 <__udivmodhi4_loop>
    1d26:	80 95       	com	r24
    1d28:	90 95       	com	r25
    1d2a:	bc 01       	movw	r22, r24
    1d2c:	cd 01       	movw	r24, r26
    1d2e:	08 95       	ret

00001d30 <malloc>:
    1d30:	cf 93       	push	r28
    1d32:	df 93       	push	r29
    1d34:	82 30       	cpi	r24, 0x02	; 2
    1d36:	91 05       	cpc	r25, r1
    1d38:	10 f4       	brcc	.+4      	; 0x1d3e <malloc+0xe>
    1d3a:	82 e0       	ldi	r24, 0x02	; 2
    1d3c:	90 e0       	ldi	r25, 0x00	; 0
    1d3e:	e0 91 1a 04 	lds	r30, 0x041A
    1d42:	f0 91 1b 04 	lds	r31, 0x041B
    1d46:	20 e0       	ldi	r18, 0x00	; 0
    1d48:	30 e0       	ldi	r19, 0x00	; 0
    1d4a:	a0 e0       	ldi	r26, 0x00	; 0
    1d4c:	b0 e0       	ldi	r27, 0x00	; 0
    1d4e:	30 97       	sbiw	r30, 0x00	; 0
    1d50:	39 f1       	breq	.+78     	; 0x1da0 <malloc+0x70>
    1d52:	40 81       	ld	r20, Z
    1d54:	51 81       	ldd	r21, Z+1	; 0x01
    1d56:	48 17       	cp	r20, r24
    1d58:	59 07       	cpc	r21, r25
    1d5a:	b8 f0       	brcs	.+46     	; 0x1d8a <malloc+0x5a>
    1d5c:	48 17       	cp	r20, r24
    1d5e:	59 07       	cpc	r21, r25
    1d60:	71 f4       	brne	.+28     	; 0x1d7e <malloc+0x4e>
    1d62:	82 81       	ldd	r24, Z+2	; 0x02
    1d64:	93 81       	ldd	r25, Z+3	; 0x03
    1d66:	10 97       	sbiw	r26, 0x00	; 0
    1d68:	29 f0       	breq	.+10     	; 0x1d74 <malloc+0x44>
    1d6a:	13 96       	adiw	r26, 0x03	; 3
    1d6c:	9c 93       	st	X, r25
    1d6e:	8e 93       	st	-X, r24
    1d70:	12 97       	sbiw	r26, 0x02	; 2
    1d72:	2c c0       	rjmp	.+88     	; 0x1dcc <malloc+0x9c>
    1d74:	90 93 1b 04 	sts	0x041B, r25
    1d78:	80 93 1a 04 	sts	0x041A, r24
    1d7c:	27 c0       	rjmp	.+78     	; 0x1dcc <malloc+0x9c>
    1d7e:	21 15       	cp	r18, r1
    1d80:	31 05       	cpc	r19, r1
    1d82:	31 f0       	breq	.+12     	; 0x1d90 <malloc+0x60>
    1d84:	42 17       	cp	r20, r18
    1d86:	53 07       	cpc	r21, r19
    1d88:	18 f0       	brcs	.+6      	; 0x1d90 <malloc+0x60>
    1d8a:	a9 01       	movw	r20, r18
    1d8c:	db 01       	movw	r26, r22
    1d8e:	01 c0       	rjmp	.+2      	; 0x1d92 <malloc+0x62>
    1d90:	ef 01       	movw	r28, r30
    1d92:	9a 01       	movw	r18, r20
    1d94:	bd 01       	movw	r22, r26
    1d96:	df 01       	movw	r26, r30
    1d98:	02 80       	ldd	r0, Z+2	; 0x02
    1d9a:	f3 81       	ldd	r31, Z+3	; 0x03
    1d9c:	e0 2d       	mov	r30, r0
    1d9e:	d7 cf       	rjmp	.-82     	; 0x1d4e <malloc+0x1e>
    1da0:	21 15       	cp	r18, r1
    1da2:	31 05       	cpc	r19, r1
    1da4:	f9 f0       	breq	.+62     	; 0x1de4 <malloc+0xb4>
    1da6:	28 1b       	sub	r18, r24
    1da8:	39 0b       	sbc	r19, r25
    1daa:	24 30       	cpi	r18, 0x04	; 4
    1dac:	31 05       	cpc	r19, r1
    1dae:	80 f4       	brcc	.+32     	; 0x1dd0 <malloc+0xa0>
    1db0:	8a 81       	ldd	r24, Y+2	; 0x02
    1db2:	9b 81       	ldd	r25, Y+3	; 0x03
    1db4:	61 15       	cp	r22, r1
    1db6:	71 05       	cpc	r23, r1
    1db8:	21 f0       	breq	.+8      	; 0x1dc2 <malloc+0x92>
    1dba:	fb 01       	movw	r30, r22
    1dbc:	93 83       	std	Z+3, r25	; 0x03
    1dbe:	82 83       	std	Z+2, r24	; 0x02
    1dc0:	04 c0       	rjmp	.+8      	; 0x1dca <malloc+0x9a>
    1dc2:	90 93 1b 04 	sts	0x041B, r25
    1dc6:	80 93 1a 04 	sts	0x041A, r24
    1dca:	fe 01       	movw	r30, r28
    1dcc:	32 96       	adiw	r30, 0x02	; 2
    1dce:	44 c0       	rjmp	.+136    	; 0x1e58 <malloc+0x128>
    1dd0:	fe 01       	movw	r30, r28
    1dd2:	e2 0f       	add	r30, r18
    1dd4:	f3 1f       	adc	r31, r19
    1dd6:	81 93       	st	Z+, r24
    1dd8:	91 93       	st	Z+, r25
    1dda:	22 50       	subi	r18, 0x02	; 2
    1ddc:	31 09       	sbc	r19, r1
    1dde:	39 83       	std	Y+1, r19	; 0x01
    1de0:	28 83       	st	Y, r18
    1de2:	3a c0       	rjmp	.+116    	; 0x1e58 <malloc+0x128>
    1de4:	20 91 18 04 	lds	r18, 0x0418
    1de8:	30 91 19 04 	lds	r19, 0x0419
    1dec:	23 2b       	or	r18, r19
    1dee:	41 f4       	brne	.+16     	; 0x1e00 <malloc+0xd0>
    1df0:	20 91 02 01 	lds	r18, 0x0102
    1df4:	30 91 03 01 	lds	r19, 0x0103
    1df8:	30 93 19 04 	sts	0x0419, r19
    1dfc:	20 93 18 04 	sts	0x0418, r18
    1e00:	20 91 00 01 	lds	r18, 0x0100
    1e04:	30 91 01 01 	lds	r19, 0x0101
    1e08:	21 15       	cp	r18, r1
    1e0a:	31 05       	cpc	r19, r1
    1e0c:	41 f4       	brne	.+16     	; 0x1e1e <malloc+0xee>
    1e0e:	2d b7       	in	r18, 0x3d	; 61
    1e10:	3e b7       	in	r19, 0x3e	; 62
    1e12:	40 91 04 01 	lds	r20, 0x0104
    1e16:	50 91 05 01 	lds	r21, 0x0105
    1e1a:	24 1b       	sub	r18, r20
    1e1c:	35 0b       	sbc	r19, r21
    1e1e:	e0 91 18 04 	lds	r30, 0x0418
    1e22:	f0 91 19 04 	lds	r31, 0x0419
    1e26:	e2 17       	cp	r30, r18
    1e28:	f3 07       	cpc	r31, r19
    1e2a:	a0 f4       	brcc	.+40     	; 0x1e54 <malloc+0x124>
    1e2c:	2e 1b       	sub	r18, r30
    1e2e:	3f 0b       	sbc	r19, r31
    1e30:	28 17       	cp	r18, r24
    1e32:	39 07       	cpc	r19, r25
    1e34:	78 f0       	brcs	.+30     	; 0x1e54 <malloc+0x124>
    1e36:	ac 01       	movw	r20, r24
    1e38:	4e 5f       	subi	r20, 0xFE	; 254
    1e3a:	5f 4f       	sbci	r21, 0xFF	; 255
    1e3c:	24 17       	cp	r18, r20
    1e3e:	35 07       	cpc	r19, r21
    1e40:	48 f0       	brcs	.+18     	; 0x1e54 <malloc+0x124>
    1e42:	4e 0f       	add	r20, r30
    1e44:	5f 1f       	adc	r21, r31
    1e46:	50 93 19 04 	sts	0x0419, r21
    1e4a:	40 93 18 04 	sts	0x0418, r20
    1e4e:	81 93       	st	Z+, r24
    1e50:	91 93       	st	Z+, r25
    1e52:	02 c0       	rjmp	.+4      	; 0x1e58 <malloc+0x128>
    1e54:	e0 e0       	ldi	r30, 0x00	; 0
    1e56:	f0 e0       	ldi	r31, 0x00	; 0
    1e58:	cf 01       	movw	r24, r30
    1e5a:	df 91       	pop	r29
    1e5c:	cf 91       	pop	r28
    1e5e:	08 95       	ret

00001e60 <free>:
    1e60:	cf 93       	push	r28
    1e62:	df 93       	push	r29
    1e64:	00 97       	sbiw	r24, 0x00	; 0
    1e66:	09 f4       	brne	.+2      	; 0x1e6a <free+0xa>
    1e68:	87 c0       	rjmp	.+270    	; 0x1f78 <free+0x118>
    1e6a:	fc 01       	movw	r30, r24
    1e6c:	32 97       	sbiw	r30, 0x02	; 2
    1e6e:	13 82       	std	Z+3, r1	; 0x03
    1e70:	12 82       	std	Z+2, r1	; 0x02
    1e72:	c0 91 1a 04 	lds	r28, 0x041A
    1e76:	d0 91 1b 04 	lds	r29, 0x041B
    1e7a:	20 97       	sbiw	r28, 0x00	; 0
    1e7c:	81 f4       	brne	.+32     	; 0x1e9e <free+0x3e>
    1e7e:	20 81       	ld	r18, Z
    1e80:	31 81       	ldd	r19, Z+1	; 0x01
    1e82:	28 0f       	add	r18, r24
    1e84:	39 1f       	adc	r19, r25
    1e86:	80 91 18 04 	lds	r24, 0x0418
    1e8a:	90 91 19 04 	lds	r25, 0x0419
    1e8e:	82 17       	cp	r24, r18
    1e90:	93 07       	cpc	r25, r19
    1e92:	79 f5       	brne	.+94     	; 0x1ef2 <free+0x92>
    1e94:	f0 93 19 04 	sts	0x0419, r31
    1e98:	e0 93 18 04 	sts	0x0418, r30
    1e9c:	6d c0       	rjmp	.+218    	; 0x1f78 <free+0x118>
    1e9e:	de 01       	movw	r26, r28
    1ea0:	20 e0       	ldi	r18, 0x00	; 0
    1ea2:	30 e0       	ldi	r19, 0x00	; 0
    1ea4:	ae 17       	cp	r26, r30
    1ea6:	bf 07       	cpc	r27, r31
    1ea8:	50 f4       	brcc	.+20     	; 0x1ebe <free+0x5e>
    1eaa:	12 96       	adiw	r26, 0x02	; 2
    1eac:	4d 91       	ld	r20, X+
    1eae:	5c 91       	ld	r21, X
    1eb0:	13 97       	sbiw	r26, 0x03	; 3
    1eb2:	9d 01       	movw	r18, r26
    1eb4:	41 15       	cp	r20, r1
    1eb6:	51 05       	cpc	r21, r1
    1eb8:	09 f1       	breq	.+66     	; 0x1efc <free+0x9c>
    1eba:	da 01       	movw	r26, r20
    1ebc:	f3 cf       	rjmp	.-26     	; 0x1ea4 <free+0x44>
    1ebe:	b3 83       	std	Z+3, r27	; 0x03
    1ec0:	a2 83       	std	Z+2, r26	; 0x02
    1ec2:	40 81       	ld	r20, Z
    1ec4:	51 81       	ldd	r21, Z+1	; 0x01
    1ec6:	84 0f       	add	r24, r20
    1ec8:	95 1f       	adc	r25, r21
    1eca:	8a 17       	cp	r24, r26
    1ecc:	9b 07       	cpc	r25, r27
    1ece:	71 f4       	brne	.+28     	; 0x1eec <free+0x8c>
    1ed0:	8d 91       	ld	r24, X+
    1ed2:	9c 91       	ld	r25, X
    1ed4:	11 97       	sbiw	r26, 0x01	; 1
    1ed6:	84 0f       	add	r24, r20
    1ed8:	95 1f       	adc	r25, r21
    1eda:	02 96       	adiw	r24, 0x02	; 2
    1edc:	91 83       	std	Z+1, r25	; 0x01
    1ede:	80 83       	st	Z, r24
    1ee0:	12 96       	adiw	r26, 0x02	; 2
    1ee2:	8d 91       	ld	r24, X+
    1ee4:	9c 91       	ld	r25, X
    1ee6:	13 97       	sbiw	r26, 0x03	; 3
    1ee8:	93 83       	std	Z+3, r25	; 0x03
    1eea:	82 83       	std	Z+2, r24	; 0x02
    1eec:	21 15       	cp	r18, r1
    1eee:	31 05       	cpc	r19, r1
    1ef0:	29 f4       	brne	.+10     	; 0x1efc <free+0x9c>
    1ef2:	f0 93 1b 04 	sts	0x041B, r31
    1ef6:	e0 93 1a 04 	sts	0x041A, r30
    1efa:	3e c0       	rjmp	.+124    	; 0x1f78 <free+0x118>
    1efc:	d9 01       	movw	r26, r18
    1efe:	13 96       	adiw	r26, 0x03	; 3
    1f00:	fc 93       	st	X, r31
    1f02:	ee 93       	st	-X, r30
    1f04:	12 97       	sbiw	r26, 0x02	; 2
    1f06:	4d 91       	ld	r20, X+
    1f08:	5d 91       	ld	r21, X+
    1f0a:	a4 0f       	add	r26, r20
    1f0c:	b5 1f       	adc	r27, r21
    1f0e:	ea 17       	cp	r30, r26
    1f10:	fb 07       	cpc	r31, r27
    1f12:	79 f4       	brne	.+30     	; 0x1f32 <free+0xd2>
    1f14:	80 81       	ld	r24, Z
    1f16:	91 81       	ldd	r25, Z+1	; 0x01
    1f18:	84 0f       	add	r24, r20
    1f1a:	95 1f       	adc	r25, r21
    1f1c:	02 96       	adiw	r24, 0x02	; 2
    1f1e:	d9 01       	movw	r26, r18
    1f20:	11 96       	adiw	r26, 0x01	; 1
    1f22:	9c 93       	st	X, r25
    1f24:	8e 93       	st	-X, r24
    1f26:	82 81       	ldd	r24, Z+2	; 0x02
    1f28:	93 81       	ldd	r25, Z+3	; 0x03
    1f2a:	13 96       	adiw	r26, 0x03	; 3
    1f2c:	9c 93       	st	X, r25
    1f2e:	8e 93       	st	-X, r24
    1f30:	12 97       	sbiw	r26, 0x02	; 2
    1f32:	e0 e0       	ldi	r30, 0x00	; 0
    1f34:	f0 e0       	ldi	r31, 0x00	; 0
    1f36:	8a 81       	ldd	r24, Y+2	; 0x02
    1f38:	9b 81       	ldd	r25, Y+3	; 0x03
    1f3a:	00 97       	sbiw	r24, 0x00	; 0
    1f3c:	19 f0       	breq	.+6      	; 0x1f44 <free+0xe4>
    1f3e:	fe 01       	movw	r30, r28
    1f40:	ec 01       	movw	r28, r24
    1f42:	f9 cf       	rjmp	.-14     	; 0x1f36 <free+0xd6>
    1f44:	ce 01       	movw	r24, r28
    1f46:	02 96       	adiw	r24, 0x02	; 2
    1f48:	28 81       	ld	r18, Y
    1f4a:	39 81       	ldd	r19, Y+1	; 0x01
    1f4c:	82 0f       	add	r24, r18
    1f4e:	93 1f       	adc	r25, r19
    1f50:	20 91 18 04 	lds	r18, 0x0418
    1f54:	30 91 19 04 	lds	r19, 0x0419
    1f58:	28 17       	cp	r18, r24
    1f5a:	39 07       	cpc	r19, r25
    1f5c:	69 f4       	brne	.+26     	; 0x1f78 <free+0x118>
    1f5e:	30 97       	sbiw	r30, 0x00	; 0
    1f60:	29 f4       	brne	.+10     	; 0x1f6c <free+0x10c>
    1f62:	10 92 1b 04 	sts	0x041B, r1
    1f66:	10 92 1a 04 	sts	0x041A, r1
    1f6a:	02 c0       	rjmp	.+4      	; 0x1f70 <free+0x110>
    1f6c:	13 82       	std	Z+3, r1	; 0x03
    1f6e:	12 82       	std	Z+2, r1	; 0x02
    1f70:	d0 93 19 04 	sts	0x0419, r29
    1f74:	c0 93 18 04 	sts	0x0418, r28
    1f78:	df 91       	pop	r29
    1f7a:	cf 91       	pop	r28
    1f7c:	08 95       	ret

00001f7e <fdevopen>:
    1f7e:	0f 93       	push	r16
    1f80:	1f 93       	push	r17
    1f82:	cf 93       	push	r28
    1f84:	df 93       	push	r29
    1f86:	ec 01       	movw	r28, r24
    1f88:	8b 01       	movw	r16, r22
    1f8a:	00 97       	sbiw	r24, 0x00	; 0
    1f8c:	31 f4       	brne	.+12     	; 0x1f9a <fdevopen+0x1c>
    1f8e:	61 15       	cp	r22, r1
    1f90:	71 05       	cpc	r23, r1
    1f92:	19 f4       	brne	.+6      	; 0x1f9a <fdevopen+0x1c>
    1f94:	80 e0       	ldi	r24, 0x00	; 0
    1f96:	90 e0       	ldi	r25, 0x00	; 0
    1f98:	38 c0       	rjmp	.+112    	; 0x200a <fdevopen+0x8c>
    1f9a:	6e e0       	ldi	r22, 0x0E	; 14
    1f9c:	70 e0       	ldi	r23, 0x00	; 0
    1f9e:	81 e0       	ldi	r24, 0x01	; 1
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	0e 94 8a 12 	call	0x2514	; 0x2514 <calloc>
    1fa6:	fc 01       	movw	r30, r24
    1fa8:	00 97       	sbiw	r24, 0x00	; 0
    1faa:	a1 f3       	breq	.-24     	; 0x1f94 <fdevopen+0x16>
    1fac:	80 e8       	ldi	r24, 0x80	; 128
    1fae:	83 83       	std	Z+3, r24	; 0x03
    1fb0:	01 15       	cp	r16, r1
    1fb2:	11 05       	cpc	r17, r1
    1fb4:	71 f0       	breq	.+28     	; 0x1fd2 <fdevopen+0x54>
    1fb6:	13 87       	std	Z+11, r17	; 0x0b
    1fb8:	02 87       	std	Z+10, r16	; 0x0a
    1fba:	81 e8       	ldi	r24, 0x81	; 129
    1fbc:	83 83       	std	Z+3, r24	; 0x03
    1fbe:	80 91 1c 04 	lds	r24, 0x041C
    1fc2:	90 91 1d 04 	lds	r25, 0x041D
    1fc6:	89 2b       	or	r24, r25
    1fc8:	21 f4       	brne	.+8      	; 0x1fd2 <fdevopen+0x54>
    1fca:	f0 93 1d 04 	sts	0x041D, r31
    1fce:	e0 93 1c 04 	sts	0x041C, r30
    1fd2:	20 97       	sbiw	r28, 0x00	; 0
    1fd4:	c9 f0       	breq	.+50     	; 0x2008 <fdevopen+0x8a>
    1fd6:	d1 87       	std	Z+9, r29	; 0x09
    1fd8:	c0 87       	std	Z+8, r28	; 0x08
    1fda:	83 81       	ldd	r24, Z+3	; 0x03
    1fdc:	82 60       	ori	r24, 0x02	; 2
    1fde:	83 83       	std	Z+3, r24	; 0x03
    1fe0:	80 91 1e 04 	lds	r24, 0x041E
    1fe4:	90 91 1f 04 	lds	r25, 0x041F
    1fe8:	89 2b       	or	r24, r25
    1fea:	71 f4       	brne	.+28     	; 0x2008 <fdevopen+0x8a>
    1fec:	f0 93 1f 04 	sts	0x041F, r31
    1ff0:	e0 93 1e 04 	sts	0x041E, r30
    1ff4:	80 91 20 04 	lds	r24, 0x0420
    1ff8:	90 91 21 04 	lds	r25, 0x0421
    1ffc:	89 2b       	or	r24, r25
    1ffe:	21 f4       	brne	.+8      	; 0x2008 <fdevopen+0x8a>
    2000:	f0 93 21 04 	sts	0x0421, r31
    2004:	e0 93 20 04 	sts	0x0420, r30
    2008:	cf 01       	movw	r24, r30
    200a:	df 91       	pop	r29
    200c:	cf 91       	pop	r28
    200e:	1f 91       	pop	r17
    2010:	0f 91       	pop	r16
    2012:	08 95       	ret

00002014 <fprintf>:
    2014:	a0 e0       	ldi	r26, 0x00	; 0
    2016:	b0 e0       	ldi	r27, 0x00	; 0
    2018:	e0 e1       	ldi	r30, 0x10	; 16
    201a:	f0 e1       	ldi	r31, 0x10	; 16
    201c:	0c 94 31 13 	jmp	0x2662	; 0x2662 <__prologue_saves__+0x20>
    2020:	ae 01       	movw	r20, r28
    2022:	47 5f       	subi	r20, 0xF7	; 247
    2024:	5f 4f       	sbci	r21, 0xFF	; 255
    2026:	6f 81       	ldd	r22, Y+7	; 0x07
    2028:	78 85       	ldd	r23, Y+8	; 0x08
    202a:	8d 81       	ldd	r24, Y+5	; 0x05
    202c:	9e 81       	ldd	r25, Y+6	; 0x06
    202e:	0e 94 b8 10 	call	0x2170	; 0x2170 <vfprintf>
    2032:	e2 e0       	ldi	r30, 0x02	; 2
    2034:	0c 94 4d 13 	jmp	0x269a	; 0x269a <__epilogue_restores__+0x20>

00002038 <fputc>:
    2038:	0f 93       	push	r16
    203a:	1f 93       	push	r17
    203c:	cf 93       	push	r28
    203e:	df 93       	push	r29
    2040:	18 2f       	mov	r17, r24
    2042:	09 2f       	mov	r16, r25
    2044:	eb 01       	movw	r28, r22
    2046:	8b 81       	ldd	r24, Y+3	; 0x03
    2048:	81 fd       	sbrc	r24, 1
    204a:	03 c0       	rjmp	.+6      	; 0x2052 <fputc+0x1a>
    204c:	8f ef       	ldi	r24, 0xFF	; 255
    204e:	9f ef       	ldi	r25, 0xFF	; 255
    2050:	20 c0       	rjmp	.+64     	; 0x2092 <fputc+0x5a>
    2052:	82 ff       	sbrs	r24, 2
    2054:	10 c0       	rjmp	.+32     	; 0x2076 <fputc+0x3e>
    2056:	4e 81       	ldd	r20, Y+6	; 0x06
    2058:	5f 81       	ldd	r21, Y+7	; 0x07
    205a:	2c 81       	ldd	r18, Y+4	; 0x04
    205c:	3d 81       	ldd	r19, Y+5	; 0x05
    205e:	42 17       	cp	r20, r18
    2060:	53 07       	cpc	r21, r19
    2062:	7c f4       	brge	.+30     	; 0x2082 <fputc+0x4a>
    2064:	e8 81       	ld	r30, Y
    2066:	f9 81       	ldd	r31, Y+1	; 0x01
    2068:	9f 01       	movw	r18, r30
    206a:	2f 5f       	subi	r18, 0xFF	; 255
    206c:	3f 4f       	sbci	r19, 0xFF	; 255
    206e:	39 83       	std	Y+1, r19	; 0x01
    2070:	28 83       	st	Y, r18
    2072:	10 83       	st	Z, r17
    2074:	06 c0       	rjmp	.+12     	; 0x2082 <fputc+0x4a>
    2076:	e8 85       	ldd	r30, Y+8	; 0x08
    2078:	f9 85       	ldd	r31, Y+9	; 0x09
    207a:	81 2f       	mov	r24, r17
    207c:	09 95       	icall
    207e:	89 2b       	or	r24, r25
    2080:	29 f7       	brne	.-54     	; 0x204c <fputc+0x14>
    2082:	2e 81       	ldd	r18, Y+6	; 0x06
    2084:	3f 81       	ldd	r19, Y+7	; 0x07
    2086:	2f 5f       	subi	r18, 0xFF	; 255
    2088:	3f 4f       	sbci	r19, 0xFF	; 255
    208a:	3f 83       	std	Y+7, r19	; 0x07
    208c:	2e 83       	std	Y+6, r18	; 0x06
    208e:	81 2f       	mov	r24, r17
    2090:	90 2f       	mov	r25, r16
    2092:	df 91       	pop	r29
    2094:	cf 91       	pop	r28
    2096:	1f 91       	pop	r17
    2098:	0f 91       	pop	r16
    209a:	08 95       	ret

0000209c <fputs>:
    209c:	ef 92       	push	r14
    209e:	ff 92       	push	r15
    20a0:	0f 93       	push	r16
    20a2:	1f 93       	push	r17
    20a4:	cf 93       	push	r28
    20a6:	df 93       	push	r29
    20a8:	8b 01       	movw	r16, r22
    20aa:	db 01       	movw	r26, r22
    20ac:	13 96       	adiw	r26, 0x03	; 3
    20ae:	2c 91       	ld	r18, X
    20b0:	21 ff       	sbrs	r18, 1
    20b2:	16 c0       	rjmp	.+44     	; 0x20e0 <fputs+0x44>
    20b4:	ec 01       	movw	r28, r24
    20b6:	e1 2c       	mov	r14, r1
    20b8:	f1 2c       	mov	r15, r1
    20ba:	89 91       	ld	r24, Y+
    20bc:	88 23       	and	r24, r24
    20be:	71 f0       	breq	.+28     	; 0x20dc <fputs+0x40>
    20c0:	d8 01       	movw	r26, r16
    20c2:	18 96       	adiw	r26, 0x08	; 8
    20c4:	ed 91       	ld	r30, X+
    20c6:	fc 91       	ld	r31, X
    20c8:	19 97       	sbiw	r26, 0x09	; 9
    20ca:	b8 01       	movw	r22, r16
    20cc:	09 95       	icall
    20ce:	89 2b       	or	r24, r25
    20d0:	a1 f3       	breq	.-24     	; 0x20ba <fputs+0x1e>
    20d2:	ee 24       	eor	r14, r14
    20d4:	ea 94       	dec	r14
    20d6:	ff 24       	eor	r15, r15
    20d8:	fa 94       	dec	r15
    20da:	ef cf       	rjmp	.-34     	; 0x20ba <fputs+0x1e>
    20dc:	c7 01       	movw	r24, r14
    20de:	02 c0       	rjmp	.+4      	; 0x20e4 <fputs+0x48>
    20e0:	8f ef       	ldi	r24, 0xFF	; 255
    20e2:	9f ef       	ldi	r25, 0xFF	; 255
    20e4:	cd b7       	in	r28, 0x3d	; 61
    20e6:	de b7       	in	r29, 0x3e	; 62
    20e8:	e6 e0       	ldi	r30, 0x06	; 6
    20ea:	0c 94 49 13 	jmp	0x2692	; 0x2692 <__epilogue_restores__+0x18>

000020ee <printf>:
    20ee:	a0 e0       	ldi	r26, 0x00	; 0
    20f0:	b0 e0       	ldi	r27, 0x00	; 0
    20f2:	ed e7       	ldi	r30, 0x7D	; 125
    20f4:	f0 e1       	ldi	r31, 0x10	; 16
    20f6:	0c 94 31 13 	jmp	0x2662	; 0x2662 <__prologue_saves__+0x20>
    20fa:	fe 01       	movw	r30, r28
    20fc:	35 96       	adiw	r30, 0x05	; 5
    20fe:	61 91       	ld	r22, Z+
    2100:	71 91       	ld	r23, Z+
    2102:	af 01       	movw	r20, r30
    2104:	80 91 1e 04 	lds	r24, 0x041E
    2108:	90 91 1f 04 	lds	r25, 0x041F
    210c:	0e 94 b8 10 	call	0x2170	; 0x2170 <vfprintf>
    2110:	e2 e0       	ldi	r30, 0x02	; 2
    2112:	0c 94 4d 13 	jmp	0x269a	; 0x269a <__epilogue_restores__+0x20>

00002116 <puts>:
    2116:	0f 93       	push	r16
    2118:	1f 93       	push	r17
    211a:	cf 93       	push	r28
    211c:	df 93       	push	r29
    211e:	e0 91 1e 04 	lds	r30, 0x041E
    2122:	f0 91 1f 04 	lds	r31, 0x041F
    2126:	23 81       	ldd	r18, Z+3	; 0x03
    2128:	21 ff       	sbrs	r18, 1
    212a:	1b c0       	rjmp	.+54     	; 0x2162 <puts+0x4c>
    212c:	ec 01       	movw	r28, r24
    212e:	00 e0       	ldi	r16, 0x00	; 0
    2130:	10 e0       	ldi	r17, 0x00	; 0
    2132:	89 91       	ld	r24, Y+
    2134:	60 91 1e 04 	lds	r22, 0x041E
    2138:	70 91 1f 04 	lds	r23, 0x041F
    213c:	db 01       	movw	r26, r22
    213e:	18 96       	adiw	r26, 0x08	; 8
    2140:	ed 91       	ld	r30, X+
    2142:	fc 91       	ld	r31, X
    2144:	19 97       	sbiw	r26, 0x09	; 9
    2146:	88 23       	and	r24, r24
    2148:	31 f0       	breq	.+12     	; 0x2156 <puts+0x40>
    214a:	09 95       	icall
    214c:	89 2b       	or	r24, r25
    214e:	89 f3       	breq	.-30     	; 0x2132 <puts+0x1c>
    2150:	0f ef       	ldi	r16, 0xFF	; 255
    2152:	1f ef       	ldi	r17, 0xFF	; 255
    2154:	ee cf       	rjmp	.-36     	; 0x2132 <puts+0x1c>
    2156:	8a e0       	ldi	r24, 0x0A	; 10
    2158:	09 95       	icall
    215a:	89 2b       	or	r24, r25
    215c:	11 f4       	brne	.+4      	; 0x2162 <puts+0x4c>
    215e:	c8 01       	movw	r24, r16
    2160:	02 c0       	rjmp	.+4      	; 0x2166 <puts+0x50>
    2162:	8f ef       	ldi	r24, 0xFF	; 255
    2164:	9f ef       	ldi	r25, 0xFF	; 255
    2166:	df 91       	pop	r29
    2168:	cf 91       	pop	r28
    216a:	1f 91       	pop	r17
    216c:	0f 91       	pop	r16
    216e:	08 95       	ret

00002170 <vfprintf>:
    2170:	ac e0       	ldi	r26, 0x0C	; 12
    2172:	b0 e0       	ldi	r27, 0x00	; 0
    2174:	ee eb       	ldi	r30, 0xBE	; 190
    2176:	f0 e1       	ldi	r31, 0x10	; 16
    2178:	0c 94 21 13 	jmp	0x2642	; 0x2642 <__prologue_saves__>
    217c:	7c 01       	movw	r14, r24
    217e:	6b 01       	movw	r12, r22
    2180:	8a 01       	movw	r16, r20
    2182:	fc 01       	movw	r30, r24
    2184:	17 82       	std	Z+7, r1	; 0x07
    2186:	16 82       	std	Z+6, r1	; 0x06
    2188:	83 81       	ldd	r24, Z+3	; 0x03
    218a:	81 ff       	sbrs	r24, 1
    218c:	bd c1       	rjmp	.+890    	; 0x2508 <vfprintf+0x398>
    218e:	ce 01       	movw	r24, r28
    2190:	01 96       	adiw	r24, 0x01	; 1
    2192:	4c 01       	movw	r8, r24
    2194:	f7 01       	movw	r30, r14
    2196:	93 81       	ldd	r25, Z+3	; 0x03
    2198:	f6 01       	movw	r30, r12
    219a:	93 fd       	sbrc	r25, 3
    219c:	85 91       	lpm	r24, Z+
    219e:	93 ff       	sbrs	r25, 3
    21a0:	81 91       	ld	r24, Z+
    21a2:	6f 01       	movw	r12, r30
    21a4:	88 23       	and	r24, r24
    21a6:	09 f4       	brne	.+2      	; 0x21aa <vfprintf+0x3a>
    21a8:	ab c1       	rjmp	.+854    	; 0x2500 <vfprintf+0x390>
    21aa:	85 32       	cpi	r24, 0x25	; 37
    21ac:	39 f4       	brne	.+14     	; 0x21bc <vfprintf+0x4c>
    21ae:	93 fd       	sbrc	r25, 3
    21b0:	85 91       	lpm	r24, Z+
    21b2:	93 ff       	sbrs	r25, 3
    21b4:	81 91       	ld	r24, Z+
    21b6:	6f 01       	movw	r12, r30
    21b8:	85 32       	cpi	r24, 0x25	; 37
    21ba:	29 f4       	brne	.+10     	; 0x21c6 <vfprintf+0x56>
    21bc:	b7 01       	movw	r22, r14
    21be:	90 e0       	ldi	r25, 0x00	; 0
    21c0:	0e 94 1c 10 	call	0x2038	; 0x2038 <fputc>
    21c4:	e7 cf       	rjmp	.-50     	; 0x2194 <vfprintf+0x24>
    21c6:	51 2c       	mov	r5, r1
    21c8:	31 2c       	mov	r3, r1
    21ca:	20 e0       	ldi	r18, 0x00	; 0
    21cc:	20 32       	cpi	r18, 0x20	; 32
    21ce:	a0 f4       	brcc	.+40     	; 0x21f8 <vfprintf+0x88>
    21d0:	8b 32       	cpi	r24, 0x2B	; 43
    21d2:	69 f0       	breq	.+26     	; 0x21ee <vfprintf+0x7e>
    21d4:	30 f4       	brcc	.+12     	; 0x21e2 <vfprintf+0x72>
    21d6:	80 32       	cpi	r24, 0x20	; 32
    21d8:	59 f0       	breq	.+22     	; 0x21f0 <vfprintf+0x80>
    21da:	83 32       	cpi	r24, 0x23	; 35
    21dc:	69 f4       	brne	.+26     	; 0x21f8 <vfprintf+0x88>
    21de:	20 61       	ori	r18, 0x10	; 16
    21e0:	2c c0       	rjmp	.+88     	; 0x223a <vfprintf+0xca>
    21e2:	8d 32       	cpi	r24, 0x2D	; 45
    21e4:	39 f0       	breq	.+14     	; 0x21f4 <vfprintf+0x84>
    21e6:	80 33       	cpi	r24, 0x30	; 48
    21e8:	39 f4       	brne	.+14     	; 0x21f8 <vfprintf+0x88>
    21ea:	21 60       	ori	r18, 0x01	; 1
    21ec:	26 c0       	rjmp	.+76     	; 0x223a <vfprintf+0xca>
    21ee:	22 60       	ori	r18, 0x02	; 2
    21f0:	24 60       	ori	r18, 0x04	; 4
    21f2:	23 c0       	rjmp	.+70     	; 0x223a <vfprintf+0xca>
    21f4:	28 60       	ori	r18, 0x08	; 8
    21f6:	21 c0       	rjmp	.+66     	; 0x223a <vfprintf+0xca>
    21f8:	27 fd       	sbrc	r18, 7
    21fa:	27 c0       	rjmp	.+78     	; 0x224a <vfprintf+0xda>
    21fc:	30 ed       	ldi	r19, 0xD0	; 208
    21fe:	38 0f       	add	r19, r24
    2200:	3a 30       	cpi	r19, 0x0A	; 10
    2202:	78 f4       	brcc	.+30     	; 0x2222 <vfprintf+0xb2>
    2204:	26 ff       	sbrs	r18, 6
    2206:	06 c0       	rjmp	.+12     	; 0x2214 <vfprintf+0xa4>
    2208:	fa e0       	ldi	r31, 0x0A	; 10
    220a:	5f 9e       	mul	r5, r31
    220c:	30 0d       	add	r19, r0
    220e:	11 24       	eor	r1, r1
    2210:	53 2e       	mov	r5, r19
    2212:	13 c0       	rjmp	.+38     	; 0x223a <vfprintf+0xca>
    2214:	8a e0       	ldi	r24, 0x0A	; 10
    2216:	38 9e       	mul	r3, r24
    2218:	30 0d       	add	r19, r0
    221a:	11 24       	eor	r1, r1
    221c:	33 2e       	mov	r3, r19
    221e:	20 62       	ori	r18, 0x20	; 32
    2220:	0c c0       	rjmp	.+24     	; 0x223a <vfprintf+0xca>
    2222:	8e 32       	cpi	r24, 0x2E	; 46
    2224:	21 f4       	brne	.+8      	; 0x222e <vfprintf+0xbe>
    2226:	26 fd       	sbrc	r18, 6
    2228:	6b c1       	rjmp	.+726    	; 0x2500 <vfprintf+0x390>
    222a:	20 64       	ori	r18, 0x40	; 64
    222c:	06 c0       	rjmp	.+12     	; 0x223a <vfprintf+0xca>
    222e:	8c 36       	cpi	r24, 0x6C	; 108
    2230:	11 f4       	brne	.+4      	; 0x2236 <vfprintf+0xc6>
    2232:	20 68       	ori	r18, 0x80	; 128
    2234:	02 c0       	rjmp	.+4      	; 0x223a <vfprintf+0xca>
    2236:	88 36       	cpi	r24, 0x68	; 104
    2238:	41 f4       	brne	.+16     	; 0x224a <vfprintf+0xda>
    223a:	f6 01       	movw	r30, r12
    223c:	93 fd       	sbrc	r25, 3
    223e:	85 91       	lpm	r24, Z+
    2240:	93 ff       	sbrs	r25, 3
    2242:	81 91       	ld	r24, Z+
    2244:	6f 01       	movw	r12, r30
    2246:	81 11       	cpse	r24, r1
    2248:	c1 cf       	rjmp	.-126    	; 0x21cc <vfprintf+0x5c>
    224a:	98 2f       	mov	r25, r24
    224c:	9f 7d       	andi	r25, 0xDF	; 223
    224e:	95 54       	subi	r25, 0x45	; 69
    2250:	93 30       	cpi	r25, 0x03	; 3
    2252:	28 f4       	brcc	.+10     	; 0x225e <vfprintf+0xee>
    2254:	0c 5f       	subi	r16, 0xFC	; 252
    2256:	1f 4f       	sbci	r17, 0xFF	; 255
    2258:	ff e3       	ldi	r31, 0x3F	; 63
    225a:	f9 83       	std	Y+1, r31	; 0x01
    225c:	0d c0       	rjmp	.+26     	; 0x2278 <vfprintf+0x108>
    225e:	83 36       	cpi	r24, 0x63	; 99
    2260:	31 f0       	breq	.+12     	; 0x226e <vfprintf+0xfe>
    2262:	83 37       	cpi	r24, 0x73	; 115
    2264:	71 f0       	breq	.+28     	; 0x2282 <vfprintf+0x112>
    2266:	83 35       	cpi	r24, 0x53	; 83
    2268:	09 f0       	breq	.+2      	; 0x226c <vfprintf+0xfc>
    226a:	5b c0       	rjmp	.+182    	; 0x2322 <vfprintf+0x1b2>
    226c:	22 c0       	rjmp	.+68     	; 0x22b2 <vfprintf+0x142>
    226e:	f8 01       	movw	r30, r16
    2270:	80 81       	ld	r24, Z
    2272:	89 83       	std	Y+1, r24	; 0x01
    2274:	0e 5f       	subi	r16, 0xFE	; 254
    2276:	1f 4f       	sbci	r17, 0xFF	; 255
    2278:	44 24       	eor	r4, r4
    227a:	43 94       	inc	r4
    227c:	51 2c       	mov	r5, r1
    227e:	54 01       	movw	r10, r8
    2280:	15 c0       	rjmp	.+42     	; 0x22ac <vfprintf+0x13c>
    2282:	38 01       	movw	r6, r16
    2284:	f2 e0       	ldi	r31, 0x02	; 2
    2286:	6f 0e       	add	r6, r31
    2288:	71 1c       	adc	r7, r1
    228a:	f8 01       	movw	r30, r16
    228c:	a0 80       	ld	r10, Z
    228e:	b1 80       	ldd	r11, Z+1	; 0x01
    2290:	26 ff       	sbrs	r18, 6
    2292:	03 c0       	rjmp	.+6      	; 0x229a <vfprintf+0x12a>
    2294:	65 2d       	mov	r22, r5
    2296:	70 e0       	ldi	r23, 0x00	; 0
    2298:	02 c0       	rjmp	.+4      	; 0x229e <vfprintf+0x12e>
    229a:	6f ef       	ldi	r22, 0xFF	; 255
    229c:	7f ef       	ldi	r23, 0xFF	; 255
    229e:	c5 01       	movw	r24, r10
    22a0:	2c 87       	std	Y+12, r18	; 0x0c
    22a2:	0e 94 b8 12 	call	0x2570	; 0x2570 <strnlen>
    22a6:	2c 01       	movw	r4, r24
    22a8:	83 01       	movw	r16, r6
    22aa:	2c 85       	ldd	r18, Y+12	; 0x0c
    22ac:	2f 77       	andi	r18, 0x7F	; 127
    22ae:	22 2e       	mov	r2, r18
    22b0:	17 c0       	rjmp	.+46     	; 0x22e0 <vfprintf+0x170>
    22b2:	38 01       	movw	r6, r16
    22b4:	f2 e0       	ldi	r31, 0x02	; 2
    22b6:	6f 0e       	add	r6, r31
    22b8:	71 1c       	adc	r7, r1
    22ba:	f8 01       	movw	r30, r16
    22bc:	a0 80       	ld	r10, Z
    22be:	b1 80       	ldd	r11, Z+1	; 0x01
    22c0:	26 ff       	sbrs	r18, 6
    22c2:	03 c0       	rjmp	.+6      	; 0x22ca <vfprintf+0x15a>
    22c4:	65 2d       	mov	r22, r5
    22c6:	70 e0       	ldi	r23, 0x00	; 0
    22c8:	02 c0       	rjmp	.+4      	; 0x22ce <vfprintf+0x15e>
    22ca:	6f ef       	ldi	r22, 0xFF	; 255
    22cc:	7f ef       	ldi	r23, 0xFF	; 255
    22ce:	c5 01       	movw	r24, r10
    22d0:	2c 87       	std	Y+12, r18	; 0x0c
    22d2:	0e 94 a6 12 	call	0x254c	; 0x254c <strnlen_P>
    22d6:	2c 01       	movw	r4, r24
    22d8:	2c 85       	ldd	r18, Y+12	; 0x0c
    22da:	20 68       	ori	r18, 0x80	; 128
    22dc:	22 2e       	mov	r2, r18
    22de:	83 01       	movw	r16, r6
    22e0:	23 fc       	sbrc	r2, 3
    22e2:	1b c0       	rjmp	.+54     	; 0x231a <vfprintf+0x1aa>
    22e4:	83 2d       	mov	r24, r3
    22e6:	90 e0       	ldi	r25, 0x00	; 0
    22e8:	48 16       	cp	r4, r24
    22ea:	59 06       	cpc	r5, r25
    22ec:	b0 f4       	brcc	.+44     	; 0x231a <vfprintf+0x1aa>
    22ee:	b7 01       	movw	r22, r14
    22f0:	80 e2       	ldi	r24, 0x20	; 32
    22f2:	90 e0       	ldi	r25, 0x00	; 0
    22f4:	0e 94 1c 10 	call	0x2038	; 0x2038 <fputc>
    22f8:	3a 94       	dec	r3
    22fa:	f4 cf       	rjmp	.-24     	; 0x22e4 <vfprintf+0x174>
    22fc:	f5 01       	movw	r30, r10
    22fe:	27 fc       	sbrc	r2, 7
    2300:	85 91       	lpm	r24, Z+
    2302:	27 fe       	sbrs	r2, 7
    2304:	81 91       	ld	r24, Z+
    2306:	5f 01       	movw	r10, r30
    2308:	b7 01       	movw	r22, r14
    230a:	90 e0       	ldi	r25, 0x00	; 0
    230c:	0e 94 1c 10 	call	0x2038	; 0x2038 <fputc>
    2310:	31 10       	cpse	r3, r1
    2312:	3a 94       	dec	r3
    2314:	f1 e0       	ldi	r31, 0x01	; 1
    2316:	4f 1a       	sub	r4, r31
    2318:	51 08       	sbc	r5, r1
    231a:	41 14       	cp	r4, r1
    231c:	51 04       	cpc	r5, r1
    231e:	71 f7       	brne	.-36     	; 0x22fc <vfprintf+0x18c>
    2320:	e5 c0       	rjmp	.+458    	; 0x24ec <vfprintf+0x37c>
    2322:	84 36       	cpi	r24, 0x64	; 100
    2324:	11 f0       	breq	.+4      	; 0x232a <vfprintf+0x1ba>
    2326:	89 36       	cpi	r24, 0x69	; 105
    2328:	39 f5       	brne	.+78     	; 0x2378 <vfprintf+0x208>
    232a:	f8 01       	movw	r30, r16
    232c:	27 ff       	sbrs	r18, 7
    232e:	07 c0       	rjmp	.+14     	; 0x233e <vfprintf+0x1ce>
    2330:	60 81       	ld	r22, Z
    2332:	71 81       	ldd	r23, Z+1	; 0x01
    2334:	82 81       	ldd	r24, Z+2	; 0x02
    2336:	93 81       	ldd	r25, Z+3	; 0x03
    2338:	0c 5f       	subi	r16, 0xFC	; 252
    233a:	1f 4f       	sbci	r17, 0xFF	; 255
    233c:	08 c0       	rjmp	.+16     	; 0x234e <vfprintf+0x1de>
    233e:	60 81       	ld	r22, Z
    2340:	71 81       	ldd	r23, Z+1	; 0x01
    2342:	88 27       	eor	r24, r24
    2344:	77 fd       	sbrc	r23, 7
    2346:	80 95       	com	r24
    2348:	98 2f       	mov	r25, r24
    234a:	0e 5f       	subi	r16, 0xFE	; 254
    234c:	1f 4f       	sbci	r17, 0xFF	; 255
    234e:	2f 76       	andi	r18, 0x6F	; 111
    2350:	b2 2e       	mov	r11, r18
    2352:	97 ff       	sbrs	r25, 7
    2354:	09 c0       	rjmp	.+18     	; 0x2368 <vfprintf+0x1f8>
    2356:	90 95       	com	r25
    2358:	80 95       	com	r24
    235a:	70 95       	com	r23
    235c:	61 95       	neg	r22
    235e:	7f 4f       	sbci	r23, 0xFF	; 255
    2360:	8f 4f       	sbci	r24, 0xFF	; 255
    2362:	9f 4f       	sbci	r25, 0xFF	; 255
    2364:	20 68       	ori	r18, 0x80	; 128
    2366:	b2 2e       	mov	r11, r18
    2368:	2a e0       	ldi	r18, 0x0A	; 10
    236a:	30 e0       	ldi	r19, 0x00	; 0
    236c:	a4 01       	movw	r20, r8
    236e:	0e 94 c3 12 	call	0x2586	; 0x2586 <__ultoa_invert>
    2372:	a8 2e       	mov	r10, r24
    2374:	a8 18       	sub	r10, r8
    2376:	44 c0       	rjmp	.+136    	; 0x2400 <vfprintf+0x290>
    2378:	85 37       	cpi	r24, 0x75	; 117
    237a:	29 f4       	brne	.+10     	; 0x2386 <vfprintf+0x216>
    237c:	2f 7e       	andi	r18, 0xEF	; 239
    237e:	b2 2e       	mov	r11, r18
    2380:	2a e0       	ldi	r18, 0x0A	; 10
    2382:	30 e0       	ldi	r19, 0x00	; 0
    2384:	25 c0       	rjmp	.+74     	; 0x23d0 <vfprintf+0x260>
    2386:	f2 2f       	mov	r31, r18
    2388:	f9 7f       	andi	r31, 0xF9	; 249
    238a:	bf 2e       	mov	r11, r31
    238c:	8f 36       	cpi	r24, 0x6F	; 111
    238e:	c1 f0       	breq	.+48     	; 0x23c0 <vfprintf+0x250>
    2390:	18 f4       	brcc	.+6      	; 0x2398 <vfprintf+0x228>
    2392:	88 35       	cpi	r24, 0x58	; 88
    2394:	79 f0       	breq	.+30     	; 0x23b4 <vfprintf+0x244>
    2396:	b4 c0       	rjmp	.+360    	; 0x2500 <vfprintf+0x390>
    2398:	80 37       	cpi	r24, 0x70	; 112
    239a:	19 f0       	breq	.+6      	; 0x23a2 <vfprintf+0x232>
    239c:	88 37       	cpi	r24, 0x78	; 120
    239e:	21 f0       	breq	.+8      	; 0x23a8 <vfprintf+0x238>
    23a0:	af c0       	rjmp	.+350    	; 0x2500 <vfprintf+0x390>
    23a2:	2f 2f       	mov	r18, r31
    23a4:	20 61       	ori	r18, 0x10	; 16
    23a6:	b2 2e       	mov	r11, r18
    23a8:	b4 fe       	sbrs	r11, 4
    23aa:	0d c0       	rjmp	.+26     	; 0x23c6 <vfprintf+0x256>
    23ac:	8b 2d       	mov	r24, r11
    23ae:	84 60       	ori	r24, 0x04	; 4
    23b0:	b8 2e       	mov	r11, r24
    23b2:	09 c0       	rjmp	.+18     	; 0x23c6 <vfprintf+0x256>
    23b4:	24 ff       	sbrs	r18, 4
    23b6:	0a c0       	rjmp	.+20     	; 0x23cc <vfprintf+0x25c>
    23b8:	9f 2f       	mov	r25, r31
    23ba:	96 60       	ori	r25, 0x06	; 6
    23bc:	b9 2e       	mov	r11, r25
    23be:	06 c0       	rjmp	.+12     	; 0x23cc <vfprintf+0x25c>
    23c0:	28 e0       	ldi	r18, 0x08	; 8
    23c2:	30 e0       	ldi	r19, 0x00	; 0
    23c4:	05 c0       	rjmp	.+10     	; 0x23d0 <vfprintf+0x260>
    23c6:	20 e1       	ldi	r18, 0x10	; 16
    23c8:	30 e0       	ldi	r19, 0x00	; 0
    23ca:	02 c0       	rjmp	.+4      	; 0x23d0 <vfprintf+0x260>
    23cc:	20 e1       	ldi	r18, 0x10	; 16
    23ce:	32 e0       	ldi	r19, 0x02	; 2
    23d0:	f8 01       	movw	r30, r16
    23d2:	b7 fe       	sbrs	r11, 7
    23d4:	07 c0       	rjmp	.+14     	; 0x23e4 <vfprintf+0x274>
    23d6:	60 81       	ld	r22, Z
    23d8:	71 81       	ldd	r23, Z+1	; 0x01
    23da:	82 81       	ldd	r24, Z+2	; 0x02
    23dc:	93 81       	ldd	r25, Z+3	; 0x03
    23de:	0c 5f       	subi	r16, 0xFC	; 252
    23e0:	1f 4f       	sbci	r17, 0xFF	; 255
    23e2:	06 c0       	rjmp	.+12     	; 0x23f0 <vfprintf+0x280>
    23e4:	60 81       	ld	r22, Z
    23e6:	71 81       	ldd	r23, Z+1	; 0x01
    23e8:	80 e0       	ldi	r24, 0x00	; 0
    23ea:	90 e0       	ldi	r25, 0x00	; 0
    23ec:	0e 5f       	subi	r16, 0xFE	; 254
    23ee:	1f 4f       	sbci	r17, 0xFF	; 255
    23f0:	a4 01       	movw	r20, r8
    23f2:	0e 94 c3 12 	call	0x2586	; 0x2586 <__ultoa_invert>
    23f6:	a8 2e       	mov	r10, r24
    23f8:	a8 18       	sub	r10, r8
    23fa:	fb 2d       	mov	r31, r11
    23fc:	ff 77       	andi	r31, 0x7F	; 127
    23fe:	bf 2e       	mov	r11, r31
    2400:	b6 fe       	sbrs	r11, 6
    2402:	0b c0       	rjmp	.+22     	; 0x241a <vfprintf+0x2aa>
    2404:	2b 2d       	mov	r18, r11
    2406:	2e 7f       	andi	r18, 0xFE	; 254
    2408:	a5 14       	cp	r10, r5
    240a:	50 f4       	brcc	.+20     	; 0x2420 <vfprintf+0x2b0>
    240c:	b4 fe       	sbrs	r11, 4
    240e:	0a c0       	rjmp	.+20     	; 0x2424 <vfprintf+0x2b4>
    2410:	b2 fc       	sbrc	r11, 2
    2412:	08 c0       	rjmp	.+16     	; 0x2424 <vfprintf+0x2b4>
    2414:	2b 2d       	mov	r18, r11
    2416:	2e 7e       	andi	r18, 0xEE	; 238
    2418:	05 c0       	rjmp	.+10     	; 0x2424 <vfprintf+0x2b4>
    241a:	7a 2c       	mov	r7, r10
    241c:	2b 2d       	mov	r18, r11
    241e:	03 c0       	rjmp	.+6      	; 0x2426 <vfprintf+0x2b6>
    2420:	7a 2c       	mov	r7, r10
    2422:	01 c0       	rjmp	.+2      	; 0x2426 <vfprintf+0x2b6>
    2424:	75 2c       	mov	r7, r5
    2426:	24 ff       	sbrs	r18, 4
    2428:	0d c0       	rjmp	.+26     	; 0x2444 <vfprintf+0x2d4>
    242a:	fe 01       	movw	r30, r28
    242c:	ea 0d       	add	r30, r10
    242e:	f1 1d       	adc	r31, r1
    2430:	80 81       	ld	r24, Z
    2432:	80 33       	cpi	r24, 0x30	; 48
    2434:	11 f4       	brne	.+4      	; 0x243a <vfprintf+0x2ca>
    2436:	29 7e       	andi	r18, 0xE9	; 233
    2438:	09 c0       	rjmp	.+18     	; 0x244c <vfprintf+0x2dc>
    243a:	22 ff       	sbrs	r18, 2
    243c:	06 c0       	rjmp	.+12     	; 0x244a <vfprintf+0x2da>
    243e:	73 94       	inc	r7
    2440:	73 94       	inc	r7
    2442:	04 c0       	rjmp	.+8      	; 0x244c <vfprintf+0x2dc>
    2444:	82 2f       	mov	r24, r18
    2446:	86 78       	andi	r24, 0x86	; 134
    2448:	09 f0       	breq	.+2      	; 0x244c <vfprintf+0x2dc>
    244a:	73 94       	inc	r7
    244c:	23 fd       	sbrc	r18, 3
    244e:	13 c0       	rjmp	.+38     	; 0x2476 <vfprintf+0x306>
    2450:	20 ff       	sbrs	r18, 0
    2452:	06 c0       	rjmp	.+12     	; 0x2460 <vfprintf+0x2f0>
    2454:	5a 2c       	mov	r5, r10
    2456:	73 14       	cp	r7, r3
    2458:	18 f4       	brcc	.+6      	; 0x2460 <vfprintf+0x2f0>
    245a:	53 0c       	add	r5, r3
    245c:	57 18       	sub	r5, r7
    245e:	73 2c       	mov	r7, r3
    2460:	73 14       	cp	r7, r3
    2462:	68 f4       	brcc	.+26     	; 0x247e <vfprintf+0x30e>
    2464:	b7 01       	movw	r22, r14
    2466:	80 e2       	ldi	r24, 0x20	; 32
    2468:	90 e0       	ldi	r25, 0x00	; 0
    246a:	2c 87       	std	Y+12, r18	; 0x0c
    246c:	0e 94 1c 10 	call	0x2038	; 0x2038 <fputc>
    2470:	73 94       	inc	r7
    2472:	2c 85       	ldd	r18, Y+12	; 0x0c
    2474:	f5 cf       	rjmp	.-22     	; 0x2460 <vfprintf+0x2f0>
    2476:	73 14       	cp	r7, r3
    2478:	10 f4       	brcc	.+4      	; 0x247e <vfprintf+0x30e>
    247a:	37 18       	sub	r3, r7
    247c:	01 c0       	rjmp	.+2      	; 0x2480 <vfprintf+0x310>
    247e:	31 2c       	mov	r3, r1
    2480:	24 ff       	sbrs	r18, 4
    2482:	12 c0       	rjmp	.+36     	; 0x24a8 <vfprintf+0x338>
    2484:	b7 01       	movw	r22, r14
    2486:	80 e3       	ldi	r24, 0x30	; 48
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	2c 87       	std	Y+12, r18	; 0x0c
    248c:	0e 94 1c 10 	call	0x2038	; 0x2038 <fputc>
    2490:	2c 85       	ldd	r18, Y+12	; 0x0c
    2492:	22 ff       	sbrs	r18, 2
    2494:	17 c0       	rjmp	.+46     	; 0x24c4 <vfprintf+0x354>
    2496:	21 ff       	sbrs	r18, 1
    2498:	03 c0       	rjmp	.+6      	; 0x24a0 <vfprintf+0x330>
    249a:	88 e5       	ldi	r24, 0x58	; 88
    249c:	90 e0       	ldi	r25, 0x00	; 0
    249e:	02 c0       	rjmp	.+4      	; 0x24a4 <vfprintf+0x334>
    24a0:	88 e7       	ldi	r24, 0x78	; 120
    24a2:	90 e0       	ldi	r25, 0x00	; 0
    24a4:	b7 01       	movw	r22, r14
    24a6:	0c c0       	rjmp	.+24     	; 0x24c0 <vfprintf+0x350>
    24a8:	82 2f       	mov	r24, r18
    24aa:	86 78       	andi	r24, 0x86	; 134
    24ac:	59 f0       	breq	.+22     	; 0x24c4 <vfprintf+0x354>
    24ae:	21 fd       	sbrc	r18, 1
    24b0:	02 c0       	rjmp	.+4      	; 0x24b6 <vfprintf+0x346>
    24b2:	80 e2       	ldi	r24, 0x20	; 32
    24b4:	01 c0       	rjmp	.+2      	; 0x24b8 <vfprintf+0x348>
    24b6:	8b e2       	ldi	r24, 0x2B	; 43
    24b8:	27 fd       	sbrc	r18, 7
    24ba:	8d e2       	ldi	r24, 0x2D	; 45
    24bc:	b7 01       	movw	r22, r14
    24be:	90 e0       	ldi	r25, 0x00	; 0
    24c0:	0e 94 1c 10 	call	0x2038	; 0x2038 <fputc>
    24c4:	a5 14       	cp	r10, r5
    24c6:	38 f4       	brcc	.+14     	; 0x24d6 <vfprintf+0x366>
    24c8:	b7 01       	movw	r22, r14
    24ca:	80 e3       	ldi	r24, 0x30	; 48
    24cc:	90 e0       	ldi	r25, 0x00	; 0
    24ce:	0e 94 1c 10 	call	0x2038	; 0x2038 <fputc>
    24d2:	5a 94       	dec	r5
    24d4:	f7 cf       	rjmp	.-18     	; 0x24c4 <vfprintf+0x354>
    24d6:	aa 94       	dec	r10
    24d8:	f4 01       	movw	r30, r8
    24da:	ea 0d       	add	r30, r10
    24dc:	f1 1d       	adc	r31, r1
    24de:	80 81       	ld	r24, Z
    24e0:	b7 01       	movw	r22, r14
    24e2:	90 e0       	ldi	r25, 0x00	; 0
    24e4:	0e 94 1c 10 	call	0x2038	; 0x2038 <fputc>
    24e8:	a1 10       	cpse	r10, r1
    24ea:	f5 cf       	rjmp	.-22     	; 0x24d6 <vfprintf+0x366>
    24ec:	33 20       	and	r3, r3
    24ee:	09 f4       	brne	.+2      	; 0x24f2 <vfprintf+0x382>
    24f0:	51 ce       	rjmp	.-862    	; 0x2194 <vfprintf+0x24>
    24f2:	b7 01       	movw	r22, r14
    24f4:	80 e2       	ldi	r24, 0x20	; 32
    24f6:	90 e0       	ldi	r25, 0x00	; 0
    24f8:	0e 94 1c 10 	call	0x2038	; 0x2038 <fputc>
    24fc:	3a 94       	dec	r3
    24fe:	f6 cf       	rjmp	.-20     	; 0x24ec <vfprintf+0x37c>
    2500:	f7 01       	movw	r30, r14
    2502:	86 81       	ldd	r24, Z+6	; 0x06
    2504:	97 81       	ldd	r25, Z+7	; 0x07
    2506:	02 c0       	rjmp	.+4      	; 0x250c <vfprintf+0x39c>
    2508:	8f ef       	ldi	r24, 0xFF	; 255
    250a:	9f ef       	ldi	r25, 0xFF	; 255
    250c:	2c 96       	adiw	r28, 0x0c	; 12
    250e:	e2 e1       	ldi	r30, 0x12	; 18
    2510:	0c 94 3d 13 	jmp	0x267a	; 0x267a <__epilogue_restores__>

00002514 <calloc>:
    2514:	0f 93       	push	r16
    2516:	1f 93       	push	r17
    2518:	cf 93       	push	r28
    251a:	df 93       	push	r29
    251c:	86 9f       	mul	r24, r22
    251e:	80 01       	movw	r16, r0
    2520:	87 9f       	mul	r24, r23
    2522:	10 0d       	add	r17, r0
    2524:	96 9f       	mul	r25, r22
    2526:	10 0d       	add	r17, r0
    2528:	11 24       	eor	r1, r1
    252a:	c8 01       	movw	r24, r16
    252c:	0e 94 98 0e 	call	0x1d30	; 0x1d30 <malloc>
    2530:	ec 01       	movw	r28, r24
    2532:	00 97       	sbiw	r24, 0x00	; 0
    2534:	29 f0       	breq	.+10     	; 0x2540 <calloc+0x2c>
    2536:	a8 01       	movw	r20, r16
    2538:	60 e0       	ldi	r22, 0x00	; 0
    253a:	70 e0       	ldi	r23, 0x00	; 0
    253c:	0e 94 b1 12 	call	0x2562	; 0x2562 <memset>
    2540:	ce 01       	movw	r24, r28
    2542:	df 91       	pop	r29
    2544:	cf 91       	pop	r28
    2546:	1f 91       	pop	r17
    2548:	0f 91       	pop	r16
    254a:	08 95       	ret

0000254c <strnlen_P>:
    254c:	fc 01       	movw	r30, r24
    254e:	05 90       	lpm	r0, Z+
    2550:	61 50       	subi	r22, 0x01	; 1
    2552:	70 40       	sbci	r23, 0x00	; 0
    2554:	01 10       	cpse	r0, r1
    2556:	d8 f7       	brcc	.-10     	; 0x254e <strnlen_P+0x2>
    2558:	80 95       	com	r24
    255a:	90 95       	com	r25
    255c:	8e 0f       	add	r24, r30
    255e:	9f 1f       	adc	r25, r31
    2560:	08 95       	ret

00002562 <memset>:
    2562:	dc 01       	movw	r26, r24
    2564:	01 c0       	rjmp	.+2      	; 0x2568 <memset+0x6>
    2566:	6d 93       	st	X+, r22
    2568:	41 50       	subi	r20, 0x01	; 1
    256a:	50 40       	sbci	r21, 0x00	; 0
    256c:	e0 f7       	brcc	.-8      	; 0x2566 <memset+0x4>
    256e:	08 95       	ret

00002570 <strnlen>:
    2570:	fc 01       	movw	r30, r24
    2572:	61 50       	subi	r22, 0x01	; 1
    2574:	70 40       	sbci	r23, 0x00	; 0
    2576:	01 90       	ld	r0, Z+
    2578:	01 10       	cpse	r0, r1
    257a:	d8 f7       	brcc	.-10     	; 0x2572 <strnlen+0x2>
    257c:	80 95       	com	r24
    257e:	90 95       	com	r25
    2580:	8e 0f       	add	r24, r30
    2582:	9f 1f       	adc	r25, r31
    2584:	08 95       	ret

00002586 <__ultoa_invert>:
    2586:	fa 01       	movw	r30, r20
    2588:	aa 27       	eor	r26, r26
    258a:	28 30       	cpi	r18, 0x08	; 8
    258c:	51 f1       	breq	.+84     	; 0x25e2 <__ultoa_invert+0x5c>
    258e:	20 31       	cpi	r18, 0x10	; 16
    2590:	81 f1       	breq	.+96     	; 0x25f2 <__ultoa_invert+0x6c>
    2592:	e8 94       	clt
    2594:	6f 93       	push	r22
    2596:	6e 7f       	andi	r22, 0xFE	; 254
    2598:	6e 5f       	subi	r22, 0xFE	; 254
    259a:	7f 4f       	sbci	r23, 0xFF	; 255
    259c:	8f 4f       	sbci	r24, 0xFF	; 255
    259e:	9f 4f       	sbci	r25, 0xFF	; 255
    25a0:	af 4f       	sbci	r26, 0xFF	; 255
    25a2:	b1 e0       	ldi	r27, 0x01	; 1
    25a4:	3e d0       	rcall	.+124    	; 0x2622 <__ultoa_invert+0x9c>
    25a6:	b4 e0       	ldi	r27, 0x04	; 4
    25a8:	3c d0       	rcall	.+120    	; 0x2622 <__ultoa_invert+0x9c>
    25aa:	67 0f       	add	r22, r23
    25ac:	78 1f       	adc	r23, r24
    25ae:	89 1f       	adc	r24, r25
    25b0:	9a 1f       	adc	r25, r26
    25b2:	a1 1d       	adc	r26, r1
    25b4:	68 0f       	add	r22, r24
    25b6:	79 1f       	adc	r23, r25
    25b8:	8a 1f       	adc	r24, r26
    25ba:	91 1d       	adc	r25, r1
    25bc:	a1 1d       	adc	r26, r1
    25be:	6a 0f       	add	r22, r26
    25c0:	71 1d       	adc	r23, r1
    25c2:	81 1d       	adc	r24, r1
    25c4:	91 1d       	adc	r25, r1
    25c6:	a1 1d       	adc	r26, r1
    25c8:	20 d0       	rcall	.+64     	; 0x260a <__ultoa_invert+0x84>
    25ca:	09 f4       	brne	.+2      	; 0x25ce <__ultoa_invert+0x48>
    25cc:	68 94       	set
    25ce:	3f 91       	pop	r19
    25d0:	2a e0       	ldi	r18, 0x0A	; 10
    25d2:	26 9f       	mul	r18, r22
    25d4:	11 24       	eor	r1, r1
    25d6:	30 19       	sub	r19, r0
    25d8:	30 5d       	subi	r19, 0xD0	; 208
    25da:	31 93       	st	Z+, r19
    25dc:	de f6       	brtc	.-74     	; 0x2594 <__ultoa_invert+0xe>
    25de:	cf 01       	movw	r24, r30
    25e0:	08 95       	ret
    25e2:	46 2f       	mov	r20, r22
    25e4:	47 70       	andi	r20, 0x07	; 7
    25e6:	40 5d       	subi	r20, 0xD0	; 208
    25e8:	41 93       	st	Z+, r20
    25ea:	b3 e0       	ldi	r27, 0x03	; 3
    25ec:	0f d0       	rcall	.+30     	; 0x260c <__ultoa_invert+0x86>
    25ee:	c9 f7       	brne	.-14     	; 0x25e2 <__ultoa_invert+0x5c>
    25f0:	f6 cf       	rjmp	.-20     	; 0x25de <__ultoa_invert+0x58>
    25f2:	46 2f       	mov	r20, r22
    25f4:	4f 70       	andi	r20, 0x0F	; 15
    25f6:	40 5d       	subi	r20, 0xD0	; 208
    25f8:	4a 33       	cpi	r20, 0x3A	; 58
    25fa:	18 f0       	brcs	.+6      	; 0x2602 <__ultoa_invert+0x7c>
    25fc:	49 5d       	subi	r20, 0xD9	; 217
    25fe:	31 fd       	sbrc	r19, 1
    2600:	40 52       	subi	r20, 0x20	; 32
    2602:	41 93       	st	Z+, r20
    2604:	02 d0       	rcall	.+4      	; 0x260a <__ultoa_invert+0x84>
    2606:	a9 f7       	brne	.-22     	; 0x25f2 <__ultoa_invert+0x6c>
    2608:	ea cf       	rjmp	.-44     	; 0x25de <__ultoa_invert+0x58>
    260a:	b4 e0       	ldi	r27, 0x04	; 4
    260c:	a6 95       	lsr	r26
    260e:	97 95       	ror	r25
    2610:	87 95       	ror	r24
    2612:	77 95       	ror	r23
    2614:	67 95       	ror	r22
    2616:	ba 95       	dec	r27
    2618:	c9 f7       	brne	.-14     	; 0x260c <__ultoa_invert+0x86>
    261a:	00 97       	sbiw	r24, 0x00	; 0
    261c:	61 05       	cpc	r22, r1
    261e:	71 05       	cpc	r23, r1
    2620:	08 95       	ret
    2622:	9b 01       	movw	r18, r22
    2624:	ac 01       	movw	r20, r24
    2626:	0a 2e       	mov	r0, r26
    2628:	06 94       	lsr	r0
    262a:	57 95       	ror	r21
    262c:	47 95       	ror	r20
    262e:	37 95       	ror	r19
    2630:	27 95       	ror	r18
    2632:	ba 95       	dec	r27
    2634:	c9 f7       	brne	.-14     	; 0x2628 <__ultoa_invert+0xa2>
    2636:	62 0f       	add	r22, r18
    2638:	73 1f       	adc	r23, r19
    263a:	84 1f       	adc	r24, r20
    263c:	95 1f       	adc	r25, r21
    263e:	a0 1d       	adc	r26, r0
    2640:	08 95       	ret

00002642 <__prologue_saves__>:
    2642:	2f 92       	push	r2
    2644:	3f 92       	push	r3
    2646:	4f 92       	push	r4
    2648:	5f 92       	push	r5
    264a:	6f 92       	push	r6
    264c:	7f 92       	push	r7
    264e:	8f 92       	push	r8
    2650:	9f 92       	push	r9
    2652:	af 92       	push	r10
    2654:	bf 92       	push	r11
    2656:	cf 92       	push	r12
    2658:	df 92       	push	r13
    265a:	ef 92       	push	r14
    265c:	ff 92       	push	r15
    265e:	0f 93       	push	r16
    2660:	1f 93       	push	r17
    2662:	cf 93       	push	r28
    2664:	df 93       	push	r29
    2666:	cd b7       	in	r28, 0x3d	; 61
    2668:	de b7       	in	r29, 0x3e	; 62
    266a:	ca 1b       	sub	r28, r26
    266c:	db 0b       	sbc	r29, r27
    266e:	0f b6       	in	r0, 0x3f	; 63
    2670:	f8 94       	cli
    2672:	de bf       	out	0x3e, r29	; 62
    2674:	0f be       	out	0x3f, r0	; 63
    2676:	cd bf       	out	0x3d, r28	; 61
    2678:	09 94       	ijmp

0000267a <__epilogue_restores__>:
    267a:	2a 88       	ldd	r2, Y+18	; 0x12
    267c:	39 88       	ldd	r3, Y+17	; 0x11
    267e:	48 88       	ldd	r4, Y+16	; 0x10
    2680:	5f 84       	ldd	r5, Y+15	; 0x0f
    2682:	6e 84       	ldd	r6, Y+14	; 0x0e
    2684:	7d 84       	ldd	r7, Y+13	; 0x0d
    2686:	8c 84       	ldd	r8, Y+12	; 0x0c
    2688:	9b 84       	ldd	r9, Y+11	; 0x0b
    268a:	aa 84       	ldd	r10, Y+10	; 0x0a
    268c:	b9 84       	ldd	r11, Y+9	; 0x09
    268e:	c8 84       	ldd	r12, Y+8	; 0x08
    2690:	df 80       	ldd	r13, Y+7	; 0x07
    2692:	ee 80       	ldd	r14, Y+6	; 0x06
    2694:	fd 80       	ldd	r15, Y+5	; 0x05
    2696:	0c 81       	ldd	r16, Y+4	; 0x04
    2698:	1b 81       	ldd	r17, Y+3	; 0x03
    269a:	aa 81       	ldd	r26, Y+2	; 0x02
    269c:	b9 81       	ldd	r27, Y+1	; 0x01
    269e:	ce 0f       	add	r28, r30
    26a0:	d1 1d       	adc	r29, r1
    26a2:	0f b6       	in	r0, 0x3f	; 63
    26a4:	f8 94       	cli
    26a6:	de bf       	out	0x3e, r29	; 62
    26a8:	0f be       	out	0x3f, r0	; 63
    26aa:	cd bf       	out	0x3d, r28	; 61
    26ac:	ed 01       	movw	r28, r26
    26ae:	08 95       	ret

000026b0 <_exit>:
    26b0:	f8 94       	cli

000026b2 <__stop_program>:
    26b2:	ff cf       	rjmp	.-2      	; 0x26b2 <__stop_program>
